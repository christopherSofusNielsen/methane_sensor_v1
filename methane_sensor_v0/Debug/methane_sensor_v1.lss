
methane_sensor_v1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000019ae  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000190  00800100  00800100  000019ae  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  000019ae  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000408  00000000  00000000  00001a09  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004ddc  00000000  00000000  00001e11  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000014e8  00000000  00000000  00006bed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001d71  00000000  00000000  000080d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000009ec  00000000  00000000  00009e48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000044f  00000000  00000000  0000a834  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001ae0  00000000  00000000  0000ac83  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000340  00000000  00000000  0000c763  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00001936  00001936  000019aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000caa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.PM_HAL_SCD30_power_init 0000000e  000018b2  000018b2  00001926  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.PM_HAL_SCD30_power 00000014  00001840  00001840  000018b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__vector_3 00000014  00001854  00001854  000018c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.SCD30_HAL_init 0000000e  000018c0  000018c0  00001934  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.SCD30_HAL_data_ready 0000000a  00001904  00001904  00001978  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_16 0000004e  0000133e  0000133e  000013b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss._cb      00000002  00800423  00800423  000019ae  2**0
                  ALLOC
 21 .text.__vector_13 0000004e  0000138c  0000138c  00001400  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .bss._cb      00000002  00800425  00800425  000019ae  2**0
                  ALLOC
 23 .text.__vector_9 0000007c  00000eec  00000eec  00000f60  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .bss.cnt      00000001  00800435  00800435  000019ae  2**0
                  ALLOC
 25 .bss.callbacks 0000000a  00800407  00800407  000019ae  2**0
                  ALLOC
 26 .text.start_and_write_data 0000004c  000013da  000013da  0000144e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.read_and_stop 0000005a  000012e4  000012e4  00001358  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.TWI_API_write_data_stop 0000001a  00001826  00001826  0000189a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.TWI_API_read_data_ack_end_nack_stop 00000032  000016d8  000016d8  0000174c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.TWI_HAL_init 00000012  00001890  00001890  00001904  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.TWI_HAL_start 00000048  00001470  00001470  000014e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.TWI_HAL_write_byte 00000020  00001806  00001806  0000187a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.TWI_HAL_read_byte_ack 00000014  00001868  00001868  000018dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.TWI_HAL_read_byte_nack 00000014  0000187c  0000187c  000018f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.TWI_HAL_stop 00000010  000018a2  000018a2  00001916  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.__vector_22 0000006e  00001142  00001142  000011b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.__vector_20 00000074  0000105a  0000105a  000010ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .bss.rx_buffer_has_message 00000001  00800436  00800436  000019ae  2**0
                  ALLOC
 39 .bss.rx_buffer_data_len 00000001  00800437  00800437  000019ae  2**0
                  ALLOC
 40 .bss.tx_buffer_cursor 00000002  00800427  00800427  000019ae  2**0
                  ALLOC
 41 .bss.tx_buffer_data_len 00000002  00800429  00800429  000019ae  2**0
                  ALLOC
 42 .text.uart1_hal_init 0000003c  0000158a  0000158a  000015fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.uart1_hal_send_string 00000096  00000e56  00000e56  00000eca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.__vector_30 0000006e  000011b0  000011b0  00001224  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.__vector_28 00000074  000010ce  000010ce  00001142  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .bss.rx_buffer_has_message 00000001  00800438  00800438  000019ae  2**0
                  ALLOC
 47 .bss.rx_buffer_data_len 00000001  00800439  00800439  000019ae  2**0
                  ALLOC
 48 .bss.rx_buffer 0000004b  008003bc  008003bc  000019ae  2**0
                  ALLOC
 49 .bss.tx_buffer_cursor 00000002  0080042b  0080042b  000019ae  2**0
                  ALLOC
 50 .bss.tx_buffer_data_len 00000002  0080042d  0080042d  000019ae  2**0
                  ALLOC
 51 .bss.tx_buffer 0000012c  00800290  00800290  000019ae  2**0
                  ALLOC
 52 .text.main    0000000a  0000190e  0000190e  00001982  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.clear_sampling_data 0000004a  00001426  00001426  0000149a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.bytes_2_uint 00000068  0000121e  0000121e  00001292  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.init_measurement 00000038  000015c6  000015c6  0000163a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.validate_data 00000032  0000170a  0000170a  0000177e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.SCD30_sensor_on 00000026  0000179a  0000179a  0000180e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.read_all_values 00000116  00000afc  00000afc  00000b70  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.SCD30_get_reading 00000032  0000173c  0000173c  000017b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .bss.si_counter 00000002  0080042f  0080042f  000019ae  2**0
                  ALLOC
 61 .bss.highest_si 00000002  00800431  00800431  000019ae  2**0
                  ALLOC
 62 .bss.lowest_si 00000002  00800433  00800433  000019ae  2**0
                  ALLOC
 63 .bss.hum_pars 00000006  00800411  00800411  000019ae  2**0
                  ALLOC
 64 .bss.temp_pars 00000006  00800417  00800417  000019ae  2**0
                  ALLOC
 65 .bss.co2_pars 00000006  0080041d  0080041d  000019ae  2**0
                  ALLOC
 66 .progmemx.data.READ_DATA_CMD 00000002  00000206  00000206  0000027a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 67 .progmemx.data.SET_MEASUREMENT_INTERVAL 00000005  000001fc  000001fc  00000270  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 68 .progmemx.data.TRIGGER_CONT_MEASUREMENT 00000005  00000201  00000201  00000275  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 69 .progmemx.data 00000024  000001d0  000001d0  00000244  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 70 .text.test_get_reading 000000b4  00000da2  00000da2  00000e16  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.test_SCD30_module_start 00000024  000017c0  000017c0  00001834  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.test_runner 00000006  0000192a  0000192a  0000199e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.calc_crc8 00000036  00001636  00001636  000016aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.avrlibc.fplib 0000000a  00001918  00001918  0000198c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.avrlibc.fplib 0000005e  00001286  00001286  000012fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.avrlibc.fplib 0000007a  00000f68  00000f68  00000fdc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.avrlibc.fplib 00000048  000014b8  000014b8  0000152c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.avrlibc.fplib 0000000c  000018f8  000018f8  0000196c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.avrlibc.fplib 00000006  00001930  00001930  000019a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.avrlibc.fplib 0000000e  000018ce  000018ce  00001942  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.avrlibc.fplib 0000000e  000018dc  000018dc  00001950  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.avrlibc.fplib 00000022  000017e4  000017e4  00001858  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.avrlibc.fplib 00000044  00001546  00001546  000015ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.avrlibc.fplib 0000000e  000018ea  000018ea  0000195e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.avrlibc.fplib 00000008  00001922  00001922  00001996  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.avrlibc.fplib 000000d4  00000c12  00000c12  00000c86  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .progmemx.data 00000008  000001f4  000001f4  00000268  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 88 .text.avrlibc 00000744  00000208  00000208  0000027c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.libgcc.prologue 00000038  000015fe  000015fe  00001672  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text.libgcc.prologue 00000036  0000166c  0000166c  000016e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.avrlibc 000001b0  0000094c  0000094c  000009c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.avrlibc 0000002c  0000176e  0000176e  000017e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.avrlibc 00000036  000016a2  000016a2  00001716  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.avrlibc 00000078  00000fe2  00000fe2  00001056  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.avrlibc 00000046  00001500  00001500  00001574  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 .text.avrlibc 000000bc  00000ce6  00000ce6  00000d5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 be 00 	jmp	0x17c	; 0x17c <__ctors_end>
   4:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
   8:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
   c:	0c 94 2a 0c 	jmp	0x1854	; 0x1854 <__vector_3>
  10:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  14:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  18:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  1c:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  20:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  24:	0c 94 76 07 	jmp	0xeec	; 0xeec <__vector_9>
  28:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  2c:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  30:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  34:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__vector_13>
  38:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  3c:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  40:	0c 94 9f 09 	jmp	0x133e	; 0x133e <__vector_16>
  44:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  48:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  4c:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  50:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__vector_20>
  54:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  58:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__vector_22>
  5c:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  60:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  64:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  68:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  6c:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  70:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__vector_28>
  74:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__bad_interrupt>
  78:	0c 94 d8 08 	jmp	0x11b0	; 0x11b0 <__vector_30>

0000007c <.dinit>:
  7c:	01 00       	.word	0x0001	; ????
  7e:	04 3a       	cpi	r16, 0xA4	; 164
  80:	80 00       	.word	0x0080	; ????

00000082 <__trampolines_end>:
  82:	00 40       	sbci	r16, 0x00	; 0
  84:	7a 10       	cpse	r7, r10
  86:	f3 5a       	subi	r31, 0xA3	; 163
  88:	00 a0       	ldd	r0, Z+32	; 0x20
  8a:	72 4e       	sbci	r23, 0xE2	; 226
  8c:	18 09       	sbc	r17, r8
  8e:	00 10       	cpse	r0, r0
  90:	a5 d4       	rcall	.+2378   	; 0x9dc <__ftoa_engine+0x90>
  92:	e8 00       	.word	0x00e8	; ????
  94:	00 e8       	ldi	r16, 0x80	; 128
  96:	76 48       	sbci	r23, 0x86	; 134
  98:	17 00       	.word	0x0017	; ????
  9a:	00 e4       	ldi	r16, 0x40	; 64
  9c:	0b 54       	subi	r16, 0x4B	; 75
  9e:	02 00       	.word	0x0002	; ????
  a0:	00 ca       	rjmp	.-3072   	; 0xfffff4a2 <__eeprom_end+0xff7ef4a2>
  a2:	9a 3b       	cpi	r25, 0xBA	; 186
  a4:	00 00       	nop
  a6:	00 e1       	ldi	r16, 0x10	; 16
  a8:	f5 05       	cpc	r31, r5
  aa:	00 00       	nop
  ac:	80 96       	adiw	r24, 0x20	; 32
  ae:	98 00       	.word	0x0098	; ????
  b0:	00 00       	nop
  b2:	40 42       	sbci	r20, 0x20	; 32
  b4:	0f 00       	.word	0x000f	; ????
  b6:	00 00       	nop
  b8:	a0 86       	std	Z+8, r10	; 0x08
  ba:	01 00       	.word	0x0001	; ????
  bc:	00 00       	nop
  be:	10 27       	eor	r17, r16
  c0:	00 00       	nop
  c2:	00 00       	nop
  c4:	e8 03       	fmulsu	r22, r16
  c6:	00 00       	nop
  c8:	00 00       	nop
  ca:	64 00       	.word	0x0064	; ????
  cc:	00 00       	nop
  ce:	00 00       	nop
  d0:	0a 00       	.word	0x000a	; ????
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	01 00       	.word	0x0001	; ????
  d8:	00 00       	nop
  da:	00 00       	nop
  dc:	2c 76       	andi	r18, 0x6C	; 108
  de:	d8 88       	ldd	r13, Y+16	; 0x10
  e0:	dc 67       	ori	r29, 0x7C	; 124
  e2:	4f 08       	sbc	r4, r15
  e4:	23 df       	rcall	.-442    	; 0xffffff2c <__eeprom_end+0xff7eff2c>
  e6:	c1 df       	rcall	.-126    	; 0x6a <__SREG__+0x2b>
  e8:	ae 59       	subi	r26, 0x9E	; 158
  ea:	e1 b1       	in	r30, 0x01	; 1
  ec:	b7 96       	adiw	r30, 0x27	; 39
  ee:	e5 e3       	ldi	r30, 0x35	; 53
  f0:	e4 53       	subi	r30, 0x34	; 52
  f2:	c6 3a       	cpi	r28, 0xA6	; 166
  f4:	e6 51       	subi	r30, 0x16	; 22
  f6:	99 76       	andi	r25, 0x69	; 105
  f8:	96 e8       	ldi	r25, 0x86	; 134
  fa:	e6 c2       	rjmp	.+1484   	; 0x6c8 <__LOCK_REGION_LENGTH__+0x2c8>
  fc:	84 26       	eor	r8, r20
  fe:	eb 89       	ldd	r30, Y+19	; 0x13
 100:	8c 9b       	sbis	0x11, 4	; 17
 102:	62 ed       	ldi	r22, 0xD2	; 210
 104:	40 7c       	andi	r20, 0xC0	; 192
 106:	6f fc       	.word	0xfc6f	; ????
 108:	ef bc       	out	0x2f, r14	; 47
 10a:	9c 9f       	mul	r25, r28
 10c:	40 f2       	brcs	.-112    	; 0x9e <__trampolines_end+0x1c>
 10e:	ba a5       	ldd	r27, Y+42	; 0x2a
 110:	6f a5       	ldd	r22, Y+47	; 0x2f
 112:	f4 90       	lpm	r15, Z
 114:	05 5a       	subi	r16, 0xA5	; 165
 116:	2a f7       	brpl	.-54     	; 0xe2 <__trampolines_end+0x60>
 118:	5c 93       	st	X, r21
 11a:	6b 6c       	ori	r22, 0xCB	; 203
 11c:	f9 67       	ori	r31, 0x79	; 121
 11e:	6d c1       	rjmp	.+730    	; 0x3fa <vfprintf+0x1f2>
 120:	1b fc       	.word	0xfc1b	; ????
 122:	e0 e4       	ldi	r30, 0x40	; 64
 124:	0d 47       	sbci	r16, 0x7D	; 125
 126:	fe f5       	brtc	.+126    	; 0x1a6 <__do_copy_data+0x1e>
 128:	20 e6       	ldi	r18, 0x60	; 96
 12a:	b5 00       	.word	0x00b5	; ????
 12c:	d0 ed       	ldi	r29, 0xD0	; 208
 12e:	90 2e       	mov	r9, r16
 130:	03 00       	.word	0x0003	; ????
 132:	94 35       	cpi	r25, 0x54	; 84
 134:	77 05       	cpc	r23, r7
 136:	00 80       	ld	r0, Z
 138:	84 1e       	adc	r8, r20
 13a:	08 00       	.word	0x0008	; ????
 13c:	00 20       	and	r0, r0
 13e:	4e 0a       	sbc	r4, r30
 140:	00 00       	nop
 142:	00 c8       	rjmp	.-4096   	; 0xfffff144 <__eeprom_end+0xff7ef144>
 144:	0c 33       	cpi	r16, 0x3C	; 60
 146:	33 33       	cpi	r19, 0x33	; 51
 148:	33 0f       	add	r19, r19
 14a:	98 6e       	ori	r25, 0xE8	; 232
 14c:	12 83       	std	Z+2, r17	; 0x02
 14e:	11 41       	sbci	r17, 0x11	; 17
 150:	ef 8d       	ldd	r30, Y+31	; 0x1f
 152:	21 14       	cp	r2, r1
 154:	89 3b       	cpi	r24, 0xB9	; 185
 156:	e6 55       	subi	r30, 0x56	; 86
 158:	16 cf       	rjmp	.-468    	; 0xffffff86 <__eeprom_end+0xff7eff86>
 15a:	fe e6       	ldi	r31, 0x6E	; 110
 15c:	db 18       	sub	r13, r11
 15e:	d1 84       	ldd	r13, Z+9	; 0x09
 160:	4b 38       	cpi	r20, 0x8B	; 139
 162:	1b f7       	brvc	.-58     	; 0x12a <__trampolines_end+0xa8>
 164:	7c 1d       	adc	r23, r12
 166:	90 1d       	adc	r25, r0
 168:	a4 bb       	out	0x14, r26	; 20
 16a:	e4 24       	eor	r14, r4
 16c:	20 32       	cpi	r18, 0x20	; 32
 16e:	84 72       	andi	r24, 0x24	; 36
 170:	5e 22       	and	r5, r30
 172:	81 00       	.word	0x0081	; ????
 174:	c9 f1       	breq	.+114    	; 0x1e8 <_etext+0x18>
 176:	24 ec       	ldi	r18, 0xC4	; 196
 178:	a1 e5       	ldi	r26, 0x51	; 81
 17a:	3d 27       	eor	r19, r29

0000017c <__ctors_end>:
 17c:	11 24       	eor	r1, r1
 17e:	1f be       	out	0x3f, r1	; 63
 180:	cf ef       	ldi	r28, 0xFF	; 255
 182:	d0 e1       	ldi	r29, 0x10	; 16
 184:	de bf       	out	0x3e, r29	; 62
 186:	cd bf       	out	0x3d, r28	; 61

00000188 <__do_copy_data>:
 188:	ec e7       	ldi	r30, 0x7C	; 124
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	17 c0       	rjmp	.+46     	; 0x1be <__do_clear_bss+0x8>
 190:	b5 91       	lpm	r27, Z+
 192:	a5 91       	lpm	r26, Z+
 194:	35 91       	lpm	r19, Z+
 196:	25 91       	lpm	r18, Z+
 198:	05 91       	lpm	r16, Z+
 19a:	07 fd       	sbrc	r16, 7
 19c:	0c c0       	rjmp	.+24     	; 0x1b6 <__do_clear_bss>
 19e:	95 91       	lpm	r25, Z+
 1a0:	85 91       	lpm	r24, Z+
 1a2:	ef 01       	movw	r28, r30
 1a4:	f9 2f       	mov	r31, r25
 1a6:	e8 2f       	mov	r30, r24
 1a8:	05 90       	lpm	r0, Z+
 1aa:	0d 92       	st	X+, r0
 1ac:	a2 17       	cp	r26, r18
 1ae:	b3 07       	cpc	r27, r19
 1b0:	d9 f7       	brne	.-10     	; 0x1a8 <__do_copy_data+0x20>
 1b2:	fe 01       	movw	r30, r28
 1b4:	04 c0       	rjmp	.+8      	; 0x1be <__do_clear_bss+0x8>

000001b6 <__do_clear_bss>:
 1b6:	1d 92       	st	X+, r1
 1b8:	a2 17       	cp	r26, r18
 1ba:	b3 07       	cpc	r27, r19
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <__do_clear_bss>
 1be:	e1 38       	cpi	r30, 0x81	; 129
 1c0:	f4 07       	cpc	r31, r20
 1c2:	31 f7       	brne	.-52     	; 0x190 <__do_copy_data+0x8>
 1c4:	0e 94 87 0c 	call	0x190e	; 0x190e <main>
 1c8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <_exit>

000001cc <_exit>:
 1cc:	f8 94       	cli

000001ce <__stop_program>:
 1ce:	ff cf       	rjmp	.-2      	; 0x1ce <__stop_program>

Disassembly of section .text:

00001936 <__bad_interrupt>:
    1936:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.PM_HAL_SCD30_power_init:

000018b2 <PM_HAL_SCD30_power_init>:
		clear_bit(PORTA, 5);
	}
}

void PM_HAL_SCD30_power_init(){
	set_bit(DDRA, 4);
    18b2:	81 b1       	in	r24, 0x01	; 1
    18b4:	80 61       	ori	r24, 0x10	; 16
    18b6:	81 b9       	out	0x01, r24	; 1
	clear_bit(PORTA, 4);
    18b8:	82 b1       	in	r24, 0x02	; 2
    18ba:	8f 7e       	andi	r24, 0xEF	; 239
    18bc:	82 b9       	out	0x02, r24	; 2
    18be:	08 95       	ret

Disassembly of section .text.PM_HAL_SCD30_power:

00001840 <PM_HAL_SCD30_power>:

void PM_HAL_meth_power(bool on){
	if(on){
		set_bit(PORTA, 5);
	}else{
		clear_bit(PORTA, 5);
    1840:	88 23       	and	r24, r24
    1842:	21 f0       	breq	.+8      	; 0x184c <PM_HAL_SCD30_power+0xc>
    1844:	82 b1       	in	r24, 0x02	; 2
    1846:	80 61       	ori	r24, 0x10	; 16
    1848:	82 b9       	out	0x02, r24	; 2
    184a:	08 95       	ret
    184c:	82 b1       	in	r24, 0x02	; 2
    184e:	8f 7e       	andi	r24, 0xEF	; 239
    1850:	82 b9       	out	0x02, r24	; 2
    1852:	08 95       	ret

Disassembly of section .text.__vector_3:

00001854 <__vector_3>:
    1854:	1f 92       	push	r1
    1856:	0f 92       	push	r0
    1858:	0f b6       	in	r0, 0x3f	; 63
    185a:	0f 92       	push	r0
    185c:	11 24       	eor	r1, r1
    185e:	0f 90       	pop	r0
    1860:	0f be       	out	0x3f, r0	; 63
    1862:	0f 90       	pop	r0
    1864:	1f 90       	pop	r1
    1866:	18 95       	reti

Disassembly of section .text.SCD30_HAL_init:

000018c0 <SCD30_HAL_init>:
#include <xc.h>
#include "../../util/bit_operators.h"
#include <stdbool.h>

void SCD30_HAL_init(){
	clear_bit(DDRC, 6);
    18c0:	87 b1       	in	r24, 0x07	; 7
    18c2:	8f 7b       	andi	r24, 0xBF	; 191
    18c4:	87 b9       	out	0x07, r24	; 7
	clear_bit(PORTC, 6);
    18c6:	88 b1       	in	r24, 0x08	; 8
    18c8:	8f 7b       	andi	r24, 0xBF	; 191
    18ca:	88 b9       	out	0x08, r24	; 8
    18cc:	08 95       	ret

Disassembly of section .text.SCD30_HAL_data_ready:

00001904 <SCD30_HAL_data_ready>:
}

bool SCD30_HAL_data_ready(){
	return get_bit(PINC, 6);
    1904:	86 b1       	in	r24, 0x06	; 6
    1906:	86 fb       	bst	r24, 6
    1908:	88 27       	eor	r24, r24
    190a:	80 f9       	bld	r24, 0
    190c:	08 95       	ret

Disassembly of section .text.__vector_16:

0000133e <__vector_16>:

void TC0_HAL_stop(){
	TCCR0B=0x00; 
}

ISR(TIMER0_COMPA_vect){
    133e:	1f 92       	push	r1
    1340:	0f 92       	push	r0
    1342:	0f b6       	in	r0, 0x3f	; 63
    1344:	0f 92       	push	r0
    1346:	11 24       	eor	r1, r1
    1348:	2f 93       	push	r18
    134a:	3f 93       	push	r19
    134c:	4f 93       	push	r20
    134e:	5f 93       	push	r21
    1350:	6f 93       	push	r22
    1352:	7f 93       	push	r23
    1354:	8f 93       	push	r24
    1356:	9f 93       	push	r25
    1358:	af 93       	push	r26
    135a:	bf 93       	push	r27
    135c:	ef 93       	push	r30
    135e:	ff 93       	push	r31
	_cb();
    1360:	e0 91 23 04 	lds	r30, 0x0423	; 0x800423 <_cb>
    1364:	f0 91 24 04 	lds	r31, 0x0424	; 0x800424 <_cb+0x1>
    1368:	09 95       	icall
}
    136a:	ff 91       	pop	r31
    136c:	ef 91       	pop	r30
    136e:	bf 91       	pop	r27
    1370:	af 91       	pop	r26
    1372:	9f 91       	pop	r25
    1374:	8f 91       	pop	r24
    1376:	7f 91       	pop	r23
    1378:	6f 91       	pop	r22
    137a:	5f 91       	pop	r21
    137c:	4f 91       	pop	r20
    137e:	3f 91       	pop	r19
    1380:	2f 91       	pop	r18
    1382:	0f 90       	pop	r0
    1384:	0f be       	out	0x3f, r0	; 63
    1386:	0f 90       	pop	r0
    1388:	1f 90       	pop	r1
    138a:	18 95       	reti

Disassembly of section .text.__vector_13:

0000138c <__vector_13>:

void TC1_HAL_stop(){
	clear_byte(TCCR1B, 0b00000111);
}

ISR(TIMER1_COMPA_vect){
    138c:	1f 92       	push	r1
    138e:	0f 92       	push	r0
    1390:	0f b6       	in	r0, 0x3f	; 63
    1392:	0f 92       	push	r0
    1394:	11 24       	eor	r1, r1
    1396:	2f 93       	push	r18
    1398:	3f 93       	push	r19
    139a:	4f 93       	push	r20
    139c:	5f 93       	push	r21
    139e:	6f 93       	push	r22
    13a0:	7f 93       	push	r23
    13a2:	8f 93       	push	r24
    13a4:	9f 93       	push	r25
    13a6:	af 93       	push	r26
    13a8:	bf 93       	push	r27
    13aa:	ef 93       	push	r30
    13ac:	ff 93       	push	r31
	_cb();
    13ae:	e0 91 25 04 	lds	r30, 0x0425	; 0x800425 <_cb>
    13b2:	f0 91 26 04 	lds	r31, 0x0426	; 0x800426 <_cb+0x1>
    13b6:	09 95       	icall
    13b8:	ff 91       	pop	r31
    13ba:	ef 91       	pop	r30
    13bc:	bf 91       	pop	r27
    13be:	af 91       	pop	r26
    13c0:	9f 91       	pop	r25
    13c2:	8f 91       	pop	r24
    13c4:	7f 91       	pop	r23
    13c6:	6f 91       	pop	r22
    13c8:	5f 91       	pop	r21
    13ca:	4f 91       	pop	r20
    13cc:	3f 91       	pop	r19
    13ce:	2f 91       	pop	r18
    13d0:	0f 90       	pop	r0
    13d2:	0f be       	out	0x3f, r0	; 63
    13d4:	0f 90       	pop	r0
    13d6:	1f 90       	pop	r1
    13d8:	18 95       	reti

Disassembly of section .text.__vector_9:

00000eec <__vector_9>:
	if(cbCounter==0){
		stop_timer();		
	}
}

ISR(TIMER2_COMPA_vect){
 eec:	1f 92       	push	r1
 eee:	0f 92       	push	r0
 ef0:	0f b6       	in	r0, 0x3f	; 63
 ef2:	0f 92       	push	r0
 ef4:	11 24       	eor	r1, r1
 ef6:	2f 93       	push	r18
 ef8:	3f 93       	push	r19
 efa:	4f 93       	push	r20
 efc:	5f 93       	push	r21
 efe:	6f 93       	push	r22
 f00:	7f 93       	push	r23
 f02:	8f 93       	push	r24
 f04:	9f 93       	push	r25
 f06:	af 93       	push	r26
 f08:	bf 93       	push	r27
 f0a:	cf 93       	push	r28
 f0c:	ef 93       	push	r30
 f0e:	ff 93       	push	r31
	cnt++;
 f10:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <cnt>
 f14:	8f 5f       	subi	r24, 0xFF	; 255
 f16:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <cnt>
	
	if(cnt==TC2_CNT_MATCH){
 f1a:	80 32       	cpi	r24, 0x20	; 32
 f1c:	99 f4       	brne	.+38     	; 0xf44 <__vector_9+0x58>
		cnt=0;
 f1e:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <cnt>
		for (uint8_t i=0; i<MAX_CALLBACKS; i++)
 f22:	c0 e0       	ldi	r28, 0x00	; 0
 f24:	0d c0       	rjmp	.+26     	; 0xf40 <__vector_9+0x54>
		{
			if(callbacks[i]!=NULL){
 f26:	ec 2f       	mov	r30, r28
 f28:	f0 e0       	ldi	r31, 0x00	; 0
 f2a:	ee 0f       	add	r30, r30
 f2c:	ff 1f       	adc	r31, r31
 f2e:	e9 5f       	subi	r30, 0xF9	; 249
 f30:	fb 4f       	sbci	r31, 0xFB	; 251
 f32:	01 90       	ld	r0, Z+
 f34:	f0 81       	ld	r31, Z
 f36:	e0 2d       	mov	r30, r0
 f38:	30 97       	sbiw	r30, 0x00	; 0
 f3a:	09 f0       	breq	.+2      	; 0xf3e <__vector_9+0x52>
				callbacks[i]();
 f3c:	09 95       	icall
ISR(TIMER2_COMPA_vect){
	cnt++;
	
	if(cnt==TC2_CNT_MATCH){
		cnt=0;
		for (uint8_t i=0; i<MAX_CALLBACKS; i++)
 f3e:	cf 5f       	subi	r28, 0xFF	; 255
 f40:	c5 30       	cpi	r28, 0x05	; 5
 f42:	88 f3       	brcs	.-30     	; 0xf26 <__vector_9+0x3a>
			if(callbacks[i]!=NULL){
				callbacks[i]();
			}
		}
	}
}
 f44:	ff 91       	pop	r31
 f46:	ef 91       	pop	r30
 f48:	cf 91       	pop	r28
 f4a:	bf 91       	pop	r27
 f4c:	af 91       	pop	r26
 f4e:	9f 91       	pop	r25
 f50:	8f 91       	pop	r24
 f52:	7f 91       	pop	r23
 f54:	6f 91       	pop	r22
 f56:	5f 91       	pop	r21
 f58:	4f 91       	pop	r20
 f5a:	3f 91       	pop	r19
 f5c:	2f 91       	pop	r18
 f5e:	0f 90       	pop	r0
 f60:	0f be       	out	0x3f, r0	; 63
 f62:	0f 90       	pop	r0
 f64:	1f 90       	pop	r1
 f66:	18 95       	reti

Disassembly of section .text.start_and_write_data:

000013da <start_and_write_data>:
	uint8_t status=start_and_write_data(slaveAddr, data, length);
	if(status!=TWI_CODE_SUCCESS){
		TWI_HAL_stop();
	}
	return status;
}
    13da:	cf 92       	push	r12
    13dc:	df 92       	push	r13
    13de:	ef 92       	push	r14
    13e0:	cf 93       	push	r28
    13e2:	df 93       	push	r29
    13e4:	6a 01       	movw	r12, r20
    13e6:	e6 2e       	mov	r14, r22
    13e8:	d2 2f       	mov	r29, r18
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	0e 94 38 0a 	call	0x1470	; 0x1470 <TWI_HAL_start>
    13f0:	81 11       	cpse	r24, r1
    13f2:	13 c0       	rjmp	.+38     	; 0x141a <start_and_write_data+0x40>
    13f4:	c0 e0       	ldi	r28, 0x00	; 0
    13f6:	0e c0       	rjmp	.+28     	; 0x1414 <start_and_write_data+0x3a>
    13f8:	ae 2d       	mov	r26, r14
    13fa:	c6 01       	movw	r24, r12
    13fc:	8c 0f       	add	r24, r28
    13fe:	91 1d       	adc	r25, r1
    1400:	a1 1d       	adc	r26, r1
    1402:	fc 01       	movw	r30, r24
    1404:	84 91       	lpm	r24, Z
    1406:	a7 fd       	sbrc	r26, 7
    1408:	80 81       	ld	r24, Z
    140a:	0e 94 03 0c 	call	0x1806	; 0x1806 <TWI_HAL_write_byte>
    140e:	81 11       	cpse	r24, r1
    1410:	04 c0       	rjmp	.+8      	; 0x141a <start_and_write_data+0x40>
    1412:	cf 5f       	subi	r28, 0xFF	; 255
    1414:	cd 17       	cp	r28, r29
    1416:	80 f3       	brcs	.-32     	; 0x13f8 <start_and_write_data+0x1e>
    1418:	80 e0       	ldi	r24, 0x00	; 0
    141a:	df 91       	pop	r29
    141c:	cf 91       	pop	r28
    141e:	ef 90       	pop	r14
    1420:	df 90       	pop	r13
    1422:	cf 90       	pop	r12
    1424:	08 95       	ret

Disassembly of section .text.read_and_stop:

000012e4 <read_and_stop>:
    12e4:	ef 92       	push	r14
    12e6:	ff 92       	push	r15
    12e8:	0f 93       	push	r16
    12ea:	1f 93       	push	r17
    12ec:	cf 93       	push	r28
    12ee:	df 93       	push	r29
    12f0:	8c 01       	movw	r16, r24
    12f2:	d6 2f       	mov	r29, r22
    12f4:	c0 e0       	ldi	r28, 0x00	; 0
    12f6:	08 c0       	rjmp	.+16     	; 0x1308 <read_and_stop+0x24>
    12f8:	78 01       	movw	r14, r16
    12fa:	ec 0e       	add	r14, r28
    12fc:	f1 1c       	adc	r15, r1
    12fe:	0e 94 34 0c 	call	0x1868	; 0x1868 <TWI_HAL_read_byte_ack>
    1302:	f7 01       	movw	r30, r14
    1304:	80 83       	st	Z, r24
    1306:	cf 5f       	subi	r28, 0xFF	; 255
    1308:	2c 2f       	mov	r18, r28
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	8d 2f       	mov	r24, r29
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	01 97       	sbiw	r24, 0x01	; 1
    1312:	28 17       	cp	r18, r24
    1314:	39 07       	cpc	r19, r25
    1316:	84 f3       	brlt	.-32     	; 0x12f8 <read_and_stop+0x14>
    1318:	8d 2f       	mov	r24, r29
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	01 97       	sbiw	r24, 0x01	; 1
    131e:	e8 01       	movw	r28, r16
    1320:	c8 0f       	add	r28, r24
    1322:	d9 1f       	adc	r29, r25
    1324:	0e 94 3e 0c 	call	0x187c	; 0x187c <TWI_HAL_read_byte_nack>
    1328:	88 83       	st	Y, r24
    132a:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TWI_HAL_stop>
    132e:	80 e0       	ldi	r24, 0x00	; 0
    1330:	df 91       	pop	r29
    1332:	cf 91       	pop	r28
    1334:	1f 91       	pop	r17
    1336:	0f 91       	pop	r16
    1338:	ff 90       	pop	r15
    133a:	ef 90       	pop	r14
    133c:	08 95       	ret

Disassembly of section .text.TWI_API_write_data_stop:

00001826 <TWI_API_write_data_stop>:

uint8_t TWI_API_write_data_stop(uint8_t slaveAddr, const uint8_t data[], uint8_t length){
    1826:	cf 93       	push	r28
	uint8_t status=start_and_write_data(slaveAddr, data, length);
    1828:	0e 94 ed 09 	call	0x13da	; 0x13da <start_and_write_data>
    182c:	c8 2f       	mov	r28, r24
	TWI_HAL_stop();
    182e:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TWI_HAL_stop>
	if(status!=TWI_CODE_SUCCESS) return status;
    1832:	c1 11       	cpse	r28, r1
    1834:	02 c0       	rjmp	.+4      	; 0x183a <TWI_API_write_data_stop+0x14>
	return TWI_CODE_SUCCESS;
    1836:	80 e0       	ldi	r24, 0x00	; 0
    1838:	01 c0       	rjmp	.+2      	; 0x183c <TWI_API_write_data_stop+0x16>
}

uint8_t TWI_API_write_data_stop(uint8_t slaveAddr, const uint8_t data[], uint8_t length){
	uint8_t status=start_and_write_data(slaveAddr, data, length);
	TWI_HAL_stop();
	if(status!=TWI_CODE_SUCCESS) return status;
    183a:	8c 2f       	mov	r24, r28
	return TWI_CODE_SUCCESS;
}
    183c:	cf 91       	pop	r28
    183e:	08 95       	ret

Disassembly of section .text.TWI_API_read_data_ack_end_nack_stop:

000016d8 <TWI_API_read_data_ack_end_nack_stop>:
	uint8_t status=start_and_write_data(slaveAddr, data, length);
	if(status!=TWI_CODE_SUCCESS){
		TWI_HAL_stop();
	}
	return status;
}
    16d8:	0f 93       	push	r16
    16da:	1f 93       	push	r17
    16dc:	cf 93       	push	r28
    16de:	df 93       	push	r29
    16e0:	8b 01       	movw	r16, r22
    16e2:	d4 2f       	mov	r29, r20
    16e4:	61 e0       	ldi	r22, 0x01	; 1
    16e6:	0e 94 38 0a 	call	0x1470	; 0x1470 <TWI_HAL_start>
    16ea:	c8 2f       	mov	r28, r24
    16ec:	88 23       	and	r24, r24
    16ee:	21 f0       	breq	.+8      	; 0x16f8 <TWI_API_read_data_ack_end_nack_stop+0x20>
    16f0:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TWI_HAL_stop>
    16f4:	8c 2f       	mov	r24, r28
    16f6:	04 c0       	rjmp	.+8      	; 0x1700 <TWI_API_read_data_ack_end_nack_stop+0x28>
    16f8:	6d 2f       	mov	r22, r29
    16fa:	c8 01       	movw	r24, r16
    16fc:	0e 94 72 09 	call	0x12e4	; 0x12e4 <read_and_stop>
    1700:	df 91       	pop	r29
    1702:	cf 91       	pop	r28
    1704:	1f 91       	pop	r17
    1706:	0f 91       	pop	r16
    1708:	08 95       	ret

Disassembly of section .text.TWI_HAL_init:

00001890 <TWI_HAL_init>:




void TWI_HAL_init(){
	TWBR=TWI_TWBR; //Set bit generator
    1890:	80 e2       	ldi	r24, 0x20	; 32
    1892:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f00b8>
	clear_byte(TWSR, 0b00000011); //set prescale to 1
    1896:	e9 eb       	ldi	r30, 0xB9	; 185
    1898:	f0 e0       	ldi	r31, 0x00	; 0
    189a:	80 81       	ld	r24, Z
    189c:	8c 7f       	andi	r24, 0xFC	; 252
    189e:	80 83       	st	Z, r24
    18a0:	08 95       	ret

Disassembly of section .text.TWI_HAL_start:

00001470 <TWI_HAL_start>:
	status=twi_read_status(TWSR);
	
	if(status==TWI_CODE_ADDR_R_TRANS_ACK_REC) return TWI_CODE_SUCCESS;
	
	return status;
}
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	88 0f       	add	r24, r24
    1474:	99 1f       	adc	r25, r25
    1476:	68 2b       	or	r22, r24
    1478:	84 ea       	ldi	r24, 0xA4	; 164
    147a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
    147e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
    1482:	99 23       	and	r25, r25
    1484:	e4 f7       	brge	.-8      	; 0x147e <TWI_HAL_start+0xe>
    1486:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f00b9>
    148a:	88 7f       	andi	r24, 0xF8	; 248
    148c:	88 30       	cpi	r24, 0x08	; 8
    148e:	99 f4       	brne	.+38     	; 0x14b6 <TWI_HAL_start+0x46>
    1490:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f00bb>
    1494:	84 e8       	ldi	r24, 0x84	; 132
    1496:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
    149a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
    149e:	88 23       	and	r24, r24
    14a0:	e4 f7       	brge	.-8      	; 0x149a <TWI_HAL_start+0x2a>
    14a2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f00b9>
    14a6:	88 7f       	andi	r24, 0xF8	; 248
    14a8:	88 31       	cpi	r24, 0x18	; 24
    14aa:	21 f0       	breq	.+8      	; 0x14b4 <TWI_HAL_start+0x44>
    14ac:	80 34       	cpi	r24, 0x40	; 64
    14ae:	19 f4       	brne	.+6      	; 0x14b6 <TWI_HAL_start+0x46>
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	08 95       	ret
    14b4:	80 e0       	ldi	r24, 0x00	; 0
    14b6:	08 95       	ret

Disassembly of section .text.TWI_HAL_write_byte:

00001806 <TWI_HAL_write_byte>:

uint8_t TWI_HAL_write_byte(uint8_t data){
	uint8_t status;
	
	TWDR=data;	//Set data
    1806:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f00bb>
	TWCR=twi_start_transmission;
    180a:	84 e8       	ldi	r24, 0x84	; 132
    180c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
	
	while (!get_bit(TWCR, TWINT)); 
    1810:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
    1814:	88 23       	and	r24, r24
    1816:	e4 f7       	brge	.-8      	; 0x1810 <TWI_HAL_write_byte+0xa>
	status=twi_read_status(TWSR);
    1818:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f00b9>
    181c:	88 7f       	andi	r24, 0xF8	; 248
	
	if(status==TWI_CODE_DATA_TRANS_ACK_REC) return TWI_CODE_SUCCESS; //Success
    181e:	88 32       	cpi	r24, 0x28	; 40
    1820:	09 f4       	brne	.+2      	; 0x1824 <TWI_HAL_write_byte+0x1e>
    1822:	80 e0       	ldi	r24, 0x00	; 0
	return status;
}
    1824:	08 95       	ret

Disassembly of section .text.TWI_HAL_read_byte_ack:

00001868 <TWI_HAL_read_byte_ack>:

uint8_t TWI_HAL_read_byte_ack(){
	TWCR=twi_start_transmission|(1<<TWEA);
    1868:	84 ec       	ldi	r24, 0xC4	; 196
    186a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
	while (!get_bit(TWCR, TWINT)); 
    186e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
    1872:	88 23       	and	r24, r24
    1874:	e4 f7       	brge	.-8      	; 0x186e <TWI_HAL_read_byte_ack+0x6>
	
	return TWDR;
    1876:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f00bb>
}
    187a:	08 95       	ret

Disassembly of section .text.TWI_HAL_read_byte_nack:

0000187c <TWI_HAL_read_byte_nack>:

uint8_t TWI_HAL_read_byte_nack(){
	TWCR=twi_start_transmission;
    187c:	84 e8       	ldi	r24, 0x84	; 132
    187e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
	while (!get_bit(TWCR, TWINT));
    1882:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
    1886:	88 23       	and	r24, r24
    1888:	e4 f7       	brge	.-8      	; 0x1882 <TWI_HAL_read_byte_nack+0x6>
	
	return TWDR;
    188a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f00bb>
}
    188e:	08 95       	ret

Disassembly of section .text.TWI_HAL_stop:

000018a2 <TWI_HAL_stop>:

void TWI_HAL_stop(){
	 TWCR=twi_start_transmission|(1<<TWSTO);
    18a2:	84 e9       	ldi	r24, 0x94	; 148
    18a4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
	 while(TWCR&(1<<TWSTO));
    18a8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f00bc>
    18ac:	84 fd       	sbrc	r24, 4
    18ae:	fc cf       	rjmp	.-8      	; 0x18a8 <TWI_HAL_stop+0x6>
}
    18b0:	08 95       	ret

Disassembly of section .text.__vector_22:

00001142 <__vector_22>:


/************************************************************************/
/* Write data complete vect                                             */
/************************************************************************/
ISR(USART0_TX_vect){
    1142:	1f 92       	push	r1
    1144:	0f 92       	push	r0
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	0f 92       	push	r0
    114a:	11 24       	eor	r1, r1
    114c:	2f 93       	push	r18
    114e:	3f 93       	push	r19
    1150:	8f 93       	push	r24
    1152:	9f 93       	push	r25
    1154:	ef 93       	push	r30
    1156:	ff 93       	push	r31
	if(tx_buffer_cursor<tx_buffer_data_len){
    1158:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <tx_buffer_cursor>
    115c:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <tx_buffer_cursor+0x1>
    1160:	20 91 29 04 	lds	r18, 0x0429	; 0x800429 <tx_buffer_data_len>
    1164:	30 91 2a 04 	lds	r19, 0x042A	; 0x80042a <tx_buffer_data_len+0x1>
    1168:	82 17       	cp	r24, r18
    116a:	93 07       	cpc	r25, r19
    116c:	70 f4       	brcc	.+28     	; 0x118a <__vector_22+0x48>
		UDR0=tx_buffer[tx_buffer_cursor++];
    116e:	9c 01       	movw	r18, r24
    1170:	2f 5f       	subi	r18, 0xFF	; 255
    1172:	3f 4f       	sbci	r19, 0xFF	; 255
    1174:	30 93 28 04 	sts	0x0428, r19	; 0x800428 <tx_buffer_cursor+0x1>
    1178:	20 93 27 04 	sts	0x0427, r18	; 0x800427 <tx_buffer_cursor>
    117c:	fc 01       	movw	r30, r24
    117e:	ea 56       	subi	r30, 0x6A	; 106
    1180:	fe 4f       	sbci	r31, 0xFE	; 254
    1182:	80 81       	ld	r24, Z
    1184:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
    1188:	08 c0       	rjmp	.+16     	; 0x119a <__vector_22+0x58>
	}else{
		tx_buffer_cursor=0;
    118a:	10 92 28 04 	sts	0x0428, r1	; 0x800428 <tx_buffer_cursor+0x1>
    118e:	10 92 27 04 	sts	0x0427, r1	; 0x800427 <tx_buffer_cursor>
		tx_buffer_data_len=0;
    1192:	10 92 2a 04 	sts	0x042A, r1	; 0x80042a <tx_buffer_data_len+0x1>
    1196:	10 92 29 04 	sts	0x0429, r1	; 0x800429 <tx_buffer_data_len>
	}
}
    119a:	ff 91       	pop	r31
    119c:	ef 91       	pop	r30
    119e:	9f 91       	pop	r25
    11a0:	8f 91       	pop	r24
    11a2:	3f 91       	pop	r19
    11a4:	2f 91       	pop	r18
    11a6:	0f 90       	pop	r0
    11a8:	0f be       	out	0x3f, r0	; 63
    11aa:	0f 90       	pop	r0
    11ac:	1f 90       	pop	r1
    11ae:	18 95       	reti

Disassembly of section .text.__vector_20:

0000105a <__vector_20>:
	set_bit(UCSR0B, 3); //Enable Tx
	
	uint8_t data[1];
	data[0]=followUpByte;
	uart0_hal_send_message(data, 1);
}
    105a:	1f 92       	push	r1
    105c:	0f 92       	push	r0
    105e:	0f b6       	in	r0, 0x3f	; 63
    1060:	0f 92       	push	r0
    1062:	11 24       	eor	r1, r1
    1064:	2f 93       	push	r18
    1066:	8f 93       	push	r24
    1068:	9f 93       	push	r25
    106a:	ef 93       	push	r30
    106c:	ff 93       	push	r31
    106e:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <rx_buffer_has_message>
    1072:	81 11       	cpse	r24, r1
    1074:	0e c0       	rjmp	.+28     	; 0x1092 <__vector_20+0x38>
    1076:	e0 91 37 04 	lds	r30, 0x0437	; 0x800437 <rx_buffer_data_len>
    107a:	e6 39       	cpi	r30, 0x96	; 150
    107c:	50 f4       	brcc	.+20     	; 0x1092 <__vector_20+0x38>
    107e:	81 e0       	ldi	r24, 0x01	; 1
    1080:	8e 0f       	add	r24, r30
    1082:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <rx_buffer_data_len>
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
    108c:	e0 50       	subi	r30, 0x00	; 0
    108e:	ff 4f       	sbci	r31, 0xFF	; 255
    1090:	80 83       	st	Z, r24
    1092:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <rx_buffer_data_len>
    1096:	83 30       	cpi	r24, 0x03	; 3
    1098:	80 f0       	brcs	.+32     	; 0x10ba <__vector_20+0x60>
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	fc 01       	movw	r30, r24
    109e:	e1 50       	subi	r30, 0x01	; 1
    10a0:	ff 4f       	sbci	r31, 0xFF	; 255
    10a2:	20 81       	ld	r18, Z
    10a4:	2a 30       	cpi	r18, 0x0A	; 10
    10a6:	49 f4       	brne	.+18     	; 0x10ba <__vector_20+0x60>
    10a8:	fc 01       	movw	r30, r24
    10aa:	e2 50       	subi	r30, 0x02	; 2
    10ac:	ff 4f       	sbci	r31, 0xFF	; 255
    10ae:	80 81       	ld	r24, Z
    10b0:	8d 30       	cpi	r24, 0x0D	; 13
    10b2:	19 f4       	brne	.+6      	; 0x10ba <__vector_20+0x60>
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <rx_buffer_has_message>
    10ba:	ff 91       	pop	r31
    10bc:	ef 91       	pop	r30
    10be:	9f 91       	pop	r25
    10c0:	8f 91       	pop	r24
    10c2:	2f 91       	pop	r18
    10c4:	0f 90       	pop	r0
    10c6:	0f be       	out	0x3f, r0	; 63
    10c8:	0f 90       	pop	r0
    10ca:	1f 90       	pop	r1
    10cc:	18 95       	reti

Disassembly of section .text.uart1_hal_init:

0000158a <uart1_hal_init>:
static uint8_t rx_buffer[UART1_RX_BUFF_LENGTH];
static uint8_t rx_buffer_data_len=0;
static uint8_t rx_buffer_has_message=0;

void uart1_hal_init(){
	set_bit(UCSR1B, 4); //Enable Rx
    158a:	e9 ec       	ldi	r30, 0xC9	; 201
    158c:	f0 e0       	ldi	r31, 0x00	; 0
    158e:	80 81       	ld	r24, Z
    1590:	80 61       	ori	r24, 0x10	; 16
    1592:	80 83       	st	Z, r24
	set_bit(UCSR1B, 3); //Enable Tx
    1594:	80 81       	ld	r24, Z
    1596:	88 60       	ori	r24, 0x08	; 8
    1598:	80 83       	st	Z, r24
	set_bit(UCSR1B, 7); //interrupt Rx complete
    159a:	80 81       	ld	r24, Z
    159c:	80 68       	ori	r24, 0x80	; 128
    159e:	80 83       	st	Z, r24
	set_bit(UCSR1B, 6); //interrupt Tx complete
    15a0:	80 81       	ld	r24, Z
    15a2:	80 64       	ori	r24, 0x40	; 64
    15a4:	80 83       	st	Z, r24
	set_bit(UCSR1A, 1); //Set double speed
    15a6:	e8 ec       	ldi	r30, 0xC8	; 200
    15a8:	f0 e0       	ldi	r31, 0x00	; 0
    15aa:	80 81       	ld	r24, Z
    15ac:	82 60       	ori	r24, 0x02	; 2
    15ae:	80 83       	st	Z, r24
	UCSR1C = 0b00000110; //Async, none parity, 1 stop bit, 8 databit
    15b0:	86 e0       	ldi	r24, 0x06	; 6
    15b2:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7f00ca>
	UBRR1=UART1_BAUDRATE; //set baudrate
    15b6:	80 e1       	ldi	r24, 0x10	; 16
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f00cd>
    15be:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f00cc>
	sei();
    15c2:	78 94       	sei
    15c4:	08 95       	ret

Disassembly of section .text.uart1_hal_send_string:

00000e56 <uart1_hal_send_string>:
static void copy_buffer(uint8_t msg[]){
	for (uint8_t i=0; i<rx_buffer_data_len-2; i++)
	{
		msg[i]=rx_buffer[i];
	}
}
 e56:	6f 92       	push	r6
 e58:	7f 92       	push	r7
 e5a:	8f 92       	push	r8
 e5c:	cf 92       	push	r12
 e5e:	df 92       	push	r13
 e60:	ef 92       	push	r14
 e62:	3b 01       	movw	r6, r22
 e64:	88 2e       	mov	r8, r24
 e66:	80 91 2d 04 	lds	r24, 0x042D	; 0x80042d <tx_buffer_data_len>
 e6a:	90 91 2e 04 	lds	r25, 0x042E	; 0x80042e <tx_buffer_data_len+0x1>
 e6e:	89 2b       	or	r24, r25
 e70:	d1 f7       	brne	.-12     	; 0xe66 <uart1_hal_send_string+0x10>
 e72:	88 2d       	mov	r24, r8
 e74:	b3 01       	movw	r22, r6
 e76:	0e 94 b7 0b 	call	0x176e	; 0x176e <strlen>
 e7a:	bc 01       	movw	r22, r24
 e7c:	20 e0       	ldi	r18, 0x00	; 0
 e7e:	30 e0       	ldi	r19, 0x00	; 0
 e80:	11 c0       	rjmp	.+34     	; 0xea4 <uart1_hal_send_string+0x4e>
 e82:	e8 2c       	mov	r14, r8
 e84:	63 01       	movw	r12, r6
 e86:	c2 0e       	add	r12, r18
 e88:	d3 1e       	adc	r13, r19
 e8a:	e1 1c       	adc	r14, r1
 e8c:	37 fd       	sbrc	r19, 7
 e8e:	ea 94       	dec	r14
 e90:	f6 01       	movw	r30, r12
 e92:	94 91       	lpm	r25, Z
 e94:	e7 fc       	sbrc	r14, 7
 e96:	90 81       	ld	r25, Z
 e98:	f9 01       	movw	r30, r18
 e9a:	e0 57       	subi	r30, 0x70	; 112
 e9c:	fd 4f       	sbci	r31, 0xFD	; 253
 e9e:	90 83       	st	Z, r25
 ea0:	2f 5f       	subi	r18, 0xFF	; 255
 ea2:	3f 4f       	sbci	r19, 0xFF	; 255
 ea4:	26 17       	cp	r18, r22
 ea6:	37 07       	cpc	r19, r23
 ea8:	60 f3       	brcs	.-40     	; 0xe82 <uart1_hal_send_string+0x2c>
 eaa:	fb 01       	movw	r30, r22
 eac:	e0 57       	subi	r30, 0x70	; 112
 eae:	fd 4f       	sbci	r31, 0xFD	; 253
 eb0:	8d e0       	ldi	r24, 0x0D	; 13
 eb2:	80 83       	st	Z, r24
 eb4:	fb 01       	movw	r30, r22
 eb6:	ef 56       	subi	r30, 0x6F	; 111
 eb8:	fd 4f       	sbci	r31, 0xFD	; 253
 eba:	8a e0       	ldi	r24, 0x0A	; 10
 ebc:	80 83       	st	Z, r24
 ebe:	6e 5f       	subi	r22, 0xFE	; 254
 ec0:	7f 4f       	sbci	r23, 0xFF	; 255
 ec2:	70 93 2e 04 	sts	0x042E, r23	; 0x80042e <tx_buffer_data_len+0x1>
 ec6:	60 93 2d 04 	sts	0x042D, r22	; 0x80042d <tx_buffer_data_len>
 eca:	81 e0       	ldi	r24, 0x01	; 1
 ecc:	90 e0       	ldi	r25, 0x00	; 0
 ece:	90 93 2c 04 	sts	0x042C, r25	; 0x80042c <tx_buffer_cursor+0x1>
 ed2:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <tx_buffer_cursor>
 ed6:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <_end>
 eda:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
 ede:	ef 90       	pop	r14
 ee0:	df 90       	pop	r13
 ee2:	cf 90       	pop	r12
 ee4:	8f 90       	pop	r8
 ee6:	7f 90       	pop	r7
 ee8:	6f 90       	pop	r6
 eea:	08 95       	ret

Disassembly of section .text.__vector_30:

000011b0 <__vector_30>:
    11b0:	1f 92       	push	r1
    11b2:	0f 92       	push	r0
    11b4:	0f b6       	in	r0, 0x3f	; 63
    11b6:	0f 92       	push	r0
    11b8:	11 24       	eor	r1, r1
    11ba:	2f 93       	push	r18
    11bc:	3f 93       	push	r19
    11be:	8f 93       	push	r24
    11c0:	9f 93       	push	r25
    11c2:	ef 93       	push	r30
    11c4:	ff 93       	push	r31
    11c6:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <tx_buffer_cursor>
    11ca:	90 91 2c 04 	lds	r25, 0x042C	; 0x80042c <tx_buffer_cursor+0x1>
    11ce:	20 91 2d 04 	lds	r18, 0x042D	; 0x80042d <tx_buffer_data_len>
    11d2:	30 91 2e 04 	lds	r19, 0x042E	; 0x80042e <tx_buffer_data_len+0x1>
    11d6:	82 17       	cp	r24, r18
    11d8:	93 07       	cpc	r25, r19
    11da:	70 f4       	brcc	.+28     	; 0x11f8 <__vector_30+0x48>
    11dc:	9c 01       	movw	r18, r24
    11de:	2f 5f       	subi	r18, 0xFF	; 255
    11e0:	3f 4f       	sbci	r19, 0xFF	; 255
    11e2:	30 93 2c 04 	sts	0x042C, r19	; 0x80042c <tx_buffer_cursor+0x1>
    11e6:	20 93 2b 04 	sts	0x042B, r18	; 0x80042b <tx_buffer_cursor>
    11ea:	fc 01       	movw	r30, r24
    11ec:	e0 57       	subi	r30, 0x70	; 112
    11ee:	fd 4f       	sbci	r31, 0xFD	; 253
    11f0:	80 81       	ld	r24, Z
    11f2:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    11f6:	08 c0       	rjmp	.+16     	; 0x1208 <__vector_30+0x58>
    11f8:	10 92 2c 04 	sts	0x042C, r1	; 0x80042c <tx_buffer_cursor+0x1>
    11fc:	10 92 2b 04 	sts	0x042B, r1	; 0x80042b <tx_buffer_cursor>
    1200:	10 92 2e 04 	sts	0x042E, r1	; 0x80042e <tx_buffer_data_len+0x1>
    1204:	10 92 2d 04 	sts	0x042D, r1	; 0x80042d <tx_buffer_data_len>
    1208:	ff 91       	pop	r31
    120a:	ef 91       	pop	r30
    120c:	9f 91       	pop	r25
    120e:	8f 91       	pop	r24
    1210:	3f 91       	pop	r19
    1212:	2f 91       	pop	r18
    1214:	0f 90       	pop	r0
    1216:	0f be       	out	0x3f, r0	; 63
    1218:	0f 90       	pop	r0
    121a:	1f 90       	pop	r1
    121c:	18 95       	reti

Disassembly of section .text.__vector_28:

000010ce <__vector_28>:
    10ce:	1f 92       	push	r1
    10d0:	0f 92       	push	r0
    10d2:	0f b6       	in	r0, 0x3f	; 63
    10d4:	0f 92       	push	r0
    10d6:	11 24       	eor	r1, r1
    10d8:	2f 93       	push	r18
    10da:	8f 93       	push	r24
    10dc:	9f 93       	push	r25
    10de:	ef 93       	push	r30
    10e0:	ff 93       	push	r31
    10e2:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <rx_buffer_has_message>
    10e6:	81 11       	cpse	r24, r1
    10e8:	0e c0       	rjmp	.+28     	; 0x1106 <__stack+0x7>
    10ea:	e0 91 39 04 	lds	r30, 0x0439	; 0x800439 <rx_buffer_data_len>
    10ee:	eb 34       	cpi	r30, 0x4B	; 75
    10f0:	50 f4       	brcc	.+20     	; 0x1106 <__stack+0x7>
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	8e 0f       	add	r24, r30
    10f6:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <rx_buffer_data_len>
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    1100:	e4 54       	subi	r30, 0x44	; 68
    1102:	fc 4f       	sbci	r31, 0xFC	; 252
    1104:	80 83       	st	Z, r24
    1106:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <rx_buffer_data_len>
    110a:	83 30       	cpi	r24, 0x03	; 3
    110c:	80 f0       	brcs	.+32     	; 0x112e <__stack+0x2f>
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	fc 01       	movw	r30, r24
    1112:	e5 54       	subi	r30, 0x45	; 69
    1114:	fc 4f       	sbci	r31, 0xFC	; 252
    1116:	20 81       	ld	r18, Z
    1118:	2a 30       	cpi	r18, 0x0A	; 10
    111a:	49 f4       	brne	.+18     	; 0x112e <__stack+0x2f>
    111c:	fc 01       	movw	r30, r24
    111e:	e6 54       	subi	r30, 0x46	; 70
    1120:	fc 4f       	sbci	r31, 0xFC	; 252
    1122:	80 81       	ld	r24, Z
    1124:	8d 30       	cpi	r24, 0x0D	; 13
    1126:	19 f4       	brne	.+6      	; 0x112e <__stack+0x2f>
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <rx_buffer_has_message>
    112e:	ff 91       	pop	r31
    1130:	ef 91       	pop	r30
    1132:	9f 91       	pop	r25
    1134:	8f 91       	pop	r24
    1136:	2f 91       	pop	r18
    1138:	0f 90       	pop	r0
    113a:	0f be       	out	0x3f, r0	; 63
    113c:	0f 90       	pop	r0
    113e:	1f 90       	pop	r1
    1140:	18 95       	reti

Disassembly of section .text.main:

0000190e <main>:
#define _RUN_TEST

int main(void)
{
	#ifdef _RUN_TEST
		test_runner();
    190e:	0e 94 95 0c 	call	0x192a	; 0x192a <test_runner>
			MAINPG_start();
		}
		_delay_ms(5000);
	}
	#endif
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	08 95       	ret

Disassembly of section .text.clear_sampling_data:

00001426 <clear_sampling_data>:
	vect_SCD_do_sample();
	
	//Start timer
	TC1_HAL_start();
	return true;
}
    1426:	ed e1       	ldi	r30, 0x1D	; 29
    1428:	f4 e0       	ldi	r31, 0x04	; 4
    142a:	11 82       	std	Z+1, r1	; 0x01
    142c:	10 82       	st	Z, r1
    142e:	15 82       	std	Z+5, r1	; 0x05
    1430:	14 82       	std	Z+4, r1	; 0x04
    1432:	13 82       	std	Z+3, r1	; 0x03
    1434:	12 82       	std	Z+2, r1	; 0x02
    1436:	e7 e1       	ldi	r30, 0x17	; 23
    1438:	f4 e0       	ldi	r31, 0x04	; 4
    143a:	11 82       	std	Z+1, r1	; 0x01
    143c:	10 82       	st	Z, r1
    143e:	15 82       	std	Z+5, r1	; 0x05
    1440:	14 82       	std	Z+4, r1	; 0x04
    1442:	13 82       	std	Z+3, r1	; 0x03
    1444:	12 82       	std	Z+2, r1	; 0x02
    1446:	e1 e1       	ldi	r30, 0x11	; 17
    1448:	f4 e0       	ldi	r31, 0x04	; 4
    144a:	11 82       	std	Z+1, r1	; 0x01
    144c:	10 82       	st	Z, r1
    144e:	15 82       	std	Z+5, r1	; 0x05
    1450:	14 82       	std	Z+4, r1	; 0x04
    1452:	13 82       	std	Z+3, r1	; 0x03
    1454:	12 82       	std	Z+2, r1	; 0x02
    1456:	10 92 34 04 	sts	0x0434, r1	; 0x800434 <lowest_si+0x1>
    145a:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <lowest_si>
    145e:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <highest_si+0x1>
    1462:	10 92 31 04 	sts	0x0431, r1	; 0x800431 <highest_si>
    1466:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <si_counter+0x1>
    146a:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <si_counter>
    146e:	08 95       	ret

Disassembly of section .text.bytes_2_uint:

0000121e <bytes_2_uint>:
    121e:	cf 92       	push	r12
    1220:	df 92       	push	r13
    1222:	ef 92       	push	r14
    1224:	ff 92       	push	r15
    1226:	0f 93       	push	r16
    1228:	1f 93       	push	r17
    122a:	cf 93       	push	r28
    122c:	df 93       	push	r29
    122e:	fc 01       	movw	r30, r24
    1230:	04 81       	ldd	r16, Z+4	; 0x04
    1232:	13 81       	ldd	r17, Z+3	; 0x03
    1234:	d1 81       	ldd	r29, Z+1	; 0x01
    1236:	c0 81       	ld	r28, Z
    1238:	70 e0       	ldi	r23, 0x00	; 0
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__floatsisf>
    1242:	9b 01       	movw	r18, r22
    1244:	ac 01       	movw	r20, r24
    1246:	60 2f       	mov	r22, r16
    1248:	71 2f       	mov	r23, r17
    124a:	8d 2f       	mov	r24, r29
    124c:	9c 2f       	mov	r25, r28
    124e:	0e 94 91 0c 	call	0x1922	; 0x1922 <__mulsf3>
    1252:	6b 01       	movw	r12, r22
    1254:	7c 01       	movw	r14, r24
    1256:	20 e0       	ldi	r18, 0x00	; 0
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	a9 01       	movw	r20, r18
    125c:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__cmpsf2>
    1260:	88 23       	and	r24, r24
    1262:	34 f0       	brlt	.+12     	; 0x1270 <bytes_2_uint+0x52>
    1264:	c7 01       	movw	r24, r14
    1266:	b6 01       	movw	r22, r12
    1268:	0e 94 43 09 	call	0x1286	; 0x1286 <__fixunssfsi>
    126c:	cb 01       	movw	r24, r22
    126e:	02 c0       	rjmp	.+4      	; 0x1274 <bytes_2_uint+0x56>
    1270:	80 e0       	ldi	r24, 0x00	; 0
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	df 91       	pop	r29
    1276:	cf 91       	pop	r28
    1278:	1f 91       	pop	r17
    127a:	0f 91       	pop	r16
    127c:	ff 90       	pop	r15
    127e:	ef 90       	pop	r14
    1280:	df 90       	pop	r13
    1282:	cf 90       	pop	r12
    1284:	08 95       	ret

Disassembly of section .text.init_measurement:

000015c6 <init_measurement>:
    15c6:	25 e0       	ldi	r18, 0x05	; 5
    15c8:	4c ef       	ldi	r20, 0xFC	; 252
    15ca:	51 e0       	ldi	r21, 0x01	; 1
    15cc:	60 e0       	ldi	r22, 0x00	; 0
    15ce:	81 e6       	ldi	r24, 0x61	; 97
    15d0:	0e 94 13 0c 	call	0x1826	; 0x1826 <TWI_API_write_data_stop>
    15d4:	81 11       	cpse	r24, r1
    15d6:	0f c0       	rjmp	.+30     	; 0x15f6 <init_measurement+0x30>
    15d8:	25 e0       	ldi	r18, 0x05	; 5
    15da:	41 e0       	ldi	r20, 0x01	; 1
    15dc:	52 e0       	ldi	r21, 0x02	; 2
    15de:	60 e0       	ldi	r22, 0x00	; 0
    15e0:	81 e6       	ldi	r24, 0x61	; 97
    15e2:	0e 94 13 0c 	call	0x1826	; 0x1826 <TWI_API_write_data_stop>
    15e6:	81 11       	cpse	r24, r1
    15e8:	08 c0       	rjmp	.+16     	; 0x15fa <init_measurement+0x34>
    15ea:	0e 94 82 0c 	call	0x1904	; 0x1904 <SCD30_HAL_data_ready>
    15ee:	88 23       	and	r24, r24
    15f0:	e1 f3       	breq	.-8      	; 0x15ea <init_measurement+0x24>
    15f2:	80 e0       	ldi	r24, 0x00	; 0
    15f4:	08 95       	ret
    15f6:	82 e0       	ldi	r24, 0x02	; 2
    15f8:	08 95       	ret
    15fa:	82 e0       	ldi	r24, 0x02	; 2
    15fc:	08 95       	ret

Disassembly of section .text.validate_data:

0000170a <validate_data>:
    170a:	cf 93       	push	r28
    170c:	df 93       	push	r29
    170e:	ec 01       	movw	r28, r24
    1710:	62 e0       	ldi	r22, 0x02	; 2
    1712:	0e 94 1b 0b 	call	0x1636	; 0x1636 <calc_crc8>
    1716:	9a 81       	ldd	r25, Y+2	; 0x02
    1718:	89 13       	cpse	r24, r25
    171a:	0a c0       	rjmp	.+20     	; 0x1730 <validate_data+0x26>
    171c:	62 e0       	ldi	r22, 0x02	; 2
    171e:	ce 01       	movw	r24, r28
    1720:	03 96       	adiw	r24, 0x03	; 3
    1722:	0e 94 1b 0b 	call	0x1636	; 0x1636 <calc_crc8>
    1726:	9d 81       	ldd	r25, Y+5	; 0x05
    1728:	89 17       	cp	r24, r25
    172a:	21 f0       	breq	.+8      	; 0x1734 <validate_data+0x2a>
    172c:	80 e0       	ldi	r24, 0x00	; 0
    172e:	03 c0       	rjmp	.+6      	; 0x1736 <validate_data+0x2c>
    1730:	80 e0       	ldi	r24, 0x00	; 0
    1732:	01 c0       	rjmp	.+2      	; 0x1736 <validate_data+0x2c>
    1734:	81 e0       	ldi	r24, 0x01	; 1
    1736:	df 91       	pop	r29
    1738:	cf 91       	pop	r28
    173a:	08 95       	ret

Disassembly of section .text.SCD30_sensor_on:

0000179a <SCD30_sensor_on>:
/************************************************************************/
/* Definitions                                                          */
/************************************************************************/

SCD30_STATUS SCD30_sensor_on(){
	SCD30_HAL_init();
    179a:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <SCD30_HAL_init>
	PM_HAL_SCD30_power(true);
    179e:	81 e0       	ldi	r24, 0x01	; 1
    17a0:	0e 94 20 0c 	call	0x1840	; 0x1840 <PM_HAL_SCD30_power>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    17a4:	2f ef       	ldi	r18, 0xFF	; 255
    17a6:	83 ed       	ldi	r24, 0xD3	; 211
    17a8:	90 e3       	ldi	r25, 0x30	; 48
    17aa:	21 50       	subi	r18, 0x01	; 1
    17ac:	80 40       	sbci	r24, 0x00	; 0
    17ae:	90 40       	sbci	r25, 0x00	; 0
    17b0:	e1 f7       	brne	.-8      	; 0x17aa <SCD30_sensor_on+0x10>
    17b2:	00 c0       	rjmp	.+0      	; 0x17b4 <SCD30_sensor_on+0x1a>
    17b4:	00 00       	nop
	_delay_ms(2000);
	clear_sampling_data();
    17b6:	0e 94 13 0a 	call	0x1426	; 0x1426 <clear_sampling_data>
	return init_measurement();
    17ba:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <init_measurement>
}
    17be:	08 95       	ret

Disassembly of section .text.read_all_values:

00000afc <read_all_values>:
	vect_SCD_do_sample();
	
	//Start timer
	TC1_HAL_start();
	return true;
}
 afc:	cf 92       	push	r12
 afe:	df 92       	push	r13
 b00:	ef 92       	push	r14
 b02:	ff 92       	push	r15
 b04:	0f 93       	push	r16
 b06:	1f 93       	push	r17
 b08:	cf 93       	push	r28
 b0a:	df 93       	push	r29
 b0c:	cd b7       	in	r28, 0x3d	; 61
 b0e:	de b7       	in	r29, 0x3e	; 62
 b10:	62 97       	sbiw	r28, 0x12	; 18
 b12:	0f b6       	in	r0, 0x3f	; 63
 b14:	f8 94       	cli
 b16:	de bf       	out	0x3e, r29	; 62
 b18:	0f be       	out	0x3f, r0	; 63
 b1a:	cd bf       	out	0x3d, r28	; 61
 b1c:	8c 01       	movw	r16, r24
 b1e:	7b 01       	movw	r14, r22
 b20:	6a 01       	movw	r12, r20
 b22:	8f ef       	ldi	r24, 0xFF	; 255
 b24:	9f ef       	ldi	r25, 0xFF	; 255
 b26:	f8 01       	movw	r30, r16
 b28:	91 83       	std	Z+1, r25	; 0x01
 b2a:	80 83       	st	Z, r24
 b2c:	fb 01       	movw	r30, r22
 b2e:	91 83       	std	Z+1, r25	; 0x01
 b30:	80 83       	st	Z, r24
 b32:	fa 01       	movw	r30, r20
 b34:	91 83       	std	Z+1, r25	; 0x01
 b36:	80 83       	st	Z, r24
 b38:	0e 94 82 0c 	call	0x1904	; 0x1904 <SCD30_HAL_data_ready>
 b3c:	81 11       	cpse	r24, r1
 b3e:	0d c0       	rjmp	.+26     	; 0xb5a <read_all_values+0x5e>
 b40:	8e ef       	ldi	r24, 0xFE	; 254
 b42:	9f ef       	ldi	r25, 0xFF	; 255
 b44:	f8 01       	movw	r30, r16
 b46:	91 83       	std	Z+1, r25	; 0x01
 b48:	80 83       	st	Z, r24
 b4a:	f7 01       	movw	r30, r14
 b4c:	91 83       	std	Z+1, r25	; 0x01
 b4e:	80 83       	st	Z, r24
 b50:	f6 01       	movw	r30, r12
 b52:	91 83       	std	Z+1, r25	; 0x01
 b54:	80 83       	st	Z, r24
 b56:	83 e0       	ldi	r24, 0x03	; 3
 b58:	4d c0       	rjmp	.+154    	; 0xbf4 <read_all_values+0xf8>
 b5a:	22 e0       	ldi	r18, 0x02	; 2
 b5c:	46 e0       	ldi	r20, 0x06	; 6
 b5e:	52 e0       	ldi	r21, 0x02	; 2
 b60:	60 e0       	ldi	r22, 0x00	; 0
 b62:	81 e6       	ldi	r24, 0x61	; 97
 b64:	0e 94 13 0c 	call	0x1826	; 0x1826 <TWI_API_write_data_stop>
 b68:	81 11       	cpse	r24, r1
 b6a:	3b c0       	rjmp	.+118    	; 0xbe2 <read_all_values+0xe6>
 b6c:	8f e3       	ldi	r24, 0x3F	; 63
 b6e:	9f e1       	ldi	r25, 0x1F	; 31
 b70:	01 97       	sbiw	r24, 0x01	; 1
 b72:	f1 f7       	brne	.-4      	; 0xb70 <read_all_values+0x74>
 b74:	00 c0       	rjmp	.+0      	; 0xb76 <read_all_values+0x7a>
 b76:	00 00       	nop
 b78:	42 e1       	ldi	r20, 0x12	; 18
 b7a:	be 01       	movw	r22, r28
 b7c:	6f 5f       	subi	r22, 0xFF	; 255
 b7e:	7f 4f       	sbci	r23, 0xFF	; 255
 b80:	81 e6       	ldi	r24, 0x61	; 97
 b82:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <TWI_API_read_data_ack_end_nack_stop>
 b86:	81 11       	cpse	r24, r1
 b88:	2e c0       	rjmp	.+92     	; 0xbe6 <read_all_values+0xea>
 b8a:	ce 01       	movw	r24, r28
 b8c:	01 96       	adiw	r24, 0x01	; 1
 b8e:	0e 94 85 0b 	call	0x170a	; 0x170a <validate_data>
 b92:	88 23       	and	r24, r24
 b94:	51 f1       	breq	.+84     	; 0xbea <read_all_values+0xee>
 b96:	61 e0       	ldi	r22, 0x01	; 1
 b98:	ce 01       	movw	r24, r28
 b9a:	01 96       	adiw	r24, 0x01	; 1
 b9c:	0e 94 0f 09 	call	0x121e	; 0x121e <bytes_2_uint>
 ba0:	f8 01       	movw	r30, r16
 ba2:	91 83       	std	Z+1, r25	; 0x01
 ba4:	80 83       	st	Z, r24
 ba6:	ce 01       	movw	r24, r28
 ba8:	07 96       	adiw	r24, 0x07	; 7
 baa:	0e 94 85 0b 	call	0x170a	; 0x170a <validate_data>
 bae:	88 23       	and	r24, r24
 bb0:	f1 f0       	breq	.+60     	; 0xbee <read_all_values+0xf2>
 bb2:	6a e0       	ldi	r22, 0x0A	; 10
 bb4:	ce 01       	movw	r24, r28
 bb6:	07 96       	adiw	r24, 0x07	; 7
 bb8:	0e 94 0f 09 	call	0x121e	; 0x121e <bytes_2_uint>
 bbc:	f7 01       	movw	r30, r14
 bbe:	91 83       	std	Z+1, r25	; 0x01
 bc0:	80 83       	st	Z, r24
 bc2:	ce 01       	movw	r24, r28
 bc4:	0d 96       	adiw	r24, 0x0d	; 13
 bc6:	0e 94 85 0b 	call	0x170a	; 0x170a <validate_data>
 bca:	88 23       	and	r24, r24
 bcc:	91 f0       	breq	.+36     	; 0xbf2 <read_all_values+0xf6>
 bce:	6a e0       	ldi	r22, 0x0A	; 10
 bd0:	ce 01       	movw	r24, r28
 bd2:	0d 96       	adiw	r24, 0x0d	; 13
 bd4:	0e 94 0f 09 	call	0x121e	; 0x121e <bytes_2_uint>
 bd8:	f6 01       	movw	r30, r12
 bda:	91 83       	std	Z+1, r25	; 0x01
 bdc:	80 83       	st	Z, r24
 bde:	80 e0       	ldi	r24, 0x00	; 0
 be0:	09 c0       	rjmp	.+18     	; 0xbf4 <read_all_values+0xf8>
 be2:	81 e0       	ldi	r24, 0x01	; 1
 be4:	07 c0       	rjmp	.+14     	; 0xbf4 <read_all_values+0xf8>
 be6:	81 e0       	ldi	r24, 0x01	; 1
 be8:	05 c0       	rjmp	.+10     	; 0xbf4 <read_all_values+0xf8>
 bea:	81 e0       	ldi	r24, 0x01	; 1
 bec:	03 c0       	rjmp	.+6      	; 0xbf4 <read_all_values+0xf8>
 bee:	81 e0       	ldi	r24, 0x01	; 1
 bf0:	01 c0       	rjmp	.+2      	; 0xbf4 <read_all_values+0xf8>
 bf2:	81 e0       	ldi	r24, 0x01	; 1
 bf4:	62 96       	adiw	r28, 0x12	; 18
 bf6:	0f b6       	in	r0, 0x3f	; 63
 bf8:	f8 94       	cli
 bfa:	de bf       	out	0x3e, r29	; 62
 bfc:	0f be       	out	0x3f, r0	; 63
 bfe:	cd bf       	out	0x3d, r28	; 61
 c00:	df 91       	pop	r29
 c02:	cf 91       	pop	r28
 c04:	1f 91       	pop	r17
 c06:	0f 91       	pop	r16
 c08:	ff 90       	pop	r15
 c0a:	ef 90       	pop	r14
 c0c:	df 90       	pop	r13
 c0e:	cf 90       	pop	r12
 c10:	08 95       	ret

Disassembly of section .text.SCD30_get_reading:

0000173c <SCD30_get_reading>:
	if(temp_SI % *lowest != 0) return false;
	if(hum_SI % *lowest != 0) return false;
	return true;
}

SCD30_STATUS SCD30_get_reading(uint16_t *co2, uint16_t *temp, uint16_t *humidity){
    173c:	ef 92       	push	r14
    173e:	ff 92       	push	r15
    1740:	0f 93       	push	r16
    1742:	1f 93       	push	r17
    1744:	cf 93       	push	r28
    1746:	df 93       	push	r29
    1748:	ec 01       	movw	r28, r24
    174a:	8b 01       	movw	r16, r22
    174c:	7a 01       	movw	r14, r20
	while(!SCD30_HAL_data_ready()){};
    174e:	0e 94 82 0c 	call	0x1904	; 0x1904 <SCD30_HAL_data_ready>
    1752:	88 23       	and	r24, r24
    1754:	e1 f3       	breq	.-8      	; 0x174e <SCD30_get_reading+0x12>
	
	return read_all_values(co2, temp, humidity);
    1756:	a7 01       	movw	r20, r14
    1758:	b8 01       	movw	r22, r16
    175a:	ce 01       	movw	r24, r28
    175c:	0e 94 7e 05 	call	0xafc	; 0xafc <read_all_values>
}
    1760:	df 91       	pop	r29
    1762:	cf 91       	pop	r28
    1764:	1f 91       	pop	r17
    1766:	0f 91       	pop	r16
    1768:	ff 90       	pop	r15
    176a:	ef 90       	pop	r14
    176c:	08 95       	ret

Disassembly of section .text.test_get_reading:

00000da2 <test_get_reading>:
}

/************************************************************************/
/* Test get reading                                                     */
/************************************************************************/
static void test_get_reading(){
 da2:	0f 93       	push	r16
 da4:	1f 93       	push	r17
 da6:	cf 93       	push	r28
 da8:	df 93       	push	r29
 daa:	cd b7       	in	r28, 0x3d	; 61
 dac:	de b7       	in	r29, 0x3e	; 62
 dae:	a4 97       	sbiw	r28, 0x24	; 36
 db0:	0f b6       	in	r0, 0x3f	; 63
 db2:	f8 94       	cli
 db4:	de bf       	out	0x3e, r29	; 62
 db6:	0f be       	out	0x3f, r0	; 63
 db8:	cd bf       	out	0x3d, r28	; 61
	SCD30_STATUS status;
	uint16_t co2, temp, humidity;
	
	uart1_hal_send_string("Test get reading");
 dba:	60 ed       	ldi	r22, 0xD0	; 208
 dbc:	71 e0       	ldi	r23, 0x01	; 1
 dbe:	80 e0       	ldi	r24, 0x00	; 0
 dc0:	0e 94 2b 07 	call	0xe56	; 0xe56 <uart1_hal_send_string>
	
	status=SCD30_sensor_on();
 dc4:	0e 94 cd 0b 	call	0x179a	; 0x179a <SCD30_sensor_on>
	if(status!=SCD30_STATUS_SUCCESS){
 dc8:	88 23       	and	r24, r24
 dca:	31 f0       	breq	.+12     	; 0xdd8 <test_get_reading+0x36>
		uart1_hal_send_string("Failed ");
 dcc:	61 ee       	ldi	r22, 0xE1	; 225
 dce:	71 e0       	ldi	r23, 0x01	; 1
 dd0:	80 e0       	ldi	r24, 0x00	; 0
 dd2:	0e 94 2b 07 	call	0xe56	; 0xe56 <uart1_hal_send_string>
		return;
 dd6:	34 c0       	rjmp	.+104    	; 0xe40 <test_get_reading+0x9e>
	}
	
	status=SCD30_get_reading(&co2, &temp, &humidity);
 dd8:	ae 01       	movw	r20, r28
 dda:	4b 5f       	subi	r20, 0xFB	; 251
 ddc:	5f 4f       	sbci	r21, 0xFF	; 255
 dde:	be 01       	movw	r22, r28
 de0:	6d 5f       	subi	r22, 0xFD	; 253
 de2:	7f 4f       	sbci	r23, 0xFF	; 255
 de4:	ce 01       	movw	r24, r28
 de6:	01 96       	adiw	r24, 0x01	; 1
 de8:	0e 94 9e 0b 	call	0x173c	; 0x173c <SCD30_get_reading>
	if(status!=SCD30_STATUS_SUCCESS){
 dec:	88 23       	and	r24, r24
 dee:	31 f0       	breq	.+12     	; 0xdfc <test_get_reading+0x5a>
		uart1_hal_send_string("Failed ");
 df0:	61 ee       	ldi	r22, 0xE1	; 225
 df2:	71 e0       	ldi	r23, 0x01	; 1
 df4:	80 e0       	ldi	r24, 0x00	; 0
 df6:	0e 94 2b 07 	call	0xe56	; 0xe56 <uart1_hal_send_string>
		return;
 dfa:	22 c0       	rjmp	.+68     	; 0xe40 <test_get_reading+0x9e>
	}
	
	char msg[30];
	sprintf(msg, "%u, %u, %u", co2, temp, humidity);
 dfc:	8e 81       	ldd	r24, Y+6	; 0x06
 dfe:	8f 93       	push	r24
 e00:	8d 81       	ldd	r24, Y+5	; 0x05
 e02:	8f 93       	push	r24
 e04:	8c 81       	ldd	r24, Y+4	; 0x04
 e06:	8f 93       	push	r24
 e08:	8b 81       	ldd	r24, Y+3	; 0x03
 e0a:	8f 93       	push	r24
 e0c:	8a 81       	ldd	r24, Y+2	; 0x02
 e0e:	8f 93       	push	r24
 e10:	89 81       	ldd	r24, Y+1	; 0x01
 e12:	8f 93       	push	r24
 e14:	89 ee       	ldi	r24, 0xE9	; 233
 e16:	91 e0       	ldi	r25, 0x01	; 1
 e18:	a0 e0       	ldi	r26, 0x00	; 0
 e1a:	af 93       	push	r26
 e1c:	9f 93       	push	r25
 e1e:	8f 93       	push	r24
 e20:	8e 01       	movw	r16, r28
 e22:	09 5f       	subi	r16, 0xF9	; 249
 e24:	1f 4f       	sbci	r17, 0xFF	; 255
 e26:	1f 93       	push	r17
 e28:	0f 93       	push	r16
 e2a:	0e 94 80 0a 	call	0x1500	; 0x1500 <sprintf>
	uart1_hal_send_string(msg);
 e2e:	b8 01       	movw	r22, r16
 e30:	80 e8       	ldi	r24, 0x80	; 128
 e32:	0e 94 2b 07 	call	0xe56	; 0xe56 <uart1_hal_send_string>
 e36:	0f b6       	in	r0, 0x3f	; 63
 e38:	f8 94       	cli
 e3a:	de bf       	out	0x3e, r29	; 62
 e3c:	0f be       	out	0x3f, r0	; 63
 e3e:	cd bf       	out	0x3d, r28	; 61
}
 e40:	a4 96       	adiw	r28, 0x24	; 36
 e42:	0f b6       	in	r0, 0x3f	; 63
 e44:	f8 94       	cli
 e46:	de bf       	out	0x3e, r29	; 62
 e48:	0f be       	out	0x3f, r0	; 63
 e4a:	cd bf       	out	0x3d, r28	; 61
 e4c:	df 91       	pop	r29
 e4e:	cf 91       	pop	r28
 e50:	1f 91       	pop	r17
 e52:	0f 91       	pop	r16
 e54:	08 95       	ret

Disassembly of section .text.test_SCD30_module_start:

000017c0 <test_SCD30_module_start>:
static void test_read_all_values();
static void test_calc_validate_SI();
static void test_get_reading();

void test_SCD30_module_start(){
		uart1_hal_init();
    17c0:	0e 94 c5 0a 	call	0x158a	; 0x158a <uart1_hal_init>
		PM_HAL_SCD30_power_init();
    17c4:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <PM_HAL_SCD30_power_init>
		TWI_HAL_init();
    17c8:	0e 94 48 0c 	call	0x1890	; 0x1890 <TWI_HAL_init>
		while(1){
			//test_calc_validate_SI();
			//test_read_all_values();
			//test_sampling_all_values();
			//test_sampling_only_co2();
			test_get_reading();
    17cc:	0e 94 d1 06 	call	0xda2	; 0xda2 <test_get_reading>
    17d0:	2f ef       	ldi	r18, 0xFF	; 255
    17d2:	8d e3       	ldi	r24, 0x3D	; 61
    17d4:	99 e4       	ldi	r25, 0x49	; 73
    17d6:	21 50       	subi	r18, 0x01	; 1
    17d8:	80 40       	sbci	r24, 0x00	; 0
    17da:	90 40       	sbci	r25, 0x00	; 0
    17dc:	e1 f7       	brne	.-8      	; 0x17d6 <test_SCD30_module_start+0x16>
    17de:	00 c0       	rjmp	.+0      	; 0x17e0 <test_SCD30_module_start+0x20>
    17e0:	00 00       	nop
    17e2:	f4 cf       	rjmp	.-24     	; 0x17cc <test_SCD30_module_start+0xc>

Disassembly of section .text.test_runner:

0000192a <test_runner>:
#include "PUMP_module/test_PUMP_module.h"
#include "LED_module/test_LED_module.h"

void test_runner(){
	//test_LORA_module_start();
	test_SCD30_module_start();
    192a:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <test_SCD30_module_start>
    192e:	08 95       	ret

Disassembly of section .text.calc_crc8:

00001636 <calc_crc8>:
 *  Author: Christopher S. Nielsen
 */ 

#include "CRC8.h"

uint8_t calc_crc8(uint8_t data[], uint8_t length){
    1636:	ac 01       	movw	r20, r24
	    uint8_t remainder=CRC_INIT_VALUE;

	    for (uint8_t byte = 0; byte < length; byte++)
    1638:	30 e0       	ldi	r19, 0x00	; 0
 */ 

#include "CRC8.h"

uint8_t calc_crc8(uint8_t data[], uint8_t length){
	    uint8_t remainder=CRC_INIT_VALUE;
    163a:	8f ef       	ldi	r24, 0xFF	; 255

	    for (uint8_t byte = 0; byte < length; byte++)
    163c:	14 c0       	rjmp	.+40     	; 0x1666 <calc_crc8+0x30>
	    {
		    remainder ^= data[byte];
    163e:	fa 01       	movw	r30, r20
    1640:	e3 0f       	add	r30, r19
    1642:	f1 1d       	adc	r31, r1
    1644:	90 81       	ld	r25, Z
    1646:	89 27       	eor	r24, r25

		    for (uint8_t i = 8; i >0; --i)
    1648:	28 e0       	ldi	r18, 0x08	; 8
    164a:	0a c0       	rjmp	.+20     	; 0x1660 <calc_crc8+0x2a>
		    {
			    if(remainder & 0x80){
    164c:	88 23       	and	r24, r24
    164e:	34 f4       	brge	.+12     	; 0x165c <calc_crc8+0x26>
				    remainder=(remainder << 1) ^ CRC_POLYNOMIAL;
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	88 0f       	add	r24, r24
    1654:	99 1f       	adc	r25, r25
    1656:	91 e3       	ldi	r25, 0x31	; 49
    1658:	89 27       	eor	r24, r25
    165a:	01 c0       	rjmp	.+2      	; 0x165e <calc_crc8+0x28>
				    }else{
				    remainder=(remainder << 1);
    165c:	88 0f       	add	r24, r24

	    for (uint8_t byte = 0; byte < length; byte++)
	    {
		    remainder ^= data[byte];

		    for (uint8_t i = 8; i >0; --i)
    165e:	21 50       	subi	r18, 0x01	; 1
    1660:	21 11       	cpse	r18, r1
    1662:	f4 cf       	rjmp	.-24     	; 0x164c <calc_crc8+0x16>
#include "CRC8.h"

uint8_t calc_crc8(uint8_t data[], uint8_t length){
	    uint8_t remainder=CRC_INIT_VALUE;

	    for (uint8_t byte = 0; byte < length; byte++)
    1664:	3f 5f       	subi	r19, 0xFF	; 255
    1666:	36 17       	cp	r19, r22
    1668:	50 f3       	brcs	.-44     	; 0x163e <calc_crc8+0x8>
				    remainder=(remainder << 1);
			    }
		    }
	    }
	    return remainder;
    166a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001918 <__cmpsf2>:
    1918:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__fp_cmp>
    191c:	08 f4       	brcc	.+2      	; 0x1920 <__cmpsf2+0x8>
    191e:	81 e0       	ldi	r24, 0x01	; 1
    1920:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001286 <__fixunssfsi>:
    1286:	0e 94 ab 0a 	call	0x1556	; 0x1556 <__fp_splitA>
    128a:	88 f0       	brcs	.+34     	; 0x12ae <__fixunssfsi+0x28>
    128c:	9f 57       	subi	r25, 0x7F	; 127
    128e:	98 f0       	brcs	.+38     	; 0x12b6 <__fixunssfsi+0x30>
    1290:	b9 2f       	mov	r27, r25
    1292:	99 27       	eor	r25, r25
    1294:	b7 51       	subi	r27, 0x17	; 23
    1296:	b0 f0       	brcs	.+44     	; 0x12c4 <__fixunssfsi+0x3e>
    1298:	e1 f0       	breq	.+56     	; 0x12d2 <__fixunssfsi+0x4c>
    129a:	66 0f       	add	r22, r22
    129c:	77 1f       	adc	r23, r23
    129e:	88 1f       	adc	r24, r24
    12a0:	99 1f       	adc	r25, r25
    12a2:	1a f0       	brmi	.+6      	; 0x12aa <__fixunssfsi+0x24>
    12a4:	ba 95       	dec	r27
    12a6:	c9 f7       	brne	.-14     	; 0x129a <__fixunssfsi+0x14>
    12a8:	14 c0       	rjmp	.+40     	; 0x12d2 <__fixunssfsi+0x4c>
    12aa:	b1 30       	cpi	r27, 0x01	; 1
    12ac:	91 f0       	breq	.+36     	; 0x12d2 <__fixunssfsi+0x4c>
    12ae:	0e 94 75 0c 	call	0x18ea	; 0x18ea <__fp_zero>
    12b2:	b1 e0       	ldi	r27, 0x01	; 1
    12b4:	08 95       	ret
    12b6:	0c 94 75 0c 	jmp	0x18ea	; 0x18ea <__fp_zero>
    12ba:	67 2f       	mov	r22, r23
    12bc:	78 2f       	mov	r23, r24
    12be:	88 27       	eor	r24, r24
    12c0:	b8 5f       	subi	r27, 0xF8	; 248
    12c2:	39 f0       	breq	.+14     	; 0x12d2 <__fixunssfsi+0x4c>
    12c4:	b9 3f       	cpi	r27, 0xF9	; 249
    12c6:	cc f3       	brlt	.-14     	; 0x12ba <__fixunssfsi+0x34>
    12c8:	86 95       	lsr	r24
    12ca:	77 95       	ror	r23
    12cc:	67 95       	ror	r22
    12ce:	b3 95       	inc	r27
    12d0:	d9 f7       	brne	.-10     	; 0x12c8 <__fixunssfsi+0x42>
    12d2:	3e f4       	brtc	.+14     	; 0x12e2 <__fixunssfsi+0x5c>
    12d4:	90 95       	com	r25
    12d6:	80 95       	com	r24
    12d8:	70 95       	com	r23
    12da:	61 95       	neg	r22
    12dc:	7f 4f       	sbci	r23, 0xFF	; 255
    12de:	8f 4f       	sbci	r24, 0xFF	; 255
    12e0:	9f 4f       	sbci	r25, 0xFF	; 255
    12e2:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000f68 <__floatunsisf>:
 f68:	e8 94       	clt
 f6a:	09 c0       	rjmp	.+18     	; 0xf7e <__floatsisf+0x12>

00000f6c <__floatsisf>:
 f6c:	97 fb       	bst	r25, 7
 f6e:	3e f4       	brtc	.+14     	; 0xf7e <__floatsisf+0x12>
 f70:	90 95       	com	r25
 f72:	80 95       	com	r24
 f74:	70 95       	com	r23
 f76:	61 95       	neg	r22
 f78:	7f 4f       	sbci	r23, 0xFF	; 255
 f7a:	8f 4f       	sbci	r24, 0xFF	; 255
 f7c:	9f 4f       	sbci	r25, 0xFF	; 255
 f7e:	99 23       	and	r25, r25
 f80:	a9 f0       	breq	.+42     	; 0xfac <__floatsisf+0x40>
 f82:	f9 2f       	mov	r31, r25
 f84:	96 e9       	ldi	r25, 0x96	; 150
 f86:	bb 27       	eor	r27, r27
 f88:	93 95       	inc	r25
 f8a:	f6 95       	lsr	r31
 f8c:	87 95       	ror	r24
 f8e:	77 95       	ror	r23
 f90:	67 95       	ror	r22
 f92:	b7 95       	ror	r27
 f94:	f1 11       	cpse	r31, r1
 f96:	f8 cf       	rjmp	.-16     	; 0xf88 <__floatsisf+0x1c>
 f98:	fa f4       	brpl	.+62     	; 0xfd8 <__floatsisf+0x6c>
 f9a:	bb 0f       	add	r27, r27
 f9c:	11 f4       	brne	.+4      	; 0xfa2 <__floatsisf+0x36>
 f9e:	60 ff       	sbrs	r22, 0
 fa0:	1b c0       	rjmp	.+54     	; 0xfd8 <__floatsisf+0x6c>
 fa2:	6f 5f       	subi	r22, 0xFF	; 255
 fa4:	7f 4f       	sbci	r23, 0xFF	; 255
 fa6:	8f 4f       	sbci	r24, 0xFF	; 255
 fa8:	9f 4f       	sbci	r25, 0xFF	; 255
 faa:	16 c0       	rjmp	.+44     	; 0xfd8 <__floatsisf+0x6c>
 fac:	88 23       	and	r24, r24
 fae:	11 f0       	breq	.+4      	; 0xfb4 <__floatsisf+0x48>
 fb0:	96 e9       	ldi	r25, 0x96	; 150
 fb2:	11 c0       	rjmp	.+34     	; 0xfd6 <__floatsisf+0x6a>
 fb4:	77 23       	and	r23, r23
 fb6:	21 f0       	breq	.+8      	; 0xfc0 <__floatsisf+0x54>
 fb8:	9e e8       	ldi	r25, 0x8E	; 142
 fba:	87 2f       	mov	r24, r23
 fbc:	76 2f       	mov	r23, r22
 fbe:	05 c0       	rjmp	.+10     	; 0xfca <__floatsisf+0x5e>
 fc0:	66 23       	and	r22, r22
 fc2:	71 f0       	breq	.+28     	; 0xfe0 <__floatsisf+0x74>
 fc4:	96 e8       	ldi	r25, 0x86	; 134
 fc6:	86 2f       	mov	r24, r22
 fc8:	70 e0       	ldi	r23, 0x00	; 0
 fca:	60 e0       	ldi	r22, 0x00	; 0
 fcc:	2a f0       	brmi	.+10     	; 0xfd8 <__floatsisf+0x6c>
 fce:	9a 95       	dec	r25
 fd0:	66 0f       	add	r22, r22
 fd2:	77 1f       	adc	r23, r23
 fd4:	88 1f       	adc	r24, r24
 fd6:	da f7       	brpl	.-10     	; 0xfce <__floatsisf+0x62>
 fd8:	88 0f       	add	r24, r24
 fda:	96 95       	lsr	r25
 fdc:	87 95       	ror	r24
 fde:	97 f9       	bld	r25, 7
 fe0:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000014b8 <__fp_cmp>:
    14b8:	99 0f       	add	r25, r25
    14ba:	00 08       	sbc	r0, r0
    14bc:	55 0f       	add	r21, r21
    14be:	aa 0b       	sbc	r26, r26
    14c0:	e0 e8       	ldi	r30, 0x80	; 128
    14c2:	fe ef       	ldi	r31, 0xFE	; 254
    14c4:	16 16       	cp	r1, r22
    14c6:	17 06       	cpc	r1, r23
    14c8:	e8 07       	cpc	r30, r24
    14ca:	f9 07       	cpc	r31, r25
    14cc:	c0 f0       	brcs	.+48     	; 0x14fe <__fp_cmp+0x46>
    14ce:	12 16       	cp	r1, r18
    14d0:	13 06       	cpc	r1, r19
    14d2:	e4 07       	cpc	r30, r20
    14d4:	f5 07       	cpc	r31, r21
    14d6:	98 f0       	brcs	.+38     	; 0x14fe <__fp_cmp+0x46>
    14d8:	62 1b       	sub	r22, r18
    14da:	73 0b       	sbc	r23, r19
    14dc:	84 0b       	sbc	r24, r20
    14de:	95 0b       	sbc	r25, r21
    14e0:	39 f4       	brne	.+14     	; 0x14f0 <__fp_cmp+0x38>
    14e2:	0a 26       	eor	r0, r26
    14e4:	61 f0       	breq	.+24     	; 0x14fe <__fp_cmp+0x46>
    14e6:	23 2b       	or	r18, r19
    14e8:	24 2b       	or	r18, r20
    14ea:	25 2b       	or	r18, r21
    14ec:	21 f4       	brne	.+8      	; 0x14f6 <__fp_cmp+0x3e>
    14ee:	08 95       	ret
    14f0:	0a 26       	eor	r0, r26
    14f2:	09 f4       	brne	.+2      	; 0x14f6 <__fp_cmp+0x3e>
    14f4:	a1 40       	sbci	r26, 0x01	; 1
    14f6:	a6 95       	lsr	r26
    14f8:	8f ef       	ldi	r24, 0xFF	; 255
    14fa:	81 1d       	adc	r24, r1
    14fc:	81 1d       	adc	r24, r1
    14fe:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000018f8 <__fp_inf>:
    18f8:	97 f9       	bld	r25, 7
    18fa:	9f 67       	ori	r25, 0x7F	; 127
    18fc:	80 e8       	ldi	r24, 0x80	; 128
    18fe:	70 e0       	ldi	r23, 0x00	; 0
    1900:	60 e0       	ldi	r22, 0x00	; 0
    1902:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001930 <__fp_nan>:
    1930:	9f ef       	ldi	r25, 0xFF	; 255
    1932:	80 ec       	ldi	r24, 0xC0	; 192
    1934:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000018ce <__fp_pscA>:
    18ce:	00 24       	eor	r0, r0
    18d0:	0a 94       	dec	r0
    18d2:	16 16       	cp	r1, r22
    18d4:	17 06       	cpc	r1, r23
    18d6:	18 06       	cpc	r1, r24
    18d8:	09 06       	cpc	r0, r25
    18da:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000018dc <__fp_pscB>:
    18dc:	00 24       	eor	r0, r0
    18de:	0a 94       	dec	r0
    18e0:	12 16       	cp	r1, r18
    18e2:	13 06       	cpc	r1, r19
    18e4:	14 06       	cpc	r1, r20
    18e6:	05 06       	cpc	r0, r21
    18e8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000017e4 <__fp_round>:
    17e4:	09 2e       	mov	r0, r25
    17e6:	03 94       	inc	r0
    17e8:	00 0c       	add	r0, r0
    17ea:	11 f4       	brne	.+4      	; 0x17f0 <__fp_round+0xc>
    17ec:	88 23       	and	r24, r24
    17ee:	52 f0       	brmi	.+20     	; 0x1804 <__fp_round+0x20>
    17f0:	bb 0f       	add	r27, r27
    17f2:	40 f4       	brcc	.+16     	; 0x1804 <__fp_round+0x20>
    17f4:	bf 2b       	or	r27, r31
    17f6:	11 f4       	brne	.+4      	; 0x17fc <__fp_round+0x18>
    17f8:	60 ff       	sbrs	r22, 0
    17fa:	04 c0       	rjmp	.+8      	; 0x1804 <__fp_round+0x20>
    17fc:	6f 5f       	subi	r22, 0xFF	; 255
    17fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1800:	8f 4f       	sbci	r24, 0xFF	; 255
    1802:	9f 4f       	sbci	r25, 0xFF	; 255
    1804:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001546 <__fp_split3>:
    1546:	57 fd       	sbrc	r21, 7
    1548:	90 58       	subi	r25, 0x80	; 128
    154a:	44 0f       	add	r20, r20
    154c:	55 1f       	adc	r21, r21
    154e:	59 f0       	breq	.+22     	; 0x1566 <__fp_splitA+0x10>
    1550:	5f 3f       	cpi	r21, 0xFF	; 255
    1552:	71 f0       	breq	.+28     	; 0x1570 <__fp_splitA+0x1a>
    1554:	47 95       	ror	r20

00001556 <__fp_splitA>:
    1556:	88 0f       	add	r24, r24
    1558:	97 fb       	bst	r25, 7
    155a:	99 1f       	adc	r25, r25
    155c:	61 f0       	breq	.+24     	; 0x1576 <__fp_splitA+0x20>
    155e:	9f 3f       	cpi	r25, 0xFF	; 255
    1560:	79 f0       	breq	.+30     	; 0x1580 <__fp_splitA+0x2a>
    1562:	87 95       	ror	r24
    1564:	08 95       	ret
    1566:	12 16       	cp	r1, r18
    1568:	13 06       	cpc	r1, r19
    156a:	14 06       	cpc	r1, r20
    156c:	55 1f       	adc	r21, r21
    156e:	f2 cf       	rjmp	.-28     	; 0x1554 <__fp_split3+0xe>
    1570:	46 95       	lsr	r20
    1572:	f1 df       	rcall	.-30     	; 0x1556 <__fp_splitA>
    1574:	08 c0       	rjmp	.+16     	; 0x1586 <__fp_splitA+0x30>
    1576:	16 16       	cp	r1, r22
    1578:	17 06       	cpc	r1, r23
    157a:	18 06       	cpc	r1, r24
    157c:	99 1f       	adc	r25, r25
    157e:	f1 cf       	rjmp	.-30     	; 0x1562 <__fp_splitA+0xc>
    1580:	86 95       	lsr	r24
    1582:	71 05       	cpc	r23, r1
    1584:	61 05       	cpc	r22, r1
    1586:	08 94       	sec
    1588:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000018ea <__fp_zero>:
    18ea:	e8 94       	clt

000018ec <__fp_szero>:
    18ec:	bb 27       	eor	r27, r27
    18ee:	66 27       	eor	r22, r22
    18f0:	77 27       	eor	r23, r23
    18f2:	cb 01       	movw	r24, r22
    18f4:	97 f9       	bld	r25, 7
    18f6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001922 <__mulsf3>:
    1922:	0e 94 09 06 	call	0xc12	; 0xc12 <__mulsf3x>
    1926:	0c 94 f2 0b 	jmp	0x17e4	; 0x17e4 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000c12 <__mulsf3x>:
 c12:	0f c0       	rjmp	.+30     	; 0xc32 <__mulsf3x+0x20>
 c14:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__fp_pscA>
 c18:	38 f0       	brcs	.+14     	; 0xc28 <__mulsf3x+0x16>
 c1a:	0e 94 6e 0c 	call	0x18dc	; 0x18dc <__fp_pscB>
 c1e:	20 f0       	brcs	.+8      	; 0xc28 <__mulsf3x+0x16>
 c20:	95 23       	and	r25, r21
 c22:	11 f0       	breq	.+4      	; 0xc28 <__mulsf3x+0x16>
 c24:	0c 94 7c 0c 	jmp	0x18f8	; 0x18f8 <__fp_inf>
 c28:	0c 94 98 0c 	jmp	0x1930	; 0x1930 <__fp_nan>
 c2c:	11 24       	eor	r1, r1
 c2e:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__fp_szero>
 c32:	0e 94 a3 0a 	call	0x1546	; 0x1546 <__fp_split3>
 c36:	70 f3       	brcs	.-36     	; 0xc14 <__mulsf3x+0x2>

00000c38 <__mulsf3_pse>:
 c38:	95 9f       	mul	r25, r21
 c3a:	c1 f3       	breq	.-16     	; 0xc2c <__mulsf3x+0x1a>
 c3c:	95 0f       	add	r25, r21
 c3e:	50 e0       	ldi	r21, 0x00	; 0
 c40:	55 1f       	adc	r21, r21
 c42:	62 9f       	mul	r22, r18
 c44:	f0 01       	movw	r30, r0
 c46:	72 9f       	mul	r23, r18
 c48:	bb 27       	eor	r27, r27
 c4a:	f0 0d       	add	r31, r0
 c4c:	b1 1d       	adc	r27, r1
 c4e:	63 9f       	mul	r22, r19
 c50:	aa 27       	eor	r26, r26
 c52:	f0 0d       	add	r31, r0
 c54:	b1 1d       	adc	r27, r1
 c56:	aa 1f       	adc	r26, r26
 c58:	64 9f       	mul	r22, r20
 c5a:	66 27       	eor	r22, r22
 c5c:	b0 0d       	add	r27, r0
 c5e:	a1 1d       	adc	r26, r1
 c60:	66 1f       	adc	r22, r22
 c62:	82 9f       	mul	r24, r18
 c64:	22 27       	eor	r18, r18
 c66:	b0 0d       	add	r27, r0
 c68:	a1 1d       	adc	r26, r1
 c6a:	62 1f       	adc	r22, r18
 c6c:	73 9f       	mul	r23, r19
 c6e:	b0 0d       	add	r27, r0
 c70:	a1 1d       	adc	r26, r1
 c72:	62 1f       	adc	r22, r18
 c74:	83 9f       	mul	r24, r19
 c76:	a0 0d       	add	r26, r0
 c78:	61 1d       	adc	r22, r1
 c7a:	22 1f       	adc	r18, r18
 c7c:	74 9f       	mul	r23, r20
 c7e:	33 27       	eor	r19, r19
 c80:	a0 0d       	add	r26, r0
 c82:	61 1d       	adc	r22, r1
 c84:	23 1f       	adc	r18, r19
 c86:	84 9f       	mul	r24, r20
 c88:	60 0d       	add	r22, r0
 c8a:	21 1d       	adc	r18, r1
 c8c:	82 2f       	mov	r24, r18
 c8e:	76 2f       	mov	r23, r22
 c90:	6a 2f       	mov	r22, r26
 c92:	11 24       	eor	r1, r1
 c94:	9f 57       	subi	r25, 0x7F	; 127
 c96:	50 40       	sbci	r21, 0x00	; 0
 c98:	9a f0       	brmi	.+38     	; 0xcc0 <__mulsf3_pse+0x88>
 c9a:	f1 f0       	breq	.+60     	; 0xcd8 <__mulsf3_pse+0xa0>
 c9c:	88 23       	and	r24, r24
 c9e:	4a f0       	brmi	.+18     	; 0xcb2 <__mulsf3_pse+0x7a>
 ca0:	ee 0f       	add	r30, r30
 ca2:	ff 1f       	adc	r31, r31
 ca4:	bb 1f       	adc	r27, r27
 ca6:	66 1f       	adc	r22, r22
 ca8:	77 1f       	adc	r23, r23
 caa:	88 1f       	adc	r24, r24
 cac:	91 50       	subi	r25, 0x01	; 1
 cae:	50 40       	sbci	r21, 0x00	; 0
 cb0:	a9 f7       	brne	.-22     	; 0xc9c <__mulsf3_pse+0x64>
 cb2:	9e 3f       	cpi	r25, 0xFE	; 254
 cb4:	51 05       	cpc	r21, r1
 cb6:	80 f0       	brcs	.+32     	; 0xcd8 <__mulsf3_pse+0xa0>
 cb8:	0c 94 7c 0c 	jmp	0x18f8	; 0x18f8 <__fp_inf>
 cbc:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__fp_szero>
 cc0:	5f 3f       	cpi	r21, 0xFF	; 255
 cc2:	e4 f3       	brlt	.-8      	; 0xcbc <__mulsf3_pse+0x84>
 cc4:	98 3e       	cpi	r25, 0xE8	; 232
 cc6:	d4 f3       	brlt	.-12     	; 0xcbc <__mulsf3_pse+0x84>
 cc8:	86 95       	lsr	r24
 cca:	77 95       	ror	r23
 ccc:	67 95       	ror	r22
 cce:	b7 95       	ror	r27
 cd0:	f7 95       	ror	r31
 cd2:	e7 95       	ror	r30
 cd4:	9f 5f       	subi	r25, 0xFF	; 255
 cd6:	c1 f7       	brne	.-16     	; 0xcc8 <__mulsf3_pse+0x90>
 cd8:	fe 2b       	or	r31, r30
 cda:	88 0f       	add	r24, r24
 cdc:	91 1d       	adc	r25, r1
 cde:	96 95       	lsr	r25
 ce0:	87 95       	ror	r24
 ce2:	97 f9       	bld	r25, 7
 ce4:	08 95       	ret

Disassembly of section .text.avrlibc:

00000208 <vfprintf>:
 208:	a4 e1       	ldi	r26, 0x14	; 20
 20a:	b0 e0       	ldi	r27, 0x00	; 0
 20c:	ea e0       	ldi	r30, 0x0A	; 10
 20e:	f1 e0       	ldi	r31, 0x01	; 1
 210:	0c 94 ff 0a 	jmp	0x15fe	; 0x15fe <__prologue_saves__>
 214:	6c 01       	movw	r12, r24
 216:	1a 01       	movw	r2, r20
 218:	46 2e       	mov	r4, r22
 21a:	59 01       	movw	r10, r18
 21c:	fc 01       	movw	r30, r24
 21e:	10 86       	std	Z+8, r1	; 0x08
 220:	17 82       	std	Z+7, r1	; 0x07
 222:	84 81       	ldd	r24, Z+4	; 0x04
 224:	81 ff       	sbrs	r24, 1
 226:	62 c3       	rjmp	.+1732   	; 0x8ec <__EEPROM_REGION_LENGTH__+0xec>
 228:	ce 01       	movw	r24, r28
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	9d 87       	std	Y+13, r25	; 0x0d
 22e:	8c 87       	std	Y+12, r24	; 0x0c
 230:	a0 e8       	ldi	r26, 0x80	; 128
 232:	8a 8b       	std	Y+18, r24	; 0x12
 234:	9b 8b       	std	Y+19, r25	; 0x13
 236:	ac 8b       	std	Y+20, r26	; 0x14
 238:	f1 01       	movw	r30, r2
 23a:	84 91       	lpm	r24, Z
 23c:	47 fc       	sbrc	r4, 7
 23e:	80 81       	ld	r24, Z
 240:	88 23       	and	r24, r24
 242:	09 f4       	brne	.+2      	; 0x246 <vfprintf+0x3e>
 244:	4f c3       	rjmp	.+1694   	; 0x8e4 <__EEPROM_REGION_LENGTH__+0xe4>
 246:	44 2d       	mov	r20, r4
 248:	91 01       	movw	r18, r2
 24a:	2f 5f       	subi	r18, 0xFF	; 255
 24c:	3f 4f       	sbci	r19, 0xFF	; 255
 24e:	4f 4f       	sbci	r20, 0xFF	; 255
 250:	85 32       	cpi	r24, 0x25	; 37
 252:	19 f0       	breq	.+6      	; 0x25a <vfprintf+0x52>
 254:	19 01       	movw	r2, r18
 256:	44 2e       	mov	r4, r20
 258:	0a c0       	rjmp	.+20     	; 0x26e <vfprintf+0x66>
 25a:	f9 01       	movw	r30, r18
 25c:	84 91       	lpm	r24, Z
 25e:	47 fd       	sbrc	r20, 7
 260:	80 81       	ld	r24, Z
 262:	92 e0       	ldi	r25, 0x02	; 2
 264:	29 0e       	add	r2, r25
 266:	31 1c       	adc	r3, r1
 268:	41 1c       	adc	r4, r1
 26a:	85 32       	cpi	r24, 0x25	; 37
 26c:	49 f4       	brne	.+18     	; 0x280 <vfprintf+0x78>
 26e:	b6 01       	movw	r22, r12
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 276:	bf 86       	std	Y+15, r11	; 0x0f
 278:	ae 86       	std	Y+14, r10	; 0x0e
 27a:	ae 84       	ldd	r10, Y+14	; 0x0e
 27c:	bf 84       	ldd	r11, Y+15	; 0x0f
 27e:	dc cf       	rjmp	.-72     	; 0x238 <vfprintf+0x30>
 280:	10 e0       	ldi	r17, 0x00	; 0
 282:	f1 2c       	mov	r15, r1
 284:	00 e0       	ldi	r16, 0x00	; 0
 286:	00 32       	cpi	r16, 0x20	; 32
 288:	a0 f4       	brcc	.+40     	; 0x2b2 <vfprintf+0xaa>
 28a:	8b 32       	cpi	r24, 0x2B	; 43
 28c:	69 f0       	breq	.+26     	; 0x2a8 <vfprintf+0xa0>
 28e:	30 f4       	brcc	.+12     	; 0x29c <vfprintf+0x94>
 290:	80 32       	cpi	r24, 0x20	; 32
 292:	59 f0       	breq	.+22     	; 0x2aa <vfprintf+0xa2>
 294:	83 32       	cpi	r24, 0x23	; 35
 296:	69 f4       	brne	.+26     	; 0x2b2 <vfprintf+0xaa>
 298:	00 61       	ori	r16, 0x10	; 16
 29a:	2c c0       	rjmp	.+88     	; 0x2f4 <vfprintf+0xec>
 29c:	8d 32       	cpi	r24, 0x2D	; 45
 29e:	39 f0       	breq	.+14     	; 0x2ae <vfprintf+0xa6>
 2a0:	80 33       	cpi	r24, 0x30	; 48
 2a2:	39 f4       	brne	.+14     	; 0x2b2 <vfprintf+0xaa>
 2a4:	01 60       	ori	r16, 0x01	; 1
 2a6:	26 c0       	rjmp	.+76     	; 0x2f4 <vfprintf+0xec>
 2a8:	02 60       	ori	r16, 0x02	; 2
 2aa:	04 60       	ori	r16, 0x04	; 4
 2ac:	23 c0       	rjmp	.+70     	; 0x2f4 <vfprintf+0xec>
 2ae:	08 60       	ori	r16, 0x08	; 8
 2b0:	21 c0       	rjmp	.+66     	; 0x2f4 <vfprintf+0xec>
 2b2:	07 fd       	sbrc	r16, 7
 2b4:	29 c0       	rjmp	.+82     	; 0x308 <vfprintf+0x100>
 2b6:	90 ed       	ldi	r25, 0xD0	; 208
 2b8:	98 0f       	add	r25, r24
 2ba:	9a 30       	cpi	r25, 0x0A	; 10
 2bc:	78 f4       	brcc	.+30     	; 0x2dc <vfprintf+0xd4>
 2be:	06 ff       	sbrs	r16, 6
 2c0:	06 c0       	rjmp	.+12     	; 0x2ce <vfprintf+0xc6>
 2c2:	aa e0       	ldi	r26, 0x0A	; 10
 2c4:	1a 9f       	mul	r17, r26
 2c6:	90 0d       	add	r25, r0
 2c8:	11 24       	eor	r1, r1
 2ca:	19 2f       	mov	r17, r25
 2cc:	13 c0       	rjmp	.+38     	; 0x2f4 <vfprintf+0xec>
 2ce:	ea e0       	ldi	r30, 0x0A	; 10
 2d0:	fe 9e       	mul	r15, r30
 2d2:	90 0d       	add	r25, r0
 2d4:	11 24       	eor	r1, r1
 2d6:	f9 2e       	mov	r15, r25
 2d8:	00 62       	ori	r16, 0x20	; 32
 2da:	0c c0       	rjmp	.+24     	; 0x2f4 <vfprintf+0xec>
 2dc:	8e 32       	cpi	r24, 0x2E	; 46
 2de:	21 f4       	brne	.+8      	; 0x2e8 <vfprintf+0xe0>
 2e0:	06 fd       	sbrc	r16, 6
 2e2:	00 c3       	rjmp	.+1536   	; 0x8e4 <__EEPROM_REGION_LENGTH__+0xe4>
 2e4:	00 64       	ori	r16, 0x40	; 64
 2e6:	06 c0       	rjmp	.+12     	; 0x2f4 <vfprintf+0xec>
 2e8:	8c 36       	cpi	r24, 0x6C	; 108
 2ea:	11 f4       	brne	.+4      	; 0x2f0 <vfprintf+0xe8>
 2ec:	00 68       	ori	r16, 0x80	; 128
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <vfprintf+0xec>
 2f0:	88 36       	cpi	r24, 0x68	; 104
 2f2:	51 f4       	brne	.+20     	; 0x308 <vfprintf+0x100>
 2f4:	f1 01       	movw	r30, r2
 2f6:	84 91       	lpm	r24, Z
 2f8:	47 fc       	sbrc	r4, 7
 2fa:	80 81       	ld	r24, Z
 2fc:	ff ef       	ldi	r31, 0xFF	; 255
 2fe:	2f 1a       	sub	r2, r31
 300:	3f 0a       	sbc	r3, r31
 302:	4f 0a       	sbc	r4, r31
 304:	81 11       	cpse	r24, r1
 306:	bf cf       	rjmp	.-130    	; 0x286 <vfprintf+0x7e>
 308:	9b eb       	ldi	r25, 0xBB	; 187
 30a:	98 0f       	add	r25, r24
 30c:	93 30       	cpi	r25, 0x03	; 3
 30e:	18 f4       	brcc	.+6      	; 0x316 <vfprintf+0x10e>
 310:	00 61       	ori	r16, 0x10	; 16
 312:	80 5e       	subi	r24, 0xE0	; 224
 314:	06 c0       	rjmp	.+12     	; 0x322 <vfprintf+0x11a>
 316:	9b e9       	ldi	r25, 0x9B	; 155
 318:	98 0f       	add	r25, r24
 31a:	93 30       	cpi	r25, 0x03	; 3
 31c:	08 f0       	brcs	.+2      	; 0x320 <vfprintf+0x118>
 31e:	66 c1       	rjmp	.+716    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 320:	0f 7e       	andi	r16, 0xEF	; 239
 322:	06 ff       	sbrs	r16, 6
 324:	16 e0       	ldi	r17, 0x06	; 6
 326:	0f 73       	andi	r16, 0x3F	; 63
 328:	70 2e       	mov	r7, r16
 32a:	85 36       	cpi	r24, 0x65	; 101
 32c:	21 f4       	brne	.+8      	; 0x336 <vfprintf+0x12e>
 32e:	20 2f       	mov	r18, r16
 330:	20 64       	ori	r18, 0x40	; 64
 332:	72 2e       	mov	r7, r18
 334:	08 c0       	rjmp	.+16     	; 0x346 <vfprintf+0x13e>
 336:	86 36       	cpi	r24, 0x66	; 102
 338:	21 f4       	brne	.+8      	; 0x342 <vfprintf+0x13a>
 33a:	80 2f       	mov	r24, r16
 33c:	80 68       	ori	r24, 0x80	; 128
 33e:	78 2e       	mov	r7, r24
 340:	02 c0       	rjmp	.+4      	; 0x346 <vfprintf+0x13e>
 342:	11 11       	cpse	r17, r1
 344:	11 50       	subi	r17, 0x01	; 1
 346:	77 fe       	sbrs	r7, 7
 348:	07 c0       	rjmp	.+14     	; 0x358 <vfprintf+0x150>
 34a:	1c 33       	cpi	r17, 0x3C	; 60
 34c:	50 f4       	brcc	.+20     	; 0x362 <vfprintf+0x15a>
 34e:	ee 24       	eor	r14, r14
 350:	e3 94       	inc	r14
 352:	e1 0e       	add	r14, r17
 354:	27 e0       	ldi	r18, 0x07	; 7
 356:	0b c0       	rjmp	.+22     	; 0x36e <vfprintf+0x166>
 358:	18 30       	cpi	r17, 0x08	; 8
 35a:	38 f0       	brcs	.+14     	; 0x36a <vfprintf+0x162>
 35c:	27 e0       	ldi	r18, 0x07	; 7
 35e:	17 e0       	ldi	r17, 0x07	; 7
 360:	05 c0       	rjmp	.+10     	; 0x36c <vfprintf+0x164>
 362:	27 e0       	ldi	r18, 0x07	; 7
 364:	6c e3       	ldi	r22, 0x3C	; 60
 366:	e6 2e       	mov	r14, r22
 368:	02 c0       	rjmp	.+4      	; 0x36e <vfprintf+0x166>
 36a:	21 2f       	mov	r18, r17
 36c:	e1 2c       	mov	r14, r1
 36e:	f5 01       	movw	r30, r10
 370:	34 96       	adiw	r30, 0x04	; 4
 372:	ff 87       	std	Y+15, r31	; 0x0f
 374:	ee 87       	std	Y+14, r30	; 0x0e
 376:	f5 01       	movw	r30, r10
 378:	60 81       	ld	r22, Z
 37a:	71 81       	ldd	r23, Z+1	; 0x01
 37c:	82 81       	ldd	r24, Z+2	; 0x02
 37e:	93 81       	ldd	r25, Z+3	; 0x03
 380:	0e 2d       	mov	r16, r14
 382:	ae 01       	movw	r20, r28
 384:	4f 5f       	subi	r20, 0xFF	; 255
 386:	5f 4f       	sbci	r21, 0xFF	; 255
 388:	0e 94 a6 04 	call	0x94c	; 0x94c <__ftoa_engine>
 38c:	5c 01       	movw	r10, r24
 38e:	59 80       	ldd	r5, Y+1	; 0x01
 390:	50 fe       	sbrs	r5, 0
 392:	02 c0       	rjmp	.+4      	; 0x398 <vfprintf+0x190>
 394:	53 fe       	sbrs	r5, 3
 396:	06 c0       	rjmp	.+12     	; 0x3a4 <vfprintf+0x19c>
 398:	71 fc       	sbrc	r7, 1
 39a:	06 c0       	rjmp	.+12     	; 0x3a8 <vfprintf+0x1a0>
 39c:	72 fe       	sbrs	r7, 2
 39e:	06 c0       	rjmp	.+12     	; 0x3ac <vfprintf+0x1a4>
 3a0:	00 e2       	ldi	r16, 0x20	; 32
 3a2:	05 c0       	rjmp	.+10     	; 0x3ae <vfprintf+0x1a6>
 3a4:	0d e2       	ldi	r16, 0x2D	; 45
 3a6:	03 c0       	rjmp	.+6      	; 0x3ae <vfprintf+0x1a6>
 3a8:	0b e2       	ldi	r16, 0x2B	; 43
 3aa:	01 c0       	rjmp	.+2      	; 0x3ae <vfprintf+0x1a6>
 3ac:	00 e0       	ldi	r16, 0x00	; 0
 3ae:	85 2d       	mov	r24, r5
 3b0:	8c 70       	andi	r24, 0x0C	; 12
 3b2:	19 f0       	breq	.+6      	; 0x3ba <vfprintf+0x1b2>
 3b4:	01 11       	cpse	r16, r1
 3b6:	73 c2       	rjmp	.+1254   	; 0x89e <__EEPROM_REGION_LENGTH__+0x9e>
 3b8:	be c2       	rjmp	.+1404   	; 0x936 <__EEPROM_REGION_LENGTH__+0x136>
 3ba:	77 fe       	sbrs	r7, 7
 3bc:	0f c0       	rjmp	.+30     	; 0x3dc <vfprintf+0x1d4>
 3be:	ea 0c       	add	r14, r10
 3c0:	54 fe       	sbrs	r5, 4
 3c2:	04 c0       	rjmp	.+8      	; 0x3cc <vfprintf+0x1c4>
 3c4:	8a 81       	ldd	r24, Y+2	; 0x02
 3c6:	81 33       	cpi	r24, 0x31	; 49
 3c8:	09 f4       	brne	.+2      	; 0x3cc <vfprintf+0x1c4>
 3ca:	ea 94       	dec	r14
 3cc:	1e 14       	cp	r1, r14
 3ce:	74 f5       	brge	.+92     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3d0:	28 e0       	ldi	r18, 0x08	; 8
 3d2:	2e 15       	cp	r18, r14
 3d4:	78 f5       	brcc	.+94     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3d6:	38 e0       	ldi	r19, 0x08	; 8
 3d8:	e3 2e       	mov	r14, r19
 3da:	2c c0       	rjmp	.+88     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3dc:	76 fc       	sbrc	r7, 6
 3de:	2a c0       	rjmp	.+84     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3e0:	81 2f       	mov	r24, r17
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	8a 15       	cp	r24, r10
 3e6:	9b 05       	cpc	r25, r11
 3e8:	9c f0       	brlt	.+38     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3ea:	8c ef       	ldi	r24, 0xFC	; 252
 3ec:	a8 16       	cp	r10, r24
 3ee:	8f ef       	ldi	r24, 0xFF	; 255
 3f0:	b8 06       	cpc	r11, r24
 3f2:	74 f0       	brlt	.+28     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f4:	97 2d       	mov	r25, r7
 3f6:	90 68       	ori	r25, 0x80	; 128
 3f8:	79 2e       	mov	r7, r25
 3fa:	0a c0       	rjmp	.+20     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3fc:	e2 e0       	ldi	r30, 0x02	; 2
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	ec 0f       	add	r30, r28
 402:	fd 1f       	adc	r31, r29
 404:	e1 0f       	add	r30, r17
 406:	f1 1d       	adc	r31, r1
 408:	80 81       	ld	r24, Z
 40a:	80 33       	cpi	r24, 0x30	; 48
 40c:	19 f4       	brne	.+6      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40e:	11 50       	subi	r17, 0x01	; 1
 410:	11 11       	cpse	r17, r1
 412:	f4 cf       	rjmp	.-24     	; 0x3fc <vfprintf+0x1f4>
 414:	77 fe       	sbrs	r7, 7
 416:	0e c0       	rjmp	.+28     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 418:	ee 24       	eor	r14, r14
 41a:	e3 94       	inc	r14
 41c:	e1 0e       	add	r14, r17
 41e:	81 2f       	mov	r24, r17
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	a8 16       	cp	r10, r24
 424:	b9 06       	cpc	r11, r25
 426:	2c f4       	brge	.+10     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 428:	1a 19       	sub	r17, r10
 42a:	04 c0       	rjmp	.+8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42c:	ee 24       	eor	r14, r14
 42e:	e3 94       	inc	r14
 430:	01 c0       	rjmp	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 432:	10 e0       	ldi	r17, 0x00	; 0
 434:	77 fe       	sbrs	r7, 7
 436:	06 c0       	rjmp	.+12     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 438:	1a 14       	cp	r1, r10
 43a:	1b 04       	cpc	r1, r11
 43c:	34 f4       	brge	.+12     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43e:	c5 01       	movw	r24, r10
 440:	01 96       	adiw	r24, 0x01	; 1
 442:	05 c0       	rjmp	.+10     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 444:	85 e0       	ldi	r24, 0x05	; 5
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	01 11       	cpse	r16, r1
 450:	01 96       	adiw	r24, 0x01	; 1
 452:	11 23       	and	r17, r17
 454:	31 f0       	breq	.+12     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 456:	21 2f       	mov	r18, r17
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	2f 5f       	subi	r18, 0xFF	; 255
 45c:	3f 4f       	sbci	r19, 0xFF	; 255
 45e:	82 0f       	add	r24, r18
 460:	93 1f       	adc	r25, r19
 462:	2f 2d       	mov	r18, r15
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	82 17       	cp	r24, r18
 468:	93 07       	cpc	r25, r19
 46a:	14 f4       	brge	.+4      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 46c:	f8 1a       	sub	r15, r24
 46e:	01 c0       	rjmp	.+2      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 470:	f1 2c       	mov	r15, r1
 472:	87 2d       	mov	r24, r7
 474:	89 70       	andi	r24, 0x09	; 9
 476:	49 f4       	brne	.+18     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 478:	ff 20       	and	r15, r15
 47a:	39 f0       	breq	.+14     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 47c:	b6 01       	movw	r22, r12
 47e:	80 e2       	ldi	r24, 0x20	; 32
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 486:	fa 94       	dec	r15
 488:	f7 cf       	rjmp	.-18     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 48a:	00 23       	and	r16, r16
 48c:	29 f0       	breq	.+10     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 48e:	b6 01       	movw	r22, r12
 490:	80 2f       	mov	r24, r16
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 498:	73 fc       	sbrc	r7, 3
 49a:	09 c0       	rjmp	.+18     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 49c:	ff 20       	and	r15, r15
 49e:	39 f0       	breq	.+14     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a0:	b6 01       	movw	r22, r12
 4a2:	80 e3       	ldi	r24, 0x30	; 48
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 4aa:	fa 94       	dec	r15
 4ac:	f7 cf       	rjmp	.-18     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 4ae:	77 fe       	sbrs	r7, 7
 4b0:	49 c0       	rjmp	.+146    	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 4b2:	35 01       	movw	r6, r10
 4b4:	b7 fe       	sbrs	r11, 7
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b8:	61 2c       	mov	r6, r1
 4ba:	71 2c       	mov	r7, r1
 4bc:	c5 01       	movw	r24, r10
 4be:	86 19       	sub	r24, r6
 4c0:	97 09       	sbc	r25, r7
 4c2:	88 24       	eor	r8, r8
 4c4:	83 94       	inc	r8
 4c6:	91 2c       	mov	r9, r1
 4c8:	8c 0e       	add	r8, r28
 4ca:	9d 1e       	adc	r9, r29
 4cc:	88 0e       	add	r8, r24
 4ce:	99 1e       	adc	r9, r25
 4d0:	f5 01       	movw	r30, r10
 4d2:	ee 19       	sub	r30, r14
 4d4:	f1 09       	sbc	r31, r1
 4d6:	f9 8b       	std	Y+17, r31	; 0x11
 4d8:	e8 8b       	std	Y+16, r30	; 0x10
 4da:	01 2f       	mov	r16, r17
 4dc:	10 e0       	ldi	r17, 0x00	; 0
 4de:	11 95       	neg	r17
 4e0:	01 95       	neg	r16
 4e2:	11 09       	sbc	r17, r1
 4e4:	ff ef       	ldi	r31, 0xFF	; 255
 4e6:	6f 16       	cp	r6, r31
 4e8:	7f 06       	cpc	r7, r31
 4ea:	29 f4       	brne	.+10     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4ec:	b6 01       	movw	r22, r12
 4ee:	8e e2       	ldi	r24, 0x2E	; 46
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 4f6:	a6 14       	cp	r10, r6
 4f8:	b7 04       	cpc	r11, r7
 4fa:	44 f0       	brlt	.+16     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4fc:	88 89       	ldd	r24, Y+16	; 0x10
 4fe:	99 89       	ldd	r25, Y+17	; 0x11
 500:	86 15       	cp	r24, r6
 502:	97 05       	cpc	r25, r7
 504:	1c f4       	brge	.+6      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 506:	f4 01       	movw	r30, r8
 508:	81 81       	ldd	r24, Z+1	; 0x01
 50a:	01 c0       	rjmp	.+2      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 50c:	80 e3       	ldi	r24, 0x30	; 48
 50e:	f1 e0       	ldi	r31, 0x01	; 1
 510:	6f 1a       	sub	r6, r31
 512:	71 08       	sbc	r7, r1
 514:	2f ef       	ldi	r18, 0xFF	; 255
 516:	82 1a       	sub	r8, r18
 518:	92 0a       	sbc	r9, r18
 51a:	60 16       	cp	r6, r16
 51c:	71 06       	cpc	r7, r17
 51e:	2c f0       	brlt	.+10     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 520:	b6 01       	movw	r22, r12
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 528:	dd cf       	rjmp	.-70     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 52a:	a6 14       	cp	r10, r6
 52c:	b7 04       	cpc	r11, r7
 52e:	39 f4       	brne	.+14     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 530:	9a 81       	ldd	r25, Y+2	; 0x02
 532:	96 33       	cpi	r25, 0x36	; 54
 534:	18 f4       	brcc	.+6      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 536:	95 33       	cpi	r25, 0x35	; 53
 538:	11 f4       	brne	.+4      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 53a:	54 fe       	sbrs	r5, 4
 53c:	81 e3       	ldi	r24, 0x31	; 49
 53e:	b6 01       	movw	r22, r12
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	51 c0       	rjmp	.+162    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 544:	8a 81       	ldd	r24, Y+2	; 0x02
 546:	81 33       	cpi	r24, 0x31	; 49
 548:	19 f0       	breq	.+6      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54a:	95 2d       	mov	r25, r5
 54c:	9f 7e       	andi	r25, 0xEF	; 239
 54e:	59 2e       	mov	r5, r25
 550:	b6 01       	movw	r22, r12
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 558:	11 11       	cpse	r17, r1
 55a:	05 c0       	rjmp	.+10     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 55c:	74 fc       	sbrc	r7, 4
 55e:	1c c0       	rjmp	.+56     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 560:	85 e6       	ldi	r24, 0x65	; 101
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	1b c0       	rjmp	.+54     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 566:	b6 01       	movw	r22, r12
 568:	8e e2       	ldi	r24, 0x2E	; 46
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 570:	02 e0       	ldi	r16, 0x02	; 2
 572:	01 0f       	add	r16, r17
 574:	82 e0       	ldi	r24, 0x02	; 2
 576:	11 e0       	ldi	r17, 0x01	; 1
 578:	18 0f       	add	r17, r24
 57a:	e1 e0       	ldi	r30, 0x01	; 1
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	ec 0f       	add	r30, r28
 580:	fd 1f       	adc	r31, r29
 582:	e8 0f       	add	r30, r24
 584:	f1 1d       	adc	r31, r1
 586:	80 81       	ld	r24, Z
 588:	b6 01       	movw	r22, r12
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 590:	81 2f       	mov	r24, r17
 592:	10 13       	cpse	r17, r16
 594:	f0 cf       	rjmp	.-32     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 596:	e2 cf       	rjmp	.-60     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 598:	85 e4       	ldi	r24, 0x45	; 69
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	b6 01       	movw	r22, r12
 59e:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 5a2:	b7 fc       	sbrc	r11, 7
 5a4:	05 c0       	rjmp	.+10     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5a6:	a1 14       	cp	r10, r1
 5a8:	b1 04       	cpc	r11, r1
 5aa:	39 f4       	brne	.+14     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ac:	54 fe       	sbrs	r5, 4
 5ae:	05 c0       	rjmp	.+10     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b0:	b1 94       	neg	r11
 5b2:	a1 94       	neg	r10
 5b4:	b1 08       	sbc	r11, r1
 5b6:	8d e2       	ldi	r24, 0x2D	; 45
 5b8:	01 c0       	rjmp	.+2      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5ba:	8b e2       	ldi	r24, 0x2B	; 43
 5bc:	b6 01       	movw	r22, r12
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 5c4:	80 e3       	ldi	r24, 0x30	; 48
 5c6:	ea e0       	ldi	r30, 0x0A	; 10
 5c8:	ae 16       	cp	r10, r30
 5ca:	b1 04       	cpc	r11, r1
 5cc:	2c f0       	brlt	.+10     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5ce:	8f 5f       	subi	r24, 0xFF	; 255
 5d0:	aa e0       	ldi	r26, 0x0A	; 10
 5d2:	aa 1a       	sub	r10, r26
 5d4:	b1 08       	sbc	r11, r1
 5d6:	f7 cf       	rjmp	.-18     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5d8:	b6 01       	movw	r22, r12
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 5e0:	b6 01       	movw	r22, r12
 5e2:	c5 01       	movw	r24, r10
 5e4:	c0 96       	adiw	r24, 0x30	; 48
 5e6:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 5ea:	72 c1       	rjmp	.+740    	; 0x8d0 <__EEPROM_REGION_LENGTH__+0xd0>
 5ec:	83 36       	cpi	r24, 0x63	; 99
 5ee:	31 f0       	breq	.+12     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f0:	83 37       	cpi	r24, 0x73	; 115
 5f2:	91 f0       	breq	.+36     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5f4:	83 35       	cpi	r24, 0x53	; 83
 5f6:	09 f0       	breq	.+2      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f8:	5d c0       	rjmp	.+186    	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 5fa:	24 c0       	rjmp	.+72     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 5fc:	c5 01       	movw	r24, r10
 5fe:	02 96       	adiw	r24, 0x02	; 2
 600:	9f 87       	std	Y+15, r25	; 0x0f
 602:	8e 87       	std	Y+14, r24	; 0x0e
 604:	f5 01       	movw	r30, r10
 606:	80 81       	ld	r24, Z
 608:	89 83       	std	Y+1, r24	; 0x01
 60a:	6a 88       	ldd	r6, Y+18	; 0x12
 60c:	7b 88       	ldd	r7, Y+19	; 0x13
 60e:	8c 88       	ldd	r8, Y+20	; 0x14
 610:	aa 24       	eor	r10, r10
 612:	a3 94       	inc	r10
 614:	b1 2c       	mov	r11, r1
 616:	14 c0       	rjmp	.+40     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 618:	c5 01       	movw	r24, r10
 61a:	03 96       	adiw	r24, 0x03	; 3
 61c:	9f 87       	std	Y+15, r25	; 0x0f
 61e:	8e 87       	std	Y+14, r24	; 0x0e
 620:	f5 01       	movw	r30, r10
 622:	60 80       	ld	r6, Z
 624:	71 80       	ldd	r7, Z+1	; 0x01
 626:	82 80       	ldd	r8, Z+2	; 0x02
 628:	06 ff       	sbrs	r16, 6
 62a:	03 c0       	rjmp	.+6      	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 62c:	41 2f       	mov	r20, r17
 62e:	50 e0       	ldi	r21, 0x00	; 0
 630:	02 c0       	rjmp	.+4      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 632:	4f ef       	ldi	r20, 0xFF	; 255
 634:	5f ef       	ldi	r21, 0xFF	; 255
 636:	88 2d       	mov	r24, r8
 638:	b3 01       	movw	r22, r6
 63a:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <strnlen>
 63e:	5c 01       	movw	r10, r24
 640:	0f 77       	andi	r16, 0x7F	; 127
 642:	15 c0       	rjmp	.+42     	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 644:	c5 01       	movw	r24, r10
 646:	03 96       	adiw	r24, 0x03	; 3
 648:	9f 87       	std	Y+15, r25	; 0x0f
 64a:	8e 87       	std	Y+14, r24	; 0x0e
 64c:	f5 01       	movw	r30, r10
 64e:	60 80       	ld	r6, Z
 650:	71 80       	ldd	r7, Z+1	; 0x01
 652:	82 80       	ldd	r8, Z+2	; 0x02
 654:	06 ff       	sbrs	r16, 6
 656:	03 c0       	rjmp	.+6      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 658:	41 2f       	mov	r20, r17
 65a:	50 e0       	ldi	r21, 0x00	; 0
 65c:	02 c0       	rjmp	.+4      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 65e:	4f ef       	ldi	r20, 0xFF	; 255
 660:	5f ef       	ldi	r21, 0xFF	; 255
 662:	88 2d       	mov	r24, r8
 664:	b3 01       	movw	r22, r6
 666:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <strnlen>
 66a:	5c 01       	movw	r10, r24
 66c:	00 68       	ori	r16, 0x80	; 128
 66e:	03 fd       	sbrc	r16, 3
 670:	1d c0       	rjmp	.+58     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 672:	8f 2d       	mov	r24, r15
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	a8 16       	cp	r10, r24
 678:	b9 06       	cpc	r11, r25
 67a:	c0 f4       	brcc	.+48     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 67c:	b6 01       	movw	r22, r12
 67e:	80 e2       	ldi	r24, 0x20	; 32
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 686:	fa 94       	dec	r15
 688:	f4 cf       	rjmp	.-24     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 68a:	f3 01       	movw	r30, r6
 68c:	84 91       	lpm	r24, Z
 68e:	87 fc       	sbrc	r8, 7
 690:	80 81       	ld	r24, Z
 692:	ff ef       	ldi	r31, 0xFF	; 255
 694:	6f 1a       	sub	r6, r31
 696:	7f 0a       	sbc	r7, r31
 698:	8f 0a       	sbc	r8, r31
 69a:	b6 01       	movw	r22, r12
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 6a2:	f1 10       	cpse	r15, r1
 6a4:	fa 94       	dec	r15
 6a6:	21 e0       	ldi	r18, 0x01	; 1
 6a8:	a2 1a       	sub	r10, r18
 6aa:	b1 08       	sbc	r11, r1
 6ac:	a1 14       	cp	r10, r1
 6ae:	b1 04       	cpc	r11, r1
 6b0:	61 f7       	brne	.-40     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 6b2:	0e c1       	rjmp	.+540    	; 0x8d0 <__EEPROM_REGION_LENGTH__+0xd0>
 6b4:	84 36       	cpi	r24, 0x64	; 100
 6b6:	11 f0       	breq	.+4      	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 6b8:	89 36       	cpi	r24, 0x69	; 105
 6ba:	79 f5       	brne	.+94     	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 6bc:	c5 01       	movw	r24, r10
 6be:	07 ff       	sbrs	r16, 7
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6c2:	04 96       	adiw	r24, 0x04	; 4
 6c4:	9f 87       	std	Y+15, r25	; 0x0f
 6c6:	8e 87       	std	Y+14, r24	; 0x0e
 6c8:	f5 01       	movw	r30, r10
 6ca:	60 81       	ld	r22, Z
 6cc:	71 81       	ldd	r23, Z+1	; 0x01
 6ce:	82 81       	ldd	r24, Z+2	; 0x02
 6d0:	93 81       	ldd	r25, Z+3	; 0x03
 6d2:	0a c0       	rjmp	.+20     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6d4:	02 96       	adiw	r24, 0x02	; 2
 6d6:	9f 87       	std	Y+15, r25	; 0x0f
 6d8:	8e 87       	std	Y+14, r24	; 0x0e
 6da:	f5 01       	movw	r30, r10
 6dc:	60 81       	ld	r22, Z
 6de:	71 81       	ldd	r23, Z+1	; 0x01
 6e0:	07 2e       	mov	r0, r23
 6e2:	00 0c       	add	r0, r0
 6e4:	88 0b       	sbc	r24, r24
 6e6:	99 0b       	sbc	r25, r25
 6e8:	0f 76       	andi	r16, 0x6F	; 111
 6ea:	e0 2e       	mov	r14, r16
 6ec:	97 ff       	sbrs	r25, 7
 6ee:	0a c0       	rjmp	.+20     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6f0:	90 95       	com	r25
 6f2:	80 95       	com	r24
 6f4:	70 95       	com	r23
 6f6:	61 95       	neg	r22
 6f8:	7f 4f       	sbci	r23, 0xFF	; 255
 6fa:	8f 4f       	sbci	r24, 0xFF	; 255
 6fc:	9f 4f       	sbci	r25, 0xFF	; 255
 6fe:	f0 2f       	mov	r31, r16
 700:	f0 68       	ori	r31, 0x80	; 128
 702:	ef 2e       	mov	r14, r31
 704:	2a e0       	ldi	r18, 0x0A	; 10
 706:	30 e0       	ldi	r19, 0x00	; 0
 708:	ae 01       	movw	r20, r28
 70a:	4f 5f       	subi	r20, 0xFF	; 255
 70c:	5f 4f       	sbci	r21, 0xFF	; 255
 70e:	0e 94 73 06 	call	0xce6	; 0xce6 <__ultoa_invert>
 712:	a8 2e       	mov	r10, r24
 714:	2c 85       	ldd	r18, Y+12	; 0x0c
 716:	a2 1a       	sub	r10, r18
 718:	4b c0       	rjmp	.+150    	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 71a:	85 37       	cpi	r24, 0x75	; 117
 71c:	29 f4       	brne	.+10     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 71e:	0f 7e       	andi	r16, 0xEF	; 239
 720:	e0 2e       	mov	r14, r16
 722:	2a e0       	ldi	r18, 0x0A	; 10
 724:	30 e0       	ldi	r19, 0x00	; 0
 726:	25 c0       	rjmp	.+74     	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 728:	90 2f       	mov	r25, r16
 72a:	99 7f       	andi	r25, 0xF9	; 249
 72c:	e9 2e       	mov	r14, r25
 72e:	8f 36       	cpi	r24, 0x6F	; 111
 730:	c1 f0       	breq	.+48     	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
 732:	18 f4       	brcc	.+6      	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 734:	88 35       	cpi	r24, 0x58	; 88
 736:	79 f0       	breq	.+30     	; 0x756 <__LOCK_REGION_LENGTH__+0x356>
 738:	d5 c0       	rjmp	.+426    	; 0x8e4 <__EEPROM_REGION_LENGTH__+0xe4>
 73a:	80 37       	cpi	r24, 0x70	; 112
 73c:	19 f0       	breq	.+6      	; 0x744 <__LOCK_REGION_LENGTH__+0x344>
 73e:	88 37       	cpi	r24, 0x78	; 120
 740:	21 f0       	breq	.+8      	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 742:	d0 c0       	rjmp	.+416    	; 0x8e4 <__EEPROM_REGION_LENGTH__+0xe4>
 744:	a9 2f       	mov	r26, r25
 746:	a0 61       	ori	r26, 0x10	; 16
 748:	ea 2e       	mov	r14, r26
 74a:	e4 fe       	sbrs	r14, 4
 74c:	0d c0       	rjmp	.+26     	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 74e:	ee 2d       	mov	r30, r14
 750:	e4 60       	ori	r30, 0x04	; 4
 752:	ee 2e       	mov	r14, r30
 754:	09 c0       	rjmp	.+18     	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 756:	04 ff       	sbrs	r16, 4
 758:	0a c0       	rjmp	.+20     	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 75a:	f9 2f       	mov	r31, r25
 75c:	f6 60       	ori	r31, 0x06	; 6
 75e:	ef 2e       	mov	r14, r31
 760:	06 c0       	rjmp	.+12     	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 762:	28 e0       	ldi	r18, 0x08	; 8
 764:	30 e0       	ldi	r19, 0x00	; 0
 766:	05 c0       	rjmp	.+10     	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 768:	20 e1       	ldi	r18, 0x10	; 16
 76a:	30 e0       	ldi	r19, 0x00	; 0
 76c:	02 c0       	rjmp	.+4      	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 76e:	20 e1       	ldi	r18, 0x10	; 16
 770:	32 e0       	ldi	r19, 0x02	; 2
 772:	c5 01       	movw	r24, r10
 774:	e7 fe       	sbrs	r14, 7
 776:	09 c0       	rjmp	.+18     	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
 778:	04 96       	adiw	r24, 0x04	; 4
 77a:	9f 87       	std	Y+15, r25	; 0x0f
 77c:	8e 87       	std	Y+14, r24	; 0x0e
 77e:	f5 01       	movw	r30, r10
 780:	60 81       	ld	r22, Z
 782:	71 81       	ldd	r23, Z+1	; 0x01
 784:	82 81       	ldd	r24, Z+2	; 0x02
 786:	93 81       	ldd	r25, Z+3	; 0x03
 788:	08 c0       	rjmp	.+16     	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
 78a:	02 96       	adiw	r24, 0x02	; 2
 78c:	9f 87       	std	Y+15, r25	; 0x0f
 78e:	8e 87       	std	Y+14, r24	; 0x0e
 790:	f5 01       	movw	r30, r10
 792:	60 81       	ld	r22, Z
 794:	71 81       	ldd	r23, Z+1	; 0x01
 796:	80 e0       	ldi	r24, 0x00	; 0
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	ae 01       	movw	r20, r28
 79c:	4f 5f       	subi	r20, 0xFF	; 255
 79e:	5f 4f       	sbci	r21, 0xFF	; 255
 7a0:	0e 94 73 06 	call	0xce6	; 0xce6 <__ultoa_invert>
 7a4:	a8 2e       	mov	r10, r24
 7a6:	fc 85       	ldd	r31, Y+12	; 0x0c
 7a8:	af 1a       	sub	r10, r31
 7aa:	2e 2d       	mov	r18, r14
 7ac:	2f 77       	andi	r18, 0x7F	; 127
 7ae:	e2 2e       	mov	r14, r18
 7b0:	e6 fe       	sbrs	r14, 6
 7b2:	0b c0       	rjmp	.+22     	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
 7b4:	0e 2d       	mov	r16, r14
 7b6:	0e 7f       	andi	r16, 0xFE	; 254
 7b8:	a1 16       	cp	r10, r17
 7ba:	50 f4       	brcc	.+20     	; 0x7d0 <__LOCK_REGION_LENGTH__+0x3d0>
 7bc:	e4 fe       	sbrs	r14, 4
 7be:	0a c0       	rjmp	.+20     	; 0x7d4 <__LOCK_REGION_LENGTH__+0x3d4>
 7c0:	e2 fc       	sbrc	r14, 2
 7c2:	08 c0       	rjmp	.+16     	; 0x7d4 <__LOCK_REGION_LENGTH__+0x3d4>
 7c4:	0e 2d       	mov	r16, r14
 7c6:	0e 7e       	andi	r16, 0xEE	; 238
 7c8:	05 c0       	rjmp	.+10     	; 0x7d4 <__LOCK_REGION_LENGTH__+0x3d4>
 7ca:	ba 2c       	mov	r11, r10
 7cc:	0e 2d       	mov	r16, r14
 7ce:	03 c0       	rjmp	.+6      	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
 7d0:	ba 2c       	mov	r11, r10
 7d2:	01 c0       	rjmp	.+2      	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
 7d4:	b1 2e       	mov	r11, r17
 7d6:	04 ff       	sbrs	r16, 4
 7d8:	0d c0       	rjmp	.+26     	; 0x7f4 <__LOCK_REGION_LENGTH__+0x3f4>
 7da:	fe 01       	movw	r30, r28
 7dc:	ea 0d       	add	r30, r10
 7de:	f1 1d       	adc	r31, r1
 7e0:	80 81       	ld	r24, Z
 7e2:	80 33       	cpi	r24, 0x30	; 48
 7e4:	11 f4       	brne	.+4      	; 0x7ea <__LOCK_REGION_LENGTH__+0x3ea>
 7e6:	09 7e       	andi	r16, 0xE9	; 233
 7e8:	09 c0       	rjmp	.+18     	; 0x7fc <__LOCK_REGION_LENGTH__+0x3fc>
 7ea:	02 ff       	sbrs	r16, 2
 7ec:	06 c0       	rjmp	.+12     	; 0x7fa <__LOCK_REGION_LENGTH__+0x3fa>
 7ee:	b3 94       	inc	r11
 7f0:	b3 94       	inc	r11
 7f2:	04 c0       	rjmp	.+8      	; 0x7fc <__LOCK_REGION_LENGTH__+0x3fc>
 7f4:	80 2f       	mov	r24, r16
 7f6:	86 78       	andi	r24, 0x86	; 134
 7f8:	09 f0       	breq	.+2      	; 0x7fc <__LOCK_REGION_LENGTH__+0x3fc>
 7fa:	b3 94       	inc	r11
 7fc:	03 fd       	sbrc	r16, 3
 7fe:	11 c0       	rjmp	.+34     	; 0x822 <__EEPROM_REGION_LENGTH__+0x22>
 800:	00 ff       	sbrs	r16, 0
 802:	06 c0       	rjmp	.+12     	; 0x810 <__EEPROM_REGION_LENGTH__+0x10>
 804:	bf 14       	cp	r11, r15
 806:	88 f4       	brcc	.+34     	; 0x82a <__EEPROM_REGION_LENGTH__+0x2a>
 808:	fa 0c       	add	r15, r10
 80a:	1f 2d       	mov	r17, r15
 80c:	1b 19       	sub	r17, r11
 80e:	0e c0       	rjmp	.+28     	; 0x82c <__EEPROM_REGION_LENGTH__+0x2c>
 810:	bf 14       	cp	r11, r15
 812:	60 f4       	brcc	.+24     	; 0x82c <__EEPROM_REGION_LENGTH__+0x2c>
 814:	b6 01       	movw	r22, r12
 816:	80 e2       	ldi	r24, 0x20	; 32
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 81e:	b3 94       	inc	r11
 820:	f7 cf       	rjmp	.-18     	; 0x810 <__EEPROM_REGION_LENGTH__+0x10>
 822:	bf 14       	cp	r11, r15
 824:	18 f4       	brcc	.+6      	; 0x82c <__EEPROM_REGION_LENGTH__+0x2c>
 826:	fb 18       	sub	r15, r11
 828:	02 c0       	rjmp	.+4      	; 0x82e <__EEPROM_REGION_LENGTH__+0x2e>
 82a:	1a 2d       	mov	r17, r10
 82c:	f1 2c       	mov	r15, r1
 82e:	04 ff       	sbrs	r16, 4
 830:	10 c0       	rjmp	.+32     	; 0x852 <__EEPROM_REGION_LENGTH__+0x52>
 832:	b6 01       	movw	r22, r12
 834:	80 e3       	ldi	r24, 0x30	; 48
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 83c:	02 ff       	sbrs	r16, 2
 83e:	17 c0       	rjmp	.+46     	; 0x86e <__EEPROM_REGION_LENGTH__+0x6e>
 840:	01 fd       	sbrc	r16, 1
 842:	03 c0       	rjmp	.+6      	; 0x84a <__EEPROM_REGION_LENGTH__+0x4a>
 844:	88 e7       	ldi	r24, 0x78	; 120
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	02 c0       	rjmp	.+4      	; 0x84e <__EEPROM_REGION_LENGTH__+0x4e>
 84a:	88 e5       	ldi	r24, 0x58	; 88
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	b6 01       	movw	r22, r12
 850:	0c c0       	rjmp	.+24     	; 0x86a <__EEPROM_REGION_LENGTH__+0x6a>
 852:	80 2f       	mov	r24, r16
 854:	86 78       	andi	r24, 0x86	; 134
 856:	59 f0       	breq	.+22     	; 0x86e <__EEPROM_REGION_LENGTH__+0x6e>
 858:	01 ff       	sbrs	r16, 1
 85a:	02 c0       	rjmp	.+4      	; 0x860 <__EEPROM_REGION_LENGTH__+0x60>
 85c:	8b e2       	ldi	r24, 0x2B	; 43
 85e:	01 c0       	rjmp	.+2      	; 0x862 <__EEPROM_REGION_LENGTH__+0x62>
 860:	80 e2       	ldi	r24, 0x20	; 32
 862:	07 fd       	sbrc	r16, 7
 864:	8d e2       	ldi	r24, 0x2D	; 45
 866:	b6 01       	movw	r22, r12
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 86e:	a1 16       	cp	r10, r17
 870:	38 f4       	brcc	.+14     	; 0x880 <__EEPROM_REGION_LENGTH__+0x80>
 872:	b6 01       	movw	r22, r12
 874:	80 e3       	ldi	r24, 0x30	; 48
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 87c:	11 50       	subi	r17, 0x01	; 1
 87e:	f7 cf       	rjmp	.-18     	; 0x86e <__EEPROM_REGION_LENGTH__+0x6e>
 880:	aa 94       	dec	r10
 882:	e1 e0       	ldi	r30, 0x01	; 1
 884:	f0 e0       	ldi	r31, 0x00	; 0
 886:	ec 0f       	add	r30, r28
 888:	fd 1f       	adc	r31, r29
 88a:	ea 0d       	add	r30, r10
 88c:	f1 1d       	adc	r31, r1
 88e:	80 81       	ld	r24, Z
 890:	b6 01       	movw	r22, r12
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 898:	a1 10       	cpse	r10, r1
 89a:	f2 cf       	rjmp	.-28     	; 0x880 <__EEPROM_REGION_LENGTH__+0x80>
 89c:	19 c0       	rjmp	.+50     	; 0x8d0 <__EEPROM_REGION_LENGTH__+0xd0>
 89e:	f4 e0       	ldi	r31, 0x04	; 4
 8a0:	ff 15       	cp	r31, r15
 8a2:	80 f5       	brcc	.+96     	; 0x904 <__EEPROM_REGION_LENGTH__+0x104>
 8a4:	84 e0       	ldi	r24, 0x04	; 4
 8a6:	f8 1a       	sub	r15, r24
 8a8:	73 fe       	sbrs	r7, 3
 8aa:	23 c0       	rjmp	.+70     	; 0x8f2 <__EEPROM_REGION_LENGTH__+0xf2>
 8ac:	01 11       	cpse	r16, r1
 8ae:	2b c0       	rjmp	.+86     	; 0x906 <__EEPROM_REGION_LENGTH__+0x106>
 8b0:	53 fe       	sbrs	r5, 3
 8b2:	2f c0       	rjmp	.+94     	; 0x912 <__EEPROM_REGION_LENGTH__+0x112>
 8b4:	58 ef       	ldi	r21, 0xF8	; 248
 8b6:	85 2e       	mov	r8, r21
 8b8:	51 e0       	ldi	r21, 0x01	; 1
 8ba:	95 2e       	mov	r9, r21
 8bc:	50 e0       	ldi	r21, 0x00	; 0
 8be:	a5 2e       	mov	r10, r21
 8c0:	07 2d       	mov	r16, r7
 8c2:	00 71       	andi	r16, 0x10	; 16
 8c4:	f4 01       	movw	r30, r8
 8c6:	84 91       	lpm	r24, Z
 8c8:	a7 fc       	sbrc	r10, 7
 8ca:	80 81       	ld	r24, Z
 8cc:	81 11       	cpse	r24, r1
 8ce:	28 c0       	rjmp	.+80     	; 0x920 <__EEPROM_REGION_LENGTH__+0x120>
 8d0:	ff 20       	and	r15, r15
 8d2:	09 f4       	brne	.+2      	; 0x8d6 <__EEPROM_REGION_LENGTH__+0xd6>
 8d4:	d2 cc       	rjmp	.-1628   	; 0x27a <vfprintf+0x72>
 8d6:	b6 01       	movw	r22, r12
 8d8:	80 e2       	ldi	r24, 0x20	; 32
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 8e0:	fa 94       	dec	r15
 8e2:	f6 cf       	rjmp	.-20     	; 0x8d0 <__EEPROM_REGION_LENGTH__+0xd0>
 8e4:	f6 01       	movw	r30, r12
 8e6:	87 81       	ldd	r24, Z+7	; 0x07
 8e8:	90 85       	ldd	r25, Z+8	; 0x08
 8ea:	2c c0       	rjmp	.+88     	; 0x944 <__EEPROM_REGION_LENGTH__+0x144>
 8ec:	8f ef       	ldi	r24, 0xFF	; 255
 8ee:	9f ef       	ldi	r25, 0xFF	; 255
 8f0:	29 c0       	rjmp	.+82     	; 0x944 <__EEPROM_REGION_LENGTH__+0x144>
 8f2:	b6 01       	movw	r22, r12
 8f4:	80 e2       	ldi	r24, 0x20	; 32
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 8fc:	fa 94       	dec	r15
 8fe:	f1 10       	cpse	r15, r1
 900:	f8 cf       	rjmp	.-16     	; 0x8f2 <__EEPROM_REGION_LENGTH__+0xf2>
 902:	d4 cf       	rjmp	.-88     	; 0x8ac <__EEPROM_REGION_LENGTH__+0xac>
 904:	f1 2c       	mov	r15, r1
 906:	b6 01       	movw	r22, r12
 908:	80 2f       	mov	r24, r16
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 910:	cf cf       	rjmp	.-98     	; 0x8b0 <__EEPROM_REGION_LENGTH__+0xb0>
 912:	44 ef       	ldi	r20, 0xF4	; 244
 914:	84 2e       	mov	r8, r20
 916:	41 e0       	ldi	r20, 0x01	; 1
 918:	94 2e       	mov	r9, r20
 91a:	40 e0       	ldi	r20, 0x00	; 0
 91c:	a4 2e       	mov	r10, r20
 91e:	d0 cf       	rjmp	.-96     	; 0x8c0 <__EEPROM_REGION_LENGTH__+0xc0>
 920:	01 11       	cpse	r16, r1
 922:	80 52       	subi	r24, 0x20	; 32
 924:	b6 01       	movw	r22, r12
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
 92c:	ff ef       	ldi	r31, 0xFF	; 255
 92e:	8f 1a       	sub	r8, r31
 930:	9f 0a       	sbc	r9, r31
 932:	af 0a       	sbc	r10, r31
 934:	c7 cf       	rjmp	.-114    	; 0x8c4 <__EEPROM_REGION_LENGTH__+0xc4>
 936:	23 e0       	ldi	r18, 0x03	; 3
 938:	2f 15       	cp	r18, r15
 93a:	10 f4       	brcc	.+4      	; 0x940 <__EEPROM_REGION_LENGTH__+0x140>
 93c:	83 e0       	ldi	r24, 0x03	; 3
 93e:	b3 cf       	rjmp	.-154    	; 0x8a6 <__EEPROM_REGION_LENGTH__+0xa6>
 940:	f1 2c       	mov	r15, r1
 942:	b6 cf       	rjmp	.-148    	; 0x8b0 <__EEPROM_REGION_LENGTH__+0xb0>
 944:	64 96       	adiw	r28, 0x14	; 20
 946:	e2 e1       	ldi	r30, 0x12	; 18
 948:	0c 94 36 0b 	jmp	0x166c	; 0x166c <__epilogue_restores__>

Disassembly of section .text.libgcc.prologue:

000015fe <__prologue_saves__>:
    15fe:	2f 92       	push	r2
    1600:	3f 92       	push	r3
    1602:	4f 92       	push	r4
    1604:	5f 92       	push	r5
    1606:	6f 92       	push	r6
    1608:	7f 92       	push	r7
    160a:	8f 92       	push	r8
    160c:	9f 92       	push	r9
    160e:	af 92       	push	r10
    1610:	bf 92       	push	r11
    1612:	cf 92       	push	r12
    1614:	df 92       	push	r13
    1616:	ef 92       	push	r14
    1618:	ff 92       	push	r15
    161a:	0f 93       	push	r16
    161c:	1f 93       	push	r17
    161e:	cf 93       	push	r28
    1620:	df 93       	push	r29
    1622:	cd b7       	in	r28, 0x3d	; 61
    1624:	de b7       	in	r29, 0x3e	; 62
    1626:	ca 1b       	sub	r28, r26
    1628:	db 0b       	sbc	r29, r27
    162a:	0f b6       	in	r0, 0x3f	; 63
    162c:	f8 94       	cli
    162e:	de bf       	out	0x3e, r29	; 62
    1630:	0f be       	out	0x3f, r0	; 63
    1632:	cd bf       	out	0x3d, r28	; 61
    1634:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

0000166c <__epilogue_restores__>:
    166c:	2a 88       	ldd	r2, Y+18	; 0x12
    166e:	39 88       	ldd	r3, Y+17	; 0x11
    1670:	48 88       	ldd	r4, Y+16	; 0x10
    1672:	5f 84       	ldd	r5, Y+15	; 0x0f
    1674:	6e 84       	ldd	r6, Y+14	; 0x0e
    1676:	7d 84       	ldd	r7, Y+13	; 0x0d
    1678:	8c 84       	ldd	r8, Y+12	; 0x0c
    167a:	9b 84       	ldd	r9, Y+11	; 0x0b
    167c:	aa 84       	ldd	r10, Y+10	; 0x0a
    167e:	b9 84       	ldd	r11, Y+9	; 0x09
    1680:	c8 84       	ldd	r12, Y+8	; 0x08
    1682:	df 80       	ldd	r13, Y+7	; 0x07
    1684:	ee 80       	ldd	r14, Y+6	; 0x06
    1686:	fd 80       	ldd	r15, Y+5	; 0x05
    1688:	0c 81       	ldd	r16, Y+4	; 0x04
    168a:	1b 81       	ldd	r17, Y+3	; 0x03
    168c:	aa 81       	ldd	r26, Y+2	; 0x02
    168e:	b9 81       	ldd	r27, Y+1	; 0x01
    1690:	ce 0f       	add	r28, r30
    1692:	d1 1d       	adc	r29, r1
    1694:	0f b6       	in	r0, 0x3f	; 63
    1696:	f8 94       	cli
    1698:	de bf       	out	0x3e, r29	; 62
    169a:	0f be       	out	0x3f, r0	; 63
    169c:	cd bf       	out	0x3d, r28	; 61
    169e:	ed 01       	movw	r28, r26
    16a0:	08 95       	ret

Disassembly of section .text.avrlibc:

0000094c <__ftoa_engine>:
 94c:	28 30       	cpi	r18, 0x08	; 8
 94e:	08 f0       	brcs	.+2      	; 0x952 <__ftoa_engine+0x6>
 950:	27 e0       	ldi	r18, 0x07	; 7
 952:	33 27       	eor	r19, r19
 954:	da 01       	movw	r26, r20
 956:	99 0f       	add	r25, r25
 958:	31 1d       	adc	r19, r1
 95a:	87 fd       	sbrc	r24, 7
 95c:	91 60       	ori	r25, 0x01	; 1
 95e:	00 96       	adiw	r24, 0x00	; 0
 960:	61 05       	cpc	r22, r1
 962:	71 05       	cpc	r23, r1
 964:	39 f4       	brne	.+14     	; 0x974 <__ftoa_engine+0x28>
 966:	32 60       	ori	r19, 0x02	; 2
 968:	2e 5f       	subi	r18, 0xFE	; 254
 96a:	3d 93       	st	X+, r19
 96c:	30 e3       	ldi	r19, 0x30	; 48
 96e:	2a 95       	dec	r18
 970:	e1 f7       	brne	.-8      	; 0x96a <__ftoa_engine+0x1e>
 972:	08 95       	ret
 974:	9f 3f       	cpi	r25, 0xFF	; 255
 976:	30 f0       	brcs	.+12     	; 0x984 <__ftoa_engine+0x38>
 978:	80 38       	cpi	r24, 0x80	; 128
 97a:	71 05       	cpc	r23, r1
 97c:	61 05       	cpc	r22, r1
 97e:	09 f0       	breq	.+2      	; 0x982 <__ftoa_engine+0x36>
 980:	3c 5f       	subi	r19, 0xFC	; 252
 982:	3c 5f       	subi	r19, 0xFC	; 252
 984:	3d 93       	st	X+, r19
 986:	91 30       	cpi	r25, 0x01	; 1
 988:	08 f0       	brcs	.+2      	; 0x98c <__ftoa_engine+0x40>
 98a:	80 68       	ori	r24, 0x80	; 128
 98c:	91 1d       	adc	r25, r1
 98e:	df 93       	push	r29
 990:	cf 93       	push	r28
 992:	1f 93       	push	r17
 994:	0f 93       	push	r16
 996:	ff 92       	push	r15
 998:	ef 92       	push	r14
 99a:	19 2f       	mov	r17, r25
 99c:	98 7f       	andi	r25, 0xF8	; 248
 99e:	96 95       	lsr	r25
 9a0:	e9 2f       	mov	r30, r25
 9a2:	96 95       	lsr	r25
 9a4:	96 95       	lsr	r25
 9a6:	e9 0f       	add	r30, r25
 9a8:	ff 27       	eor	r31, r31
 9aa:	e4 52       	subi	r30, 0x24	; 36
 9ac:	ff 4f       	sbci	r31, 0xFF	; 255
 9ae:	99 27       	eor	r25, r25
 9b0:	33 27       	eor	r19, r19
 9b2:	ee 24       	eor	r14, r14
 9b4:	ff 24       	eor	r15, r15
 9b6:	a7 01       	movw	r20, r14
 9b8:	e7 01       	movw	r28, r14
 9ba:	05 90       	lpm	r0, Z+
 9bc:	08 94       	sec
 9be:	07 94       	ror	r0
 9c0:	28 f4       	brcc	.+10     	; 0x9cc <__ftoa_engine+0x80>
 9c2:	36 0f       	add	r19, r22
 9c4:	e7 1e       	adc	r14, r23
 9c6:	f8 1e       	adc	r15, r24
 9c8:	49 1f       	adc	r20, r25
 9ca:	51 1d       	adc	r21, r1
 9cc:	66 0f       	add	r22, r22
 9ce:	77 1f       	adc	r23, r23
 9d0:	88 1f       	adc	r24, r24
 9d2:	99 1f       	adc	r25, r25
 9d4:	06 94       	lsr	r0
 9d6:	a1 f7       	brne	.-24     	; 0x9c0 <__ftoa_engine+0x74>
 9d8:	05 90       	lpm	r0, Z+
 9da:	07 94       	ror	r0
 9dc:	28 f4       	brcc	.+10     	; 0x9e8 <__ftoa_engine+0x9c>
 9de:	e7 0e       	add	r14, r23
 9e0:	f8 1e       	adc	r15, r24
 9e2:	49 1f       	adc	r20, r25
 9e4:	56 1f       	adc	r21, r22
 9e6:	c1 1d       	adc	r28, r1
 9e8:	77 0f       	add	r23, r23
 9ea:	88 1f       	adc	r24, r24
 9ec:	99 1f       	adc	r25, r25
 9ee:	66 1f       	adc	r22, r22
 9f0:	06 94       	lsr	r0
 9f2:	a1 f7       	brne	.-24     	; 0x9dc <__ftoa_engine+0x90>
 9f4:	05 90       	lpm	r0, Z+
 9f6:	07 94       	ror	r0
 9f8:	28 f4       	brcc	.+10     	; 0xa04 <__ftoa_engine+0xb8>
 9fa:	f8 0e       	add	r15, r24
 9fc:	49 1f       	adc	r20, r25
 9fe:	56 1f       	adc	r21, r22
 a00:	c7 1f       	adc	r28, r23
 a02:	d1 1d       	adc	r29, r1
 a04:	88 0f       	add	r24, r24
 a06:	99 1f       	adc	r25, r25
 a08:	66 1f       	adc	r22, r22
 a0a:	77 1f       	adc	r23, r23
 a0c:	06 94       	lsr	r0
 a0e:	a1 f7       	brne	.-24     	; 0x9f8 <__ftoa_engine+0xac>
 a10:	05 90       	lpm	r0, Z+
 a12:	07 94       	ror	r0
 a14:	20 f4       	brcc	.+8      	; 0xa1e <__ftoa_engine+0xd2>
 a16:	49 0f       	add	r20, r25
 a18:	56 1f       	adc	r21, r22
 a1a:	c7 1f       	adc	r28, r23
 a1c:	d8 1f       	adc	r29, r24
 a1e:	99 0f       	add	r25, r25
 a20:	66 1f       	adc	r22, r22
 a22:	77 1f       	adc	r23, r23
 a24:	88 1f       	adc	r24, r24
 a26:	06 94       	lsr	r0
 a28:	a9 f7       	brne	.-22     	; 0xa14 <__ftoa_engine+0xc8>
 a2a:	84 91       	lpm	r24, Z
 a2c:	10 95       	com	r17
 a2e:	17 70       	andi	r17, 0x07	; 7
 a30:	41 f0       	breq	.+16     	; 0xa42 <__ftoa_engine+0xf6>
 a32:	d6 95       	lsr	r29
 a34:	c7 95       	ror	r28
 a36:	57 95       	ror	r21
 a38:	47 95       	ror	r20
 a3a:	f7 94       	ror	r15
 a3c:	e7 94       	ror	r14
 a3e:	1a 95       	dec	r17
 a40:	c1 f7       	brne	.-16     	; 0xa32 <__ftoa_engine+0xe6>
 a42:	e2 e8       	ldi	r30, 0x82	; 130
 a44:	f0 e0       	ldi	r31, 0x00	; 0
 a46:	68 94       	set
 a48:	15 90       	lpm	r1, Z+
 a4a:	15 91       	lpm	r17, Z+
 a4c:	35 91       	lpm	r19, Z+
 a4e:	65 91       	lpm	r22, Z+
 a50:	95 91       	lpm	r25, Z+
 a52:	05 90       	lpm	r0, Z+
 a54:	7f e2       	ldi	r23, 0x2F	; 47
 a56:	73 95       	inc	r23
 a58:	e1 18       	sub	r14, r1
 a5a:	f1 0a       	sbc	r15, r17
 a5c:	43 0b       	sbc	r20, r19
 a5e:	56 0b       	sbc	r21, r22
 a60:	c9 0b       	sbc	r28, r25
 a62:	d0 09       	sbc	r29, r0
 a64:	c0 f7       	brcc	.-16     	; 0xa56 <__ftoa_engine+0x10a>
 a66:	e1 0c       	add	r14, r1
 a68:	f1 1e       	adc	r15, r17
 a6a:	43 1f       	adc	r20, r19
 a6c:	56 1f       	adc	r21, r22
 a6e:	c9 1f       	adc	r28, r25
 a70:	d0 1d       	adc	r29, r0
 a72:	7e f4       	brtc	.+30     	; 0xa92 <__ftoa_engine+0x146>
 a74:	70 33       	cpi	r23, 0x30	; 48
 a76:	11 f4       	brne	.+4      	; 0xa7c <__ftoa_engine+0x130>
 a78:	8a 95       	dec	r24
 a7a:	e6 cf       	rjmp	.-52     	; 0xa48 <__ftoa_engine+0xfc>
 a7c:	e8 94       	clt
 a7e:	01 50       	subi	r16, 0x01	; 1
 a80:	30 f0       	brcs	.+12     	; 0xa8e <__ftoa_engine+0x142>
 a82:	08 0f       	add	r16, r24
 a84:	0a f4       	brpl	.+2      	; 0xa88 <__ftoa_engine+0x13c>
 a86:	00 27       	eor	r16, r16
 a88:	02 17       	cp	r16, r18
 a8a:	08 f4       	brcc	.+2      	; 0xa8e <__ftoa_engine+0x142>
 a8c:	20 2f       	mov	r18, r16
 a8e:	23 95       	inc	r18
 a90:	02 2f       	mov	r16, r18
 a92:	7a 33       	cpi	r23, 0x3A	; 58
 a94:	28 f0       	brcs	.+10     	; 0xaa0 <__ftoa_engine+0x154>
 a96:	79 e3       	ldi	r23, 0x39	; 57
 a98:	7d 93       	st	X+, r23
 a9a:	2a 95       	dec	r18
 a9c:	e9 f7       	brne	.-6      	; 0xa98 <__ftoa_engine+0x14c>
 a9e:	10 c0       	rjmp	.+32     	; 0xac0 <__ftoa_engine+0x174>
 aa0:	7d 93       	st	X+, r23
 aa2:	2a 95       	dec	r18
 aa4:	89 f6       	brne	.-94     	; 0xa48 <__ftoa_engine+0xfc>
 aa6:	06 94       	lsr	r0
 aa8:	97 95       	ror	r25
 aaa:	67 95       	ror	r22
 aac:	37 95       	ror	r19
 aae:	17 95       	ror	r17
 ab0:	17 94       	ror	r1
 ab2:	e1 18       	sub	r14, r1
 ab4:	f1 0a       	sbc	r15, r17
 ab6:	43 0b       	sbc	r20, r19
 ab8:	56 0b       	sbc	r21, r22
 aba:	c9 0b       	sbc	r28, r25
 abc:	d0 09       	sbc	r29, r0
 abe:	98 f0       	brcs	.+38     	; 0xae6 <__ftoa_engine+0x19a>
 ac0:	23 95       	inc	r18
 ac2:	7e 91       	ld	r23, -X
 ac4:	73 95       	inc	r23
 ac6:	7a 33       	cpi	r23, 0x3A	; 58
 ac8:	08 f0       	brcs	.+2      	; 0xacc <__ftoa_engine+0x180>
 aca:	70 e3       	ldi	r23, 0x30	; 48
 acc:	7c 93       	st	X, r23
 ace:	20 13       	cpse	r18, r16
 ad0:	b8 f7       	brcc	.-18     	; 0xac0 <__ftoa_engine+0x174>
 ad2:	7e 91       	ld	r23, -X
 ad4:	70 61       	ori	r23, 0x10	; 16
 ad6:	7d 93       	st	X+, r23
 ad8:	30 f0       	brcs	.+12     	; 0xae6 <__ftoa_engine+0x19a>
 ada:	83 95       	inc	r24
 adc:	71 e3       	ldi	r23, 0x31	; 49
 ade:	7d 93       	st	X+, r23
 ae0:	70 e3       	ldi	r23, 0x30	; 48
 ae2:	2a 95       	dec	r18
 ae4:	e1 f7       	brne	.-8      	; 0xade <__ftoa_engine+0x192>
 ae6:	11 24       	eor	r1, r1
 ae8:	ef 90       	pop	r14
 aea:	ff 90       	pop	r15
 aec:	0f 91       	pop	r16
 aee:	1f 91       	pop	r17
 af0:	cf 91       	pop	r28
 af2:	df 91       	pop	r29
 af4:	99 27       	eor	r25, r25
 af6:	87 fd       	sbrc	r24, 7
 af8:	90 95       	com	r25
 afa:	08 95       	ret

Disassembly of section .text.avrlibc:

0000176e <strlen>:
    176e:	cf 92       	push	r12
    1770:	df 92       	push	r13
    1772:	ef 92       	push	r14
    1774:	6b 01       	movw	r12, r22
    1776:	e8 2e       	mov	r14, r24
    1778:	a8 2f       	mov	r26, r24
    177a:	cb 01       	movw	r24, r22
    177c:	fc 01       	movw	r30, r24
    177e:	24 91       	lpm	r18, Z
    1780:	a7 fd       	sbrc	r26, 7
    1782:	20 81       	ld	r18, Z
    1784:	22 23       	and	r18, r18
    1786:	19 f0       	breq	.+6      	; 0x178e <strlen+0x20>
    1788:	01 96       	adiw	r24, 0x01	; 1
    178a:	a1 1d       	adc	r26, r1
    178c:	f7 cf       	rjmp	.-18     	; 0x177c <strlen+0xe>
    178e:	8c 19       	sub	r24, r12
    1790:	9d 09       	sbc	r25, r13
    1792:	ef 90       	pop	r14
    1794:	df 90       	pop	r13
    1796:	cf 90       	pop	r12
    1798:	08 95       	ret

Disassembly of section .text.avrlibc:

000016a2 <strnlen>:
    16a2:	cf 92       	push	r12
    16a4:	df 92       	push	r13
    16a6:	ef 92       	push	r14
    16a8:	6b 01       	movw	r12, r22
    16aa:	e8 2e       	mov	r14, r24
    16ac:	a8 2f       	mov	r26, r24
    16ae:	cb 01       	movw	r24, r22
    16b0:	41 15       	cp	r20, r1
    16b2:	51 05       	cpc	r21, r1
    16b4:	31 f4       	brne	.+12     	; 0x16c2 <strnlen+0x20>
    16b6:	8c 19       	sub	r24, r12
    16b8:	9d 09       	sbc	r25, r13
    16ba:	ef 90       	pop	r14
    16bc:	df 90       	pop	r13
    16be:	cf 90       	pop	r12
    16c0:	08 95       	ret
    16c2:	fc 01       	movw	r30, r24
    16c4:	24 91       	lpm	r18, Z
    16c6:	a7 fd       	sbrc	r26, 7
    16c8:	20 81       	ld	r18, Z
    16ca:	22 23       	and	r18, r18
    16cc:	a1 f3       	breq	.-24     	; 0x16b6 <strnlen+0x14>
    16ce:	01 96       	adiw	r24, 0x01	; 1
    16d0:	a1 1d       	adc	r26, r1
    16d2:	41 50       	subi	r20, 0x01	; 1
    16d4:	51 09       	sbc	r21, r1
    16d6:	ec cf       	rjmp	.-40     	; 0x16b0 <strnlen+0xe>

Disassembly of section .text.avrlibc:

00000fe2 <fputc>:
     fe2:	0f 93       	push	r16
     fe4:	1f 93       	push	r17
     fe6:	cf 93       	push	r28
     fe8:	df 93       	push	r29
     fea:	fb 01       	movw	r30, r22
     fec:	24 81       	ldd	r18, Z+4	; 0x04
     fee:	21 fd       	sbrc	r18, 1
     ff0:	03 c0       	rjmp	.+6      	; 0xff8 <fputc+0x16>
     ff2:	8f ef       	ldi	r24, 0xFF	; 255
     ff4:	9f ef       	ldi	r25, 0xFF	; 255
     ff6:	2c c0       	rjmp	.+88     	; 0x1050 <__DATA_REGION_LENGTH__+0x50>
     ff8:	22 ff       	sbrs	r18, 2
     ffa:	16 c0       	rjmp	.+44     	; 0x1028 <__DATA_REGION_LENGTH__+0x28>
     ffc:	47 81       	ldd	r20, Z+7	; 0x07
     ffe:	50 85       	ldd	r21, Z+8	; 0x08
    1000:	25 81       	ldd	r18, Z+5	; 0x05
    1002:	36 81       	ldd	r19, Z+6	; 0x06
    1004:	42 17       	cp	r20, r18
    1006:	53 07       	cpc	r21, r19
    1008:	44 f4       	brge	.+16     	; 0x101a <__DATA_REGION_LENGTH__+0x1a>
    100a:	a0 81       	ld	r26, Z
    100c:	b1 81       	ldd	r27, Z+1	; 0x01
    100e:	9d 01       	movw	r18, r26
    1010:	2f 5f       	subi	r18, 0xFF	; 255
    1012:	3f 4f       	sbci	r19, 0xFF	; 255
    1014:	31 83       	std	Z+1, r19	; 0x01
    1016:	20 83       	st	Z, r18
    1018:	8c 93       	st	X, r24
    101a:	27 81       	ldd	r18, Z+7	; 0x07
    101c:	30 85       	ldd	r19, Z+8	; 0x08
    101e:	2f 5f       	subi	r18, 0xFF	; 255
    1020:	3f 4f       	sbci	r19, 0xFF	; 255
    1022:	30 87       	std	Z+8, r19	; 0x08
    1024:	27 83       	std	Z+7, r18	; 0x07
    1026:	14 c0       	rjmp	.+40     	; 0x1050 <__DATA_REGION_LENGTH__+0x50>
    1028:	8b 01       	movw	r16, r22
    102a:	ec 01       	movw	r28, r24
    102c:	fb 01       	movw	r30, r22
    102e:	01 84       	ldd	r0, Z+9	; 0x09
    1030:	f2 85       	ldd	r31, Z+10	; 0x0a
    1032:	e0 2d       	mov	r30, r0
    1034:	09 95       	icall
    1036:	89 2b       	or	r24, r25
    1038:	e1 f6       	brne	.-72     	; 0xff2 <fputc+0x10>
    103a:	d8 01       	movw	r26, r16
    103c:	17 96       	adiw	r26, 0x07	; 7
    103e:	8d 91       	ld	r24, X+
    1040:	9c 91       	ld	r25, X
    1042:	18 97       	sbiw	r26, 0x08	; 8
    1044:	01 96       	adiw	r24, 0x01	; 1
    1046:	18 96       	adiw	r26, 0x08	; 8
    1048:	9c 93       	st	X, r25
    104a:	8e 93       	st	-X, r24
    104c:	17 97       	sbiw	r26, 0x07	; 7
    104e:	ce 01       	movw	r24, r28
    1050:	df 91       	pop	r29
    1052:	cf 91       	pop	r28
    1054:	1f 91       	pop	r17
    1056:	0f 91       	pop	r16
    1058:	08 95       	ret

Disassembly of section .text.avrlibc:

00001500 <sprintf>:
    1500:	af e0       	ldi	r26, 0x0F	; 15
    1502:	b0 e0       	ldi	r27, 0x00	; 0
    1504:	e6 e8       	ldi	r30, 0x86	; 134
    1506:	fa e0       	ldi	r31, 0x0A	; 10
    1508:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <__prologue_saves__+0x1c>
    150c:	0e 89       	ldd	r16, Y+22	; 0x16
    150e:	1f 89       	ldd	r17, Y+23	; 0x17
    1510:	86 e0       	ldi	r24, 0x06	; 6
    1512:	8d 83       	std	Y+5, r24	; 0x05
    1514:	1a 83       	std	Y+2, r17	; 0x02
    1516:	09 83       	std	Y+1, r16	; 0x01
    1518:	8f ef       	ldi	r24, 0xFF	; 255
    151a:	9f e7       	ldi	r25, 0x7F	; 127
    151c:	9f 83       	std	Y+7, r25	; 0x07
    151e:	8e 83       	std	Y+6, r24	; 0x06
    1520:	9e 01       	movw	r18, r28
    1522:	25 5e       	subi	r18, 0xE5	; 229
    1524:	3f 4f       	sbci	r19, 0xFF	; 255
    1526:	48 8d       	ldd	r20, Y+24	; 0x18
    1528:	59 8d       	ldd	r21, Y+25	; 0x19
    152a:	6a 8d       	ldd	r22, Y+26	; 0x1a
    152c:	ce 01       	movw	r24, r28
    152e:	01 96       	adiw	r24, 0x01	; 1
    1530:	0e 94 04 01 	call	0x208	; 0x208 <vfprintf>
    1534:	e8 85       	ldd	r30, Y+8	; 0x08
    1536:	f9 85       	ldd	r31, Y+9	; 0x09
    1538:	e0 0f       	add	r30, r16
    153a:	f1 1f       	adc	r31, r17
    153c:	10 82       	st	Z, r1
    153e:	2f 96       	adiw	r28, 0x0f	; 15
    1540:	e4 e0       	ldi	r30, 0x04	; 4
    1542:	0c 94 44 0b 	jmp	0x1688	; 0x1688 <__epilogue_restores__+0x1c>

Disassembly of section .text.avrlibc:

00000ce6 <__ultoa_invert>:
 ce6:	fa 01       	movw	r30, r20
 ce8:	aa 27       	eor	r26, r26
 cea:	28 30       	cpi	r18, 0x08	; 8
 cec:	51 f1       	breq	.+84     	; 0xd42 <__ultoa_invert+0x5c>
 cee:	20 31       	cpi	r18, 0x10	; 16
 cf0:	81 f1       	breq	.+96     	; 0xd52 <__ultoa_invert+0x6c>
 cf2:	e8 94       	clt
 cf4:	6f 93       	push	r22
 cf6:	6e 7f       	andi	r22, 0xFE	; 254
 cf8:	6e 5f       	subi	r22, 0xFE	; 254
 cfa:	7f 4f       	sbci	r23, 0xFF	; 255
 cfc:	8f 4f       	sbci	r24, 0xFF	; 255
 cfe:	9f 4f       	sbci	r25, 0xFF	; 255
 d00:	af 4f       	sbci	r26, 0xFF	; 255
 d02:	b1 e0       	ldi	r27, 0x01	; 1
 d04:	3e d0       	rcall	.+124    	; 0xd82 <__ultoa_invert+0x9c>
 d06:	b4 e0       	ldi	r27, 0x04	; 4
 d08:	3c d0       	rcall	.+120    	; 0xd82 <__ultoa_invert+0x9c>
 d0a:	67 0f       	add	r22, r23
 d0c:	78 1f       	adc	r23, r24
 d0e:	89 1f       	adc	r24, r25
 d10:	9a 1f       	adc	r25, r26
 d12:	a1 1d       	adc	r26, r1
 d14:	68 0f       	add	r22, r24
 d16:	79 1f       	adc	r23, r25
 d18:	8a 1f       	adc	r24, r26
 d1a:	91 1d       	adc	r25, r1
 d1c:	a1 1d       	adc	r26, r1
 d1e:	6a 0f       	add	r22, r26
 d20:	71 1d       	adc	r23, r1
 d22:	81 1d       	adc	r24, r1
 d24:	91 1d       	adc	r25, r1
 d26:	a1 1d       	adc	r26, r1
 d28:	20 d0       	rcall	.+64     	; 0xd6a <__ultoa_invert+0x84>
 d2a:	09 f4       	brne	.+2      	; 0xd2e <__ultoa_invert+0x48>
 d2c:	68 94       	set
 d2e:	3f 91       	pop	r19
 d30:	2a e0       	ldi	r18, 0x0A	; 10
 d32:	26 9f       	mul	r18, r22
 d34:	11 24       	eor	r1, r1
 d36:	30 19       	sub	r19, r0
 d38:	30 5d       	subi	r19, 0xD0	; 208
 d3a:	31 93       	st	Z+, r19
 d3c:	de f6       	brtc	.-74     	; 0xcf4 <__ultoa_invert+0xe>
 d3e:	cf 01       	movw	r24, r30
 d40:	08 95       	ret
 d42:	46 2f       	mov	r20, r22
 d44:	47 70       	andi	r20, 0x07	; 7
 d46:	40 5d       	subi	r20, 0xD0	; 208
 d48:	41 93       	st	Z+, r20
 d4a:	b3 e0       	ldi	r27, 0x03	; 3
 d4c:	0f d0       	rcall	.+30     	; 0xd6c <__ultoa_invert+0x86>
 d4e:	c9 f7       	brne	.-14     	; 0xd42 <__ultoa_invert+0x5c>
 d50:	f6 cf       	rjmp	.-20     	; 0xd3e <__ultoa_invert+0x58>
 d52:	46 2f       	mov	r20, r22
 d54:	4f 70       	andi	r20, 0x0F	; 15
 d56:	40 5d       	subi	r20, 0xD0	; 208
 d58:	4a 33       	cpi	r20, 0x3A	; 58
 d5a:	18 f0       	brcs	.+6      	; 0xd62 <__ultoa_invert+0x7c>
 d5c:	49 5d       	subi	r20, 0xD9	; 217
 d5e:	31 fd       	sbrc	r19, 1
 d60:	40 52       	subi	r20, 0x20	; 32
 d62:	41 93       	st	Z+, r20
 d64:	02 d0       	rcall	.+4      	; 0xd6a <__ultoa_invert+0x84>
 d66:	a9 f7       	brne	.-22     	; 0xd52 <__ultoa_invert+0x6c>
 d68:	ea cf       	rjmp	.-44     	; 0xd3e <__ultoa_invert+0x58>
 d6a:	b4 e0       	ldi	r27, 0x04	; 4
 d6c:	a6 95       	lsr	r26
 d6e:	97 95       	ror	r25
 d70:	87 95       	ror	r24
 d72:	77 95       	ror	r23
 d74:	67 95       	ror	r22
 d76:	ba 95       	dec	r27
 d78:	c9 f7       	brne	.-14     	; 0xd6c <__ultoa_invert+0x86>
 d7a:	00 97       	sbiw	r24, 0x00	; 0
 d7c:	61 05       	cpc	r22, r1
 d7e:	71 05       	cpc	r23, r1
 d80:	08 95       	ret
 d82:	9b 01       	movw	r18, r22
 d84:	ac 01       	movw	r20, r24
 d86:	0a 2e       	mov	r0, r26
 d88:	06 94       	lsr	r0
 d8a:	57 95       	ror	r21
 d8c:	47 95       	ror	r20
 d8e:	37 95       	ror	r19
 d90:	27 95       	ror	r18
 d92:	ba 95       	dec	r27
 d94:	c9 f7       	brne	.-14     	; 0xd88 <__ultoa_invert+0xa2>
 d96:	62 0f       	add	r22, r18
 d98:	73 1f       	adc	r23, r19
 d9a:	84 1f       	adc	r24, r20
 d9c:	95 1f       	adc	r25, r21
 d9e:	a0 1d       	adc	r26, r0
 da0:	08 95       	ret
