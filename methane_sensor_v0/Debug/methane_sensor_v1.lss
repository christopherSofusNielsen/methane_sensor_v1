
methane_sensor_v1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000c9c  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000e2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000012e  00800100  00800100  00000c9c  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001e8  00000000  00000000  00000cf7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000262f  00000000  00000000  00000edf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d83  00000000  00000000  0000350e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cb3  00000000  00000000  00004291  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004a4  00000000  00000000  00004f44  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002b2  00000000  00000000  000053e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009e4  00000000  00000000  0000569a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000178  00000000  00000000  0000607e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000be2  00000be2  00000c96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000061f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.__vector_1 00000014  00000b9c  00000b9c  00000c50  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_16 00000094  00000698  00000698  0000074c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .data.cnt     00000002  0080035a  00000be6  00000c9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 17 .text.TC1_HAL_init 00000034  00000afa  00000afa  00000bae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.TC1_HAL_start 0000000c  00000bc4  00000bc4  00000c78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.TC1_HAL_stop 0000000c  00000bd0  00000bd0  00000c84  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__vector_13 0000004e  000008f2  000008f2  000009a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__vector_22 0000004a  00000940  00000940  000009f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__vector_20 00000074  000007a4  000007a4  00000858  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .bss.rx_buffer_has_message 00000001  0080035e  0080035e  00000c9c  2**0
                  ALLOC
 24 .bss.rx_buffer_data_len 00000001  0080035f  0080035f  00000c9c  2**0
                  ALLOC
 25 .bss.tx_buffer_cursor 00000001  00800360  00800360  00000c9c  2**0
                  ALLOC
 26 .bss.tx_buffer_data_len 00000001  00800361  00800361  00000c9c  2**0
                  ALLOC
 27 .text.uart1_hal_init 0000003c  00000a1a  00000a1a  00000ace  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.uart1_hal_send_string 0000006a  00000888  00000888  0000093c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__vector_30 0000004a  0000098a  0000098a  00000a3e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__vector_28 00000070  00000818  00000818  000008cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .bss.rx_buffer_has_message 00000001  00800362  00800362  00000c9c  2**0
                  ALLOC
 32 .bss.rx_buffer_data_len 00000001  00800363  00800363  00000c9c  2**0
                  ALLOC
 33 .bss.rx_buffer 00000064  008002f6  008002f6  00000c9c  2**0
                  ALLOC
 34 .bss.tx_buffer_cursor 00000001  00800364  00800364  00000c9c  2**0
                  ALLOC
 35 .bss.tx_buffer_data_len 00000001  00800365  00800365  00000c9c  2**0
                  ALLOC
 36 .bss.tx_buffer 000000c8  0080022e  0080022e  00000c9c  2**0
                  ALLOC
 37 .text.main    00000006  00000bdc  00000bdc  00000c90  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.callback 00000014  00000bb0  00000bb0  00000c64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .progmemx.data 0000000a  000000e2  000000e2  00000196  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 40 .text.test_blink_LED 000000a8  000005f0  000005f0  000006a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.test_TC1_HAL_start 00000024  00000b5a  00000b5a  00000c0e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .bss.value    00000002  0080035c  0080035c  00000c9c  2**0
                  ALLOC
 43 .text.libgcc.mul 0000001e  00000b7e  00000b7e  00000c32  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.avrlibc 0000002c  00000b2e  00000b2e  00000be2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.avrlibc 00000046  000009d4  000009d4  00000a88  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.avrlibc 00000448  000000ec  000000ec  000001a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.avrlibc 00000036  00000a8e  00000a8e  00000b42  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.avrlibc 00000078  0000072c  0000072c  000007e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.avrlibc 000000bc  00000534  00000534  000005e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.libgcc.prologue 00000038  00000a56  00000a56  00000b0a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.libgcc.prologue 00000036  00000ac4  00000ac4  00000b78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 47 00 	jmp	0x8e	; 0x8e <__ctors_end>
   4:	0c 94 ce 05 	jmp	0xb9c	; 0xb9c <__vector_1>
   8:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
   c:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  10:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  14:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  18:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  1c:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  20:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  24:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  28:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  2c:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  30:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  34:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <__vector_13>
  38:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  3c:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  40:	0c 94 4c 03 	jmp	0x698	; 0x698 <__vector_16>
  44:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  48:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  4c:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  50:	0c 94 d2 03 	jmp	0x7a4	; 0x7a4 <__vector_20>
  54:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  58:	0c 94 a0 04 	jmp	0x940	; 0x940 <__vector_22>
  5c:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  60:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  64:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  68:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  6c:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  70:	0c 94 0c 04 	jmp	0x818	; 0x818 <__vector_28>
  74:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__bad_interrupt>
  78:	0c 94 c5 04 	jmp	0x98a	; 0x98a <__vector_30>

0000007c <.dinit>:
  7c:	01 00       	.word	0x0001	; ????
  7e:	03 5a       	subi	r16, 0xA3	; 163
  80:	80 03       	fmuls	r16, r16
  82:	5a 03       	fmul	r21, r18
  84:	5c 00       	.word	0x005c	; ????
  86:	0b e6       	ldi	r16, 0x6B	; 107
  88:	03 5c       	subi	r16, 0xC3	; 195
  8a:	03 66       	ori	r16, 0x63	; 99
  8c:	80 00       	.word	0x0080	; ????

0000008e <__ctors_end>:
  8e:	11 24       	eor	r1, r1
  90:	1f be       	out	0x3f, r1	; 63
  92:	cf ef       	ldi	r28, 0xFF	; 255
  94:	d0 e1       	ldi	r29, 0x10	; 16
  96:	de bf       	out	0x3e, r29	; 62
  98:	cd bf       	out	0x3d, r28	; 61

0000009a <__do_copy_data>:
  9a:	ec e7       	ldi	r30, 0x7C	; 124
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	40 e0       	ldi	r20, 0x00	; 0
  a0:	17 c0       	rjmp	.+46     	; 0xd0 <__do_clear_bss+0x8>
  a2:	b5 91       	lpm	r27, Z+
  a4:	a5 91       	lpm	r26, Z+
  a6:	35 91       	lpm	r19, Z+
  a8:	25 91       	lpm	r18, Z+
  aa:	05 91       	lpm	r16, Z+
  ac:	07 fd       	sbrc	r16, 7
  ae:	0c c0       	rjmp	.+24     	; 0xc8 <__do_clear_bss>
  b0:	95 91       	lpm	r25, Z+
  b2:	85 91       	lpm	r24, Z+
  b4:	ef 01       	movw	r28, r30
  b6:	f9 2f       	mov	r31, r25
  b8:	e8 2f       	mov	r30, r24
  ba:	05 90       	lpm	r0, Z+
  bc:	0d 92       	st	X+, r0
  be:	a2 17       	cp	r26, r18
  c0:	b3 07       	cpc	r27, r19
  c2:	d9 f7       	brne	.-10     	; 0xba <__do_copy_data+0x20>
  c4:	fe 01       	movw	r30, r28
  c6:	04 c0       	rjmp	.+8      	; 0xd0 <__do_clear_bss+0x8>

000000c8 <__do_clear_bss>:
  c8:	1d 92       	st	X+, r1
  ca:	a2 17       	cp	r26, r18
  cc:	b3 07       	cpc	r27, r19
  ce:	e1 f7       	brne	.-8      	; 0xc8 <__do_clear_bss>
  d0:	ed 38       	cpi	r30, 0x8D	; 141
  d2:	f4 07       	cpc	r31, r20
  d4:	31 f7       	brne	.-52     	; 0xa2 <__do_copy_data+0x8>
  d6:	0e 94 ee 05 	call	0xbdc	; 0xbdc <main>
  da:	0c 94 6f 00 	jmp	0xde	; 0xde <_exit>

000000de <_exit>:
  de:	f8 94       	cli

000000e0 <__stop_program>:
  e0:	ff cf       	rjmp	.-2      	; 0xe0 <__stop_program>

Disassembly of section .text:

00000be2 <__bad_interrupt>:
 be2:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.__vector_1:

00000b9c <__vector_1>:
	sleep_cpu();
	sleep_disable();
	clear_bit(EIMSK, 0);
}

ISR(INT0_vect){
 b9c:	1f 92       	push	r1
 b9e:	0f 92       	push	r0
 ba0:	0f b6       	in	r0, 0x3f	; 63
 ba2:	0f 92       	push	r0
 ba4:	11 24       	eor	r1, r1
	
}
 ba6:	0f 90       	pop	r0
 ba8:	0f be       	out	0x3f, r0	; 63
 baa:	0f 90       	pop	r0
 bac:	1f 90       	pop	r1
 bae:	18 95       	reti

Disassembly of section .text.__vector_16:

00000698 <__vector_16>:

void TC0_HAL_stop(){
	TCCR0B=0x00; //Set clock NOTE, this should be changed!
}

ISR(TIMER0_COMPA_vect){
 698:	1f 92       	push	r1
 69a:	0f 92       	push	r0
 69c:	0f b6       	in	r0, 0x3f	; 63
 69e:	0f 92       	push	r0
 6a0:	11 24       	eor	r1, r1
 6a2:	2f 93       	push	r18
 6a4:	3f 93       	push	r19
 6a6:	4f 93       	push	r20
 6a8:	5f 93       	push	r21
 6aa:	6f 93       	push	r22
 6ac:	7f 93       	push	r23
 6ae:	8f 93       	push	r24
 6b0:	9f 93       	push	r25
 6b2:	af 93       	push	r26
 6b4:	bf 93       	push	r27
 6b6:	ef 93       	push	r30
 6b8:	ff 93       	push	r31
	//Only for test
	cnt++;
 6ba:	40 91 5a 03 	lds	r20, 0x035A	; 0x80035a <cnt>
 6be:	50 91 5b 03 	lds	r21, 0x035B	; 0x80035b <cnt+0x1>
 6c2:	4f 5f       	subi	r20, 0xFF	; 255
 6c4:	5f 4f       	sbci	r21, 0xFF	; 255
 6c6:	50 93 5b 03 	sts	0x035B, r21	; 0x80035b <cnt+0x1>
 6ca:	40 93 5a 03 	sts	0x035A, r20	; 0x80035a <cnt>
	if(cnt%10==0){
 6ce:	9a 01       	movw	r18, r20
 6d0:	ad ec       	ldi	r26, 0xCD	; 205
 6d2:	bc ec       	ldi	r27, 0xCC	; 204
 6d4:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__umulhisi3>
 6d8:	96 95       	lsr	r25
 6da:	87 95       	ror	r24
 6dc:	96 95       	lsr	r25
 6de:	87 95       	ror	r24
 6e0:	96 95       	lsr	r25
 6e2:	87 95       	ror	r24
 6e4:	9c 01       	movw	r18, r24
 6e6:	22 0f       	add	r18, r18
 6e8:	33 1f       	adc	r19, r19
 6ea:	88 0f       	add	r24, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	88 0f       	add	r24, r24
 6f0:	99 1f       	adc	r25, r25
 6f2:	88 0f       	add	r24, r24
 6f4:	99 1f       	adc	r25, r25
 6f6:	82 0f       	add	r24, r18
 6f8:	93 1f       	adc	r25, r19
 6fa:	48 17       	cp	r20, r24
 6fc:	59 07       	cpc	r21, r25
 6fe:	29 f4       	brne	.+10     	; 0x70a <__vector_16+0x72>
		_cb();		
 700:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 704:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 708:	09 95       	icall
	}
}
 70a:	ff 91       	pop	r31
 70c:	ef 91       	pop	r30
 70e:	bf 91       	pop	r27
 710:	af 91       	pop	r26
 712:	9f 91       	pop	r25
 714:	8f 91       	pop	r24
 716:	7f 91       	pop	r23
 718:	6f 91       	pop	r22
 71a:	5f 91       	pop	r21
 71c:	4f 91       	pop	r20
 71e:	3f 91       	pop	r19
 720:	2f 91       	pop	r18
 722:	0f 90       	pop	r0
 724:	0f be       	out	0x3f, r0	; 63
 726:	0f 90       	pop	r0
 728:	1f 90       	pop	r1
 72a:	18 95       	reti

Disassembly of section .text.TC1_HAL_init:

00000afa <TC1_HAL_init>:
#include "../../util/bit_operators.h"

callback_ptr _cb;

void TC1_HAL_init(uint16_t match, callback_ptr cb){
	TCCR1A=0x00;
 afa:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f0080>
	TCCR1B=0b00001000; //Set CTC A mode
 afe:	28 e0       	ldi	r18, 0x08	; 8
 b00:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f0081>
	TCCR1C=0x00;
 b04:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f0082>
	
	OCR1A=match; //Set compare value
 b08:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f0089>
 b0c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f0088>
	TCNT1=0x0000; //Set counter to zero
 b10:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f0085>
 b14:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f0084>
	
	set_bit(TIMSK1, 1); //Enable interrupt on compare
 b18:	ef e6       	ldi	r30, 0x6F	; 111
 b1a:	f0 e0       	ldi	r31, 0x00	; 0
 b1c:	80 81       	ld	r24, Z
 b1e:	82 60       	ori	r24, 0x02	; 2
 b20:	80 83       	st	Z, r24
	sei();
 b22:	78 94       	sei
	
	_cb=cb; //Set callback pointer
 b24:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b28:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 b2c:	08 95       	ret

Disassembly of section .text.TC1_HAL_start:

00000bc4 <TC1_HAL_start>:
}

void TC1_HAL_start(){
	set_byte(TCCR1B, 0b00000101);
 bc4:	e1 e8       	ldi	r30, 0x81	; 129
 bc6:	f0 e0       	ldi	r31, 0x00	; 0
 bc8:	80 81       	ld	r24, Z
 bca:	85 60       	ori	r24, 0x05	; 5
 bcc:	80 83       	st	Z, r24
 bce:	08 95       	ret

Disassembly of section .text.TC1_HAL_stop:

00000bd0 <TC1_HAL_stop>:
}

void TC1_HAL_stop(){
	clear_byte(TCCR1B, 0b00000111);
 bd0:	e1 e8       	ldi	r30, 0x81	; 129
 bd2:	f0 e0       	ldi	r31, 0x00	; 0
 bd4:	80 81       	ld	r24, Z
 bd6:	88 7f       	andi	r24, 0xF8	; 248
 bd8:	80 83       	st	Z, r24
 bda:	08 95       	ret

Disassembly of section .text.__vector_13:

000008f2 <__vector_13>:
}

ISR(TIMER1_COMPA_vect){
 8f2:	1f 92       	push	r1
 8f4:	0f 92       	push	r0
 8f6:	0f b6       	in	r0, 0x3f	; 63
 8f8:	0f 92       	push	r0
 8fa:	11 24       	eor	r1, r1
 8fc:	2f 93       	push	r18
 8fe:	3f 93       	push	r19
 900:	4f 93       	push	r20
 902:	5f 93       	push	r21
 904:	6f 93       	push	r22
 906:	7f 93       	push	r23
 908:	8f 93       	push	r24
 90a:	9f 93       	push	r25
 90c:	af 93       	push	r26
 90e:	bf 93       	push	r27
 910:	ef 93       	push	r30
 912:	ff 93       	push	r31
	_cb();
 914:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 918:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 91c:	09 95       	icall
 91e:	ff 91       	pop	r31
 920:	ef 91       	pop	r30
 922:	bf 91       	pop	r27
 924:	af 91       	pop	r26
 926:	9f 91       	pop	r25
 928:	8f 91       	pop	r24
 92a:	7f 91       	pop	r23
 92c:	6f 91       	pop	r22
 92e:	5f 91       	pop	r21
 930:	4f 91       	pop	r20
 932:	3f 91       	pop	r19
 934:	2f 91       	pop	r18
 936:	0f 90       	pop	r0
 938:	0f be       	out	0x3f, r0	; 63
 93a:	0f 90       	pop	r0
 93c:	1f 90       	pop	r1
 93e:	18 95       	reti

Disassembly of section .text.__vector_22:

00000940 <__vector_22>:


/************************************************************************/
/* Write data complete vect                                             */
/************************************************************************/
ISR(USART0_TX_vect){
 940:	1f 92       	push	r1
 942:	0f 92       	push	r0
 944:	0f b6       	in	r0, 0x3f	; 63
 946:	0f 92       	push	r0
 948:	11 24       	eor	r1, r1
 94a:	8f 93       	push	r24
 94c:	ef 93       	push	r30
 94e:	ff 93       	push	r31
	if(tx_buffer_cursor<tx_buffer_data_len){
 950:	e0 91 60 03 	lds	r30, 0x0360	; 0x800360 <tx_buffer_cursor>
 954:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <tx_buffer_data_len>
 958:	e8 17       	cp	r30, r24
 95a:	58 f4       	brcc	.+22     	; 0x972 <__vector_22+0x32>
		UDR0=tx_buffer[tx_buffer_cursor++];
 95c:	81 e0       	ldi	r24, 0x01	; 1
 95e:	8e 0f       	add	r24, r30
 960:	80 93 60 03 	sts	0x0360, r24	; 0x800360 <tx_buffer_cursor>
 964:	f0 e0       	ldi	r31, 0x00	; 0
 966:	ea 59       	subi	r30, 0x9A	; 154
 968:	fe 4f       	sbci	r31, 0xFE	; 254
 96a:	80 81       	ld	r24, Z
 96c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
 970:	04 c0       	rjmp	.+8      	; 0x97a <__vector_22+0x3a>
	}else{
		tx_buffer_cursor=0;
 972:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <tx_buffer_cursor>
		tx_buffer_data_len=0;
 976:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <tx_buffer_data_len>
	}
}
 97a:	ff 91       	pop	r31
 97c:	ef 91       	pop	r30
 97e:	8f 91       	pop	r24
 980:	0f 90       	pop	r0
 982:	0f be       	out	0x3f, r0	; 63
 984:	0f 90       	pop	r0
 986:	1f 90       	pop	r1
 988:	18 95       	reti

Disassembly of section .text.__vector_20:

000007a4 <__vector_20>:
	set_bit(UCSR0B, 3); //Enable Tx
	
	uint8_t data[1];
	data[0]=followUpByte;
	uart0_hal_send_message(data, 1);
}
 7a4:	1f 92       	push	r1
 7a6:	0f 92       	push	r0
 7a8:	0f b6       	in	r0, 0x3f	; 63
 7aa:	0f 92       	push	r0
 7ac:	11 24       	eor	r1, r1
 7ae:	2f 93       	push	r18
 7b0:	8f 93       	push	r24
 7b2:	9f 93       	push	r25
 7b4:	ef 93       	push	r30
 7b6:	ff 93       	push	r31
 7b8:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <rx_buffer_has_message>
 7bc:	81 11       	cpse	r24, r1
 7be:	0e c0       	rjmp	.+28     	; 0x7dc <__vector_20+0x38>
 7c0:	e0 91 5f 03 	lds	r30, 0x035F	; 0x80035f <rx_buffer_data_len>
 7c4:	e4 36       	cpi	r30, 0x64	; 100
 7c6:	50 f4       	brcc	.+20     	; 0x7dc <__vector_20+0x38>
 7c8:	81 e0       	ldi	r24, 0x01	; 1
 7ca:	8e 0f       	add	r24, r30
 7cc:	80 93 5f 03 	sts	0x035F, r24	; 0x80035f <rx_buffer_data_len>
 7d0:	f0 e0       	ldi	r31, 0x00	; 0
 7d2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
 7d6:	ee 5f       	subi	r30, 0xFE	; 254
 7d8:	fe 4f       	sbci	r31, 0xFE	; 254
 7da:	80 83       	st	Z, r24
 7dc:	80 91 5f 03 	lds	r24, 0x035F	; 0x80035f <rx_buffer_data_len>
 7e0:	83 30       	cpi	r24, 0x03	; 3
 7e2:	80 f0       	brcs	.+32     	; 0x804 <__EEPROM_REGION_LENGTH__+0x4>
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	fc 01       	movw	r30, r24
 7e8:	ef 5f       	subi	r30, 0xFF	; 255
 7ea:	fe 4f       	sbci	r31, 0xFE	; 254
 7ec:	20 81       	ld	r18, Z
 7ee:	2a 30       	cpi	r18, 0x0A	; 10
 7f0:	49 f4       	brne	.+18     	; 0x804 <__EEPROM_REGION_LENGTH__+0x4>
 7f2:	fc 01       	movw	r30, r24
 7f4:	e0 50       	subi	r30, 0x00	; 0
 7f6:	ff 4f       	sbci	r31, 0xFF	; 255
 7f8:	80 81       	ld	r24, Z
 7fa:	8d 30       	cpi	r24, 0x0D	; 13
 7fc:	19 f4       	brne	.+6      	; 0x804 <__EEPROM_REGION_LENGTH__+0x4>
 7fe:	81 e0       	ldi	r24, 0x01	; 1
 800:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <rx_buffer_has_message>
 804:	ff 91       	pop	r31
 806:	ef 91       	pop	r30
 808:	9f 91       	pop	r25
 80a:	8f 91       	pop	r24
 80c:	2f 91       	pop	r18
 80e:	0f 90       	pop	r0
 810:	0f be       	out	0x3f, r0	; 63
 812:	0f 90       	pop	r0
 814:	1f 90       	pop	r1
 816:	18 95       	reti

Disassembly of section .text.uart1_hal_init:

00000a1a <uart1_hal_init>:
static uint8_t rx_buffer[UART1_RX_BUFF_LENGTH];
static uint8_t rx_buffer_data_len=0;
static uint8_t rx_buffer_has_message=0;

void uart1_hal_init(){
	set_bit(UCSR1B, 4); //Enable Rx
 a1a:	e9 ec       	ldi	r30, 0xC9	; 201
 a1c:	f0 e0       	ldi	r31, 0x00	; 0
 a1e:	80 81       	ld	r24, Z
 a20:	80 61       	ori	r24, 0x10	; 16
 a22:	80 83       	st	Z, r24
	set_bit(UCSR1B, 3); //Enable Tx
 a24:	80 81       	ld	r24, Z
 a26:	88 60       	ori	r24, 0x08	; 8
 a28:	80 83       	st	Z, r24
	set_bit(UCSR1B, 7); //interrupt Rx complete
 a2a:	80 81       	ld	r24, Z
 a2c:	80 68       	ori	r24, 0x80	; 128
 a2e:	80 83       	st	Z, r24
	set_bit(UCSR1B, 6); //interrupt Tx complete
 a30:	80 81       	ld	r24, Z
 a32:	80 64       	ori	r24, 0x40	; 64
 a34:	80 83       	st	Z, r24
	set_bit(UCSR1A, 1); //Set double speed
 a36:	e8 ec       	ldi	r30, 0xC8	; 200
 a38:	f0 e0       	ldi	r31, 0x00	; 0
 a3a:	80 81       	ld	r24, Z
 a3c:	82 60       	ori	r24, 0x02	; 2
 a3e:	80 83       	st	Z, r24
	UCSR1C = 0b00000110; //Async, none parity, 1 stop bit, 8 databit
 a40:	86 e0       	ldi	r24, 0x06	; 6
 a42:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7f00ca>
	UBRR1=(8000000/(8*57600))-1; //set baudrate
 a46:	80 e1       	ldi	r24, 0x10	; 16
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f00cd>
 a4e:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f00cc>
	sei();
 a52:	78 94       	sei
 a54:	08 95       	ret

Disassembly of section .text.uart1_hal_send_string:

00000888 <uart1_hal_send_string>:
static void copy_buffer(uint8_t msg[]){
	for (uint8_t i=0; i<rx_buffer_data_len-2; i++)
	{
		msg[i]=rx_buffer[i];
	}
}
 888:	cf 92       	push	r12
 88a:	df 92       	push	r13
 88c:	ef 92       	push	r14
 88e:	0f 93       	push	r16
 890:	1f 93       	push	r17
 892:	cf 93       	push	r28
 894:	6b 01       	movw	r12, r22
 896:	e8 2e       	mov	r14, r24
 898:	c0 e0       	ldi	r28, 0x00	; 0
 89a:	12 c0       	rjmp	.+36     	; 0x8c0 <uart1_hal_send_string+0x38>
 89c:	8c 2f       	mov	r24, r28
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	4e 2d       	mov	r20, r14
 8a2:	96 01       	movw	r18, r12
 8a4:	20 0f       	add	r18, r16
 8a6:	31 1f       	adc	r19, r17
 8a8:	41 1d       	adc	r20, r1
 8aa:	17 fd       	sbrc	r17, 7
 8ac:	4a 95       	dec	r20
 8ae:	f9 01       	movw	r30, r18
 8b0:	24 91       	lpm	r18, Z
 8b2:	47 fd       	sbrc	r20, 7
 8b4:	20 81       	ld	r18, Z
 8b6:	fc 01       	movw	r30, r24
 8b8:	e2 5d       	subi	r30, 0xD2	; 210
 8ba:	fd 4f       	sbci	r31, 0xFD	; 253
 8bc:	20 83       	st	Z, r18
 8be:	cf 5f       	subi	r28, 0xFF	; 255
 8c0:	0c 2f       	mov	r16, r28
 8c2:	10 e0       	ldi	r17, 0x00	; 0
 8c4:	8e 2d       	mov	r24, r14
 8c6:	b6 01       	movw	r22, r12
 8c8:	0e 94 97 05 	call	0xb2e	; 0xb2e <strlen>
 8cc:	08 17       	cp	r16, r24
 8ce:	19 07       	cpc	r17, r25
 8d0:	28 f3       	brcs	.-54     	; 0x89c <uart1_hal_send_string+0x14>
 8d2:	80 93 65 03 	sts	0x0365, r24	; 0x800365 <tx_buffer_data_len>
 8d6:	81 e0       	ldi	r24, 0x01	; 1
 8d8:	80 93 64 03 	sts	0x0364, r24	; 0x800364 <tx_buffer_cursor>
 8dc:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <_end>
 8e0:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
 8e4:	cf 91       	pop	r28
 8e6:	1f 91       	pop	r17
 8e8:	0f 91       	pop	r16
 8ea:	ef 90       	pop	r14
 8ec:	df 90       	pop	r13
 8ee:	cf 90       	pop	r12
 8f0:	08 95       	ret

Disassembly of section .text.__vector_30:

0000098a <__vector_30>:
 98a:	1f 92       	push	r1
 98c:	0f 92       	push	r0
 98e:	0f b6       	in	r0, 0x3f	; 63
 990:	0f 92       	push	r0
 992:	11 24       	eor	r1, r1
 994:	8f 93       	push	r24
 996:	ef 93       	push	r30
 998:	ff 93       	push	r31
 99a:	e0 91 64 03 	lds	r30, 0x0364	; 0x800364 <tx_buffer_cursor>
 99e:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <tx_buffer_data_len>
 9a2:	e8 17       	cp	r30, r24
 9a4:	58 f4       	brcc	.+22     	; 0x9bc <__vector_30+0x32>
 9a6:	81 e0       	ldi	r24, 0x01	; 1
 9a8:	8e 0f       	add	r24, r30
 9aa:	80 93 64 03 	sts	0x0364, r24	; 0x800364 <tx_buffer_cursor>
 9ae:	f0 e0       	ldi	r31, 0x00	; 0
 9b0:	e2 5d       	subi	r30, 0xD2	; 210
 9b2:	fd 4f       	sbci	r31, 0xFD	; 253
 9b4:	80 81       	ld	r24, Z
 9b6:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
 9ba:	04 c0       	rjmp	.+8      	; 0x9c4 <__vector_30+0x3a>
 9bc:	10 92 64 03 	sts	0x0364, r1	; 0x800364 <tx_buffer_cursor>
 9c0:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <tx_buffer_data_len>
 9c4:	ff 91       	pop	r31
 9c6:	ef 91       	pop	r30
 9c8:	8f 91       	pop	r24
 9ca:	0f 90       	pop	r0
 9cc:	0f be       	out	0x3f, r0	; 63
 9ce:	0f 90       	pop	r0
 9d0:	1f 90       	pop	r1
 9d2:	18 95       	reti

Disassembly of section .text.__vector_28:

00000818 <__vector_28>:
 818:	1f 92       	push	r1
 81a:	0f 92       	push	r0
 81c:	0f b6       	in	r0, 0x3f	; 63
 81e:	0f 92       	push	r0
 820:	11 24       	eor	r1, r1
 822:	2f 93       	push	r18
 824:	8f 93       	push	r24
 826:	9f 93       	push	r25
 828:	ef 93       	push	r30
 82a:	ff 93       	push	r31
 82c:	80 91 62 03 	lds	r24, 0x0362	; 0x800362 <rx_buffer_has_message>
 830:	81 11       	cpse	r24, r1
 832:	0e c0       	rjmp	.+28     	; 0x850 <__vector_28+0x38>
 834:	e0 91 63 03 	lds	r30, 0x0363	; 0x800363 <rx_buffer_data_len>
 838:	e4 36       	cpi	r30, 0x64	; 100
 83a:	50 f4       	brcc	.+20     	; 0x850 <__vector_28+0x38>
 83c:	81 e0       	ldi	r24, 0x01	; 1
 83e:	8e 0f       	add	r24, r30
 840:	80 93 63 03 	sts	0x0363, r24	; 0x800363 <rx_buffer_data_len>
 844:	f0 e0       	ldi	r31, 0x00	; 0
 846:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
 84a:	ea 50       	subi	r30, 0x0A	; 10
 84c:	fd 4f       	sbci	r31, 0xFD	; 253
 84e:	80 83       	st	Z, r24
 850:	80 91 63 03 	lds	r24, 0x0363	; 0x800363 <rx_buffer_data_len>
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	fc 01       	movw	r30, r24
 858:	eb 50       	subi	r30, 0x0B	; 11
 85a:	fd 4f       	sbci	r31, 0xFD	; 253
 85c:	20 81       	ld	r18, Z
 85e:	2a 30       	cpi	r18, 0x0A	; 10
 860:	49 f4       	brne	.+18     	; 0x874 <__vector_28+0x5c>
 862:	fc 01       	movw	r30, r24
 864:	ec 50       	subi	r30, 0x0C	; 12
 866:	fd 4f       	sbci	r31, 0xFD	; 253
 868:	80 81       	ld	r24, Z
 86a:	8d 30       	cpi	r24, 0x0D	; 13
 86c:	19 f4       	brne	.+6      	; 0x874 <__vector_28+0x5c>
 86e:	81 e0       	ldi	r24, 0x01	; 1
 870:	80 93 62 03 	sts	0x0362, r24	; 0x800362 <rx_buffer_has_message>
 874:	ff 91       	pop	r31
 876:	ef 91       	pop	r30
 878:	9f 91       	pop	r25
 87a:	8f 91       	pop	r24
 87c:	2f 91       	pop	r18
 87e:	0f 90       	pop	r0
 880:	0f be       	out	0x3f, r0	; 63
 882:	0f 90       	pop	r0
 884:	1f 90       	pop	r1
 886:	18 95       	reti

Disassembly of section .text.main:

00000bdc <main>:
    //test_PM_HAL_start();
	//test_EEPROM_module_start();
	//test_ADC_module_start();
	//test_RTC_module_start();
	//test_TC0_HAL_start();
	test_TC1_HAL_start();
 bdc:	0e 94 ad 05 	call	0xb5a	; 0xb5a <test_TC1_HAL_start>
 be0:	ff cf       	rjmp	.-2      	; 0xbe0 <main+0x4>

Disassembly of section .text.callback:

00000bb0 <callback>:

/************************************************************************/
/* Test callback and time                                               */
/************************************************************************/
static void callback(){
	value++;
 bb0:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <value>
 bb4:	90 91 5d 03 	lds	r25, 0x035D	; 0x80035d <value+0x1>
 bb8:	01 96       	adiw	r24, 0x01	; 1
 bba:	90 93 5d 03 	sts	0x035D, r25	; 0x80035d <value+0x1>
 bbe:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <value>
 bc2:	08 95       	ret

Disassembly of section .text.test_blink_LED:

000005f0 <test_blink_LED>:
}

void test_blink_LED(){
 5f0:	0f 93       	push	r16
 5f2:	1f 93       	push	r17
 5f4:	cf 93       	push	r28
 5f6:	df 93       	push	r29
 5f8:	cd b7       	in	r28, 0x3d	; 61
 5fa:	de b7       	in	r29, 0x3e	; 62
 5fc:	6e 97       	sbiw	r28, 0x1e	; 30
 5fe:	0f b6       	in	r0, 0x3f	; 63
 600:	f8 94       	cli
 602:	de bf       	out	0x3e, r29	; 62
 604:	0f be       	out	0x3f, r0	; 63
 606:	cd bf       	out	0x3d, r28	; 61
	TC1_HAL_init(4000, &callback);
 608:	68 ed       	ldi	r22, 0xD8	; 216
 60a:	75 e0       	ldi	r23, 0x05	; 5
 60c:	80 ea       	ldi	r24, 0xA0	; 160
 60e:	9f e0       	ldi	r25, 0x0F	; 15
 610:	0e 94 7d 05 	call	0xafa	; 0xafa <TC1_HAL_init>
	uart1_hal_send_string("RUN ");
 614:	62 ee       	ldi	r22, 0xE2	; 226
 616:	70 e0       	ldi	r23, 0x00	; 0
 618:	80 e0       	ldi	r24, 0x00	; 0
 61a:	0e 94 44 04 	call	0x888	; 0x888 <uart1_hal_send_string>
	TC1_HAL_start();
 61e:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <TC1_HAL_start>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 622:	2f ef       	ldi	r18, 0xFF	; 255
 624:	81 e1       	ldi	r24, 0x11	; 17
 626:	9a e7       	ldi	r25, 0x7A	; 122
 628:	21 50       	subi	r18, 0x01	; 1
 62a:	80 40       	sbci	r24, 0x00	; 0
 62c:	90 40       	sbci	r25, 0x00	; 0
 62e:	e1 f7       	brne	.-8      	; 0x628 <test_blink_LED+0x38>
 630:	00 c0       	rjmp	.+0      	; 0x632 <test_blink_LED+0x42>
 632:	00 00       	nop
	_delay_ms(5000);
	TC1_HAL_stop();
 634:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <TC1_HAL_stop>
	char msg[30];
	sprintf(msg, " %u ", value);
 638:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <value+0x1>
 63c:	8f 93       	push	r24
 63e:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <value>
 642:	8f 93       	push	r24
 644:	87 ee       	ldi	r24, 0xE7	; 231
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	a0 e0       	ldi	r26, 0x00	; 0
 64a:	af 93       	push	r26
 64c:	9f 93       	push	r25
 64e:	8f 93       	push	r24
 650:	8e 01       	movw	r16, r28
 652:	0f 5f       	subi	r16, 0xFF	; 255
 654:	1f 4f       	sbci	r17, 0xFF	; 255
 656:	1f 93       	push	r17
 658:	0f 93       	push	r16
 65a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <sprintf>
	uart1_hal_send_string(msg);
 65e:	b8 01       	movw	r22, r16
 660:	80 e8       	ldi	r24, 0x80	; 128
 662:	0e 94 44 04 	call	0x888	; 0x888 <uart1_hal_send_string>
 666:	2f ef       	ldi	r18, 0xFF	; 255
 668:	83 ed       	ldi	r24, 0xD3	; 211
 66a:	90 e3       	ldi	r25, 0x30	; 48
 66c:	21 50       	subi	r18, 0x01	; 1
 66e:	80 40       	sbci	r24, 0x00	; 0
 670:	90 40       	sbci	r25, 0x00	; 0
 672:	e1 f7       	brne	.-8      	; 0x66c <test_blink_LED+0x7c>
 674:	00 c0       	rjmp	.+0      	; 0x676 <test_blink_LED+0x86>
 676:	00 00       	nop
	_delay_ms(2000);
}
 678:	0f b6       	in	r0, 0x3f	; 63
 67a:	f8 94       	cli
 67c:	de bf       	out	0x3e, r29	; 62
 67e:	0f be       	out	0x3f, r0	; 63
 680:	cd bf       	out	0x3d, r28	; 61
 682:	6e 96       	adiw	r28, 0x1e	; 30
 684:	0f b6       	in	r0, 0x3f	; 63
 686:	f8 94       	cli
 688:	de bf       	out	0x3e, r29	; 62
 68a:	0f be       	out	0x3f, r0	; 63
 68c:	cd bf       	out	0x3d, r28	; 61
 68e:	df 91       	pop	r29
 690:	cf 91       	pop	r28
 692:	1f 91       	pop	r17
 694:	0f 91       	pop	r16
 696:	08 95       	ret

Disassembly of section .text.test_TC1_HAL_start:

00000b5a <test_TC1_HAL_start>:

//Vars
static uint16_t value=0;

void test_TC1_HAL_start(){
	uart1_hal_init();
 b5a:	0e 94 0d 05 	call	0xa1a	; 0xa1a <uart1_hal_init>
	
	while(1){
		value=0;
 b5e:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <value+0x1>
 b62:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <value>
		test_blink_LED();
 b66:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <test_blink_LED>
 b6a:	2f ef       	ldi	r18, 0xFF	; 255
 b6c:	83 ed       	ldi	r24, 0xD3	; 211
 b6e:	90 e3       	ldi	r25, 0x30	; 48
 b70:	21 50       	subi	r18, 0x01	; 1
 b72:	80 40       	sbci	r24, 0x00	; 0
 b74:	90 40       	sbci	r25, 0x00	; 0
 b76:	e1 f7       	brne	.-8      	; 0xb70 <test_TC1_HAL_start+0x16>
 b78:	00 c0       	rjmp	.+0      	; 0xb7a <test_TC1_HAL_start+0x20>
 b7a:	00 00       	nop
 b7c:	f0 cf       	rjmp	.-32     	; 0xb5e <test_TC1_HAL_start+0x4>

Disassembly of section .text.libgcc.mul:

00000b7e <__umulhisi3>:
 b7e:	a2 9f       	mul	r26, r18
 b80:	b0 01       	movw	r22, r0
 b82:	b3 9f       	mul	r27, r19
 b84:	c0 01       	movw	r24, r0
 b86:	a3 9f       	mul	r26, r19
 b88:	70 0d       	add	r23, r0
 b8a:	81 1d       	adc	r24, r1
 b8c:	11 24       	eor	r1, r1
 b8e:	91 1d       	adc	r25, r1
 b90:	b2 9f       	mul	r27, r18
 b92:	70 0d       	add	r23, r0
 b94:	81 1d       	adc	r24, r1
 b96:	11 24       	eor	r1, r1
 b98:	91 1d       	adc	r25, r1
 b9a:	08 95       	ret

Disassembly of section .text.avrlibc:

00000b2e <strlen>:
 b2e:	cf 92       	push	r12
 b30:	df 92       	push	r13
 b32:	ef 92       	push	r14
 b34:	6b 01       	movw	r12, r22
 b36:	e8 2e       	mov	r14, r24
 b38:	a8 2f       	mov	r26, r24
 b3a:	cb 01       	movw	r24, r22
 b3c:	fc 01       	movw	r30, r24
 b3e:	24 91       	lpm	r18, Z
 b40:	a7 fd       	sbrc	r26, 7
 b42:	20 81       	ld	r18, Z
 b44:	22 23       	and	r18, r18
 b46:	19 f0       	breq	.+6      	; 0xb4e <strlen+0x20>
 b48:	01 96       	adiw	r24, 0x01	; 1
 b4a:	a1 1d       	adc	r26, r1
 b4c:	f7 cf       	rjmp	.-18     	; 0xb3c <strlen+0xe>
 b4e:	8c 19       	sub	r24, r12
 b50:	9d 09       	sbc	r25, r13
 b52:	ef 90       	pop	r14
 b54:	df 90       	pop	r13
 b56:	cf 90       	pop	r12
 b58:	08 95       	ret

Disassembly of section .text.avrlibc:

000009d4 <sprintf>:
 9d4:	af e0       	ldi	r26, 0x0F	; 15
 9d6:	b0 e0       	ldi	r27, 0x00	; 0
 9d8:	e0 ef       	ldi	r30, 0xF0	; 240
 9da:	f4 e0       	ldi	r31, 0x04	; 4
 9dc:	0c 94 39 05 	jmp	0xa72	; 0xa72 <__prologue_saves__+0x1c>
 9e0:	0e 89       	ldd	r16, Y+22	; 0x16
 9e2:	1f 89       	ldd	r17, Y+23	; 0x17
 9e4:	86 e0       	ldi	r24, 0x06	; 6
 9e6:	8d 83       	std	Y+5, r24	; 0x05
 9e8:	1a 83       	std	Y+2, r17	; 0x02
 9ea:	09 83       	std	Y+1, r16	; 0x01
 9ec:	8f ef       	ldi	r24, 0xFF	; 255
 9ee:	9f e7       	ldi	r25, 0x7F	; 127
 9f0:	9f 83       	std	Y+7, r25	; 0x07
 9f2:	8e 83       	std	Y+6, r24	; 0x06
 9f4:	9e 01       	movw	r18, r28
 9f6:	25 5e       	subi	r18, 0xE5	; 229
 9f8:	3f 4f       	sbci	r19, 0xFF	; 255
 9fa:	48 8d       	ldd	r20, Y+24	; 0x18
 9fc:	59 8d       	ldd	r21, Y+25	; 0x19
 9fe:	6a 8d       	ldd	r22, Y+26	; 0x1a
 a00:	ce 01       	movw	r24, r28
 a02:	01 96       	adiw	r24, 0x01	; 1
 a04:	0e 94 76 00 	call	0xec	; 0xec <vfprintf>
 a08:	e8 85       	ldd	r30, Y+8	; 0x08
 a0a:	f9 85       	ldd	r31, Y+9	; 0x09
 a0c:	e0 0f       	add	r30, r16
 a0e:	f1 1f       	adc	r31, r17
 a10:	10 82       	st	Z, r1
 a12:	2f 96       	adiw	r28, 0x0f	; 15
 a14:	e4 e0       	ldi	r30, 0x04	; 4
 a16:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__epilogue_restores__+0x1c>

Disassembly of section .text.avrlibc:

000000ec <vfprintf>:
  ec:	2f 92       	push	r2
  ee:	3f 92       	push	r3
  f0:	4f 92       	push	r4
  f2:	6f 92       	push	r6
  f4:	7f 92       	push	r7
  f6:	8f 92       	push	r8
  f8:	9f 92       	push	r9
  fa:	af 92       	push	r10
  fc:	bf 92       	push	r11
  fe:	cf 92       	push	r12
 100:	df 92       	push	r13
 102:	ef 92       	push	r14
 104:	ff 92       	push	r15
 106:	0f 93       	push	r16
 108:	1f 93       	push	r17
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	cd b7       	in	r28, 0x3d	; 61
 110:	de b7       	in	r29, 0x3e	; 62
 112:	62 97       	sbiw	r28, 0x12	; 18
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	f8 94       	cli
 118:	de bf       	out	0x3e, r29	; 62
 11a:	0f be       	out	0x3f, r0	; 63
 11c:	cd bf       	out	0x3d, r28	; 61
 11e:	6c 01       	movw	r12, r24
 120:	3a 01       	movw	r6, r20
 122:	86 2e       	mov	r8, r22
 124:	79 01       	movw	r14, r18
 126:	fc 01       	movw	r30, r24
 128:	10 86       	std	Z+8, r1	; 0x08
 12a:	17 82       	std	Z+7, r1	; 0x07
 12c:	84 81       	ldd	r24, Z+4	; 0x04
 12e:	81 ff       	sbrs	r24, 1
 130:	e7 c1       	rjmp	.+974    	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 132:	9e 01       	movw	r18, r28
 134:	2f 5f       	subi	r18, 0xFF	; 255
 136:	3f 4f       	sbci	r19, 0xFF	; 255
 138:	3d 87       	std	Y+13, r19	; 0x0d
 13a:	2c 87       	std	Y+12, r18	; 0x0c
 13c:	c9 01       	movw	r24, r18
 13e:	a0 e8       	ldi	r26, 0x80	; 128
 140:	88 8b       	std	Y+16, r24	; 0x10
 142:	99 8b       	std	Y+17, r25	; 0x11
 144:	aa 8b       	std	Y+18, r26	; 0x12
 146:	9f e3       	ldi	r25, 0x3F	; 63
 148:	99 2e       	mov	r9, r25
 14a:	f3 01       	movw	r30, r6
 14c:	84 91       	lpm	r24, Z
 14e:	87 fc       	sbrc	r8, 7
 150:	80 81       	ld	r24, Z
 152:	88 23       	and	r24, r24
 154:	09 f4       	brne	.+2      	; 0x158 <vfprintf+0x6c>
 156:	d0 c1       	rjmp	.+928    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 158:	48 2d       	mov	r20, r8
 15a:	93 01       	movw	r18, r6
 15c:	2f 5f       	subi	r18, 0xFF	; 255
 15e:	3f 4f       	sbci	r19, 0xFF	; 255
 160:	4f 4f       	sbci	r20, 0xFF	; 255
 162:	85 32       	cpi	r24, 0x25	; 37
 164:	19 f0       	breq	.+6      	; 0x16c <vfprintf+0x80>
 166:	39 01       	movw	r6, r18
 168:	84 2e       	mov	r8, r20
 16a:	0a c0       	rjmp	.+20     	; 0x180 <vfprintf+0x94>
 16c:	f9 01       	movw	r30, r18
 16e:	84 91       	lpm	r24, Z
 170:	47 fd       	sbrc	r20, 7
 172:	80 81       	ld	r24, Z
 174:	92 e0       	ldi	r25, 0x02	; 2
 176:	69 0e       	add	r6, r25
 178:	71 1c       	adc	r7, r1
 17a:	81 1c       	adc	r8, r1
 17c:	85 32       	cpi	r24, 0x25	; 37
 17e:	29 f4       	brne	.+10     	; 0x18a <vfprintf+0x9e>
 180:	b6 01       	movw	r22, r12
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 188:	e0 cf       	rjmp	.-64     	; 0x14a <vfprintf+0x5e>
 18a:	b1 2c       	mov	r11, r1
 18c:	00 e0       	ldi	r16, 0x00	; 0
 18e:	10 e0       	ldi	r17, 0x00	; 0
 190:	10 32       	cpi	r17, 0x20	; 32
 192:	a0 f4       	brcc	.+40     	; 0x1bc <vfprintf+0xd0>
 194:	8b 32       	cpi	r24, 0x2B	; 43
 196:	69 f0       	breq	.+26     	; 0x1b2 <vfprintf+0xc6>
 198:	30 f4       	brcc	.+12     	; 0x1a6 <vfprintf+0xba>
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	59 f0       	breq	.+22     	; 0x1b4 <vfprintf+0xc8>
 19e:	83 32       	cpi	r24, 0x23	; 35
 1a0:	69 f4       	brne	.+26     	; 0x1bc <vfprintf+0xd0>
 1a2:	10 61       	ori	r17, 0x10	; 16
 1a4:	2c c0       	rjmp	.+88     	; 0x1fe <vfprintf+0x112>
 1a6:	8d 32       	cpi	r24, 0x2D	; 45
 1a8:	39 f0       	breq	.+14     	; 0x1b8 <vfprintf+0xcc>
 1aa:	80 33       	cpi	r24, 0x30	; 48
 1ac:	39 f4       	brne	.+14     	; 0x1bc <vfprintf+0xd0>
 1ae:	11 60       	ori	r17, 0x01	; 1
 1b0:	26 c0       	rjmp	.+76     	; 0x1fe <vfprintf+0x112>
 1b2:	12 60       	ori	r17, 0x02	; 2
 1b4:	14 60       	ori	r17, 0x04	; 4
 1b6:	23 c0       	rjmp	.+70     	; 0x1fe <vfprintf+0x112>
 1b8:	18 60       	ori	r17, 0x08	; 8
 1ba:	21 c0       	rjmp	.+66     	; 0x1fe <vfprintf+0x112>
 1bc:	17 fd       	sbrc	r17, 7
 1be:	29 c0       	rjmp	.+82     	; 0x212 <vfprintf+0x126>
 1c0:	90 ed       	ldi	r25, 0xD0	; 208
 1c2:	98 0f       	add	r25, r24
 1c4:	9a 30       	cpi	r25, 0x0A	; 10
 1c6:	78 f4       	brcc	.+30     	; 0x1e6 <vfprintf+0xfa>
 1c8:	16 ff       	sbrs	r17, 6
 1ca:	06 c0       	rjmp	.+12     	; 0x1d8 <vfprintf+0xec>
 1cc:	aa e0       	ldi	r26, 0x0A	; 10
 1ce:	ba 9e       	mul	r11, r26
 1d0:	90 0d       	add	r25, r0
 1d2:	11 24       	eor	r1, r1
 1d4:	b9 2e       	mov	r11, r25
 1d6:	13 c0       	rjmp	.+38     	; 0x1fe <vfprintf+0x112>
 1d8:	ea e0       	ldi	r30, 0x0A	; 10
 1da:	0e 9f       	mul	r16, r30
 1dc:	90 0d       	add	r25, r0
 1de:	11 24       	eor	r1, r1
 1e0:	09 2f       	mov	r16, r25
 1e2:	10 62       	ori	r17, 0x20	; 32
 1e4:	0c c0       	rjmp	.+24     	; 0x1fe <vfprintf+0x112>
 1e6:	8e 32       	cpi	r24, 0x2E	; 46
 1e8:	21 f4       	brne	.+8      	; 0x1f2 <vfprintf+0x106>
 1ea:	16 fd       	sbrc	r17, 6
 1ec:	85 c1       	rjmp	.+778    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 1ee:	10 64       	ori	r17, 0x40	; 64
 1f0:	06 c0       	rjmp	.+12     	; 0x1fe <vfprintf+0x112>
 1f2:	8c 36       	cpi	r24, 0x6C	; 108
 1f4:	11 f4       	brne	.+4      	; 0x1fa <vfprintf+0x10e>
 1f6:	10 68       	ori	r17, 0x80	; 128
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <vfprintf+0x112>
 1fa:	88 36       	cpi	r24, 0x68	; 104
 1fc:	51 f4       	brne	.+20     	; 0x212 <vfprintf+0x126>
 1fe:	f3 01       	movw	r30, r6
 200:	84 91       	lpm	r24, Z
 202:	87 fc       	sbrc	r8, 7
 204:	80 81       	ld	r24, Z
 206:	ff ef       	ldi	r31, 0xFF	; 255
 208:	6f 1a       	sub	r6, r31
 20a:	7f 0a       	sbc	r7, r31
 20c:	8f 0a       	sbc	r8, r31
 20e:	81 11       	cpse	r24, r1
 210:	bf cf       	rjmp	.-130    	; 0x190 <vfprintf+0xa4>
 212:	98 2f       	mov	r25, r24
 214:	9f 7d       	andi	r25, 0xDF	; 223
 216:	95 54       	subi	r25, 0x45	; 69
 218:	93 30       	cpi	r25, 0x03	; 3
 21a:	28 f4       	brcc	.+10     	; 0x226 <vfprintf+0x13a>
 21c:	24 e0       	ldi	r18, 0x04	; 4
 21e:	e2 0e       	add	r14, r18
 220:	f1 1c       	adc	r15, r1
 222:	99 82       	std	Y+1, r9	; 0x01
 224:	0f c0       	rjmp	.+30     	; 0x244 <vfprintf+0x158>
 226:	83 36       	cpi	r24, 0x63	; 99
 228:	31 f0       	breq	.+12     	; 0x236 <vfprintf+0x14a>
 22a:	83 37       	cpi	r24, 0x73	; 115
 22c:	91 f0       	breq	.+36     	; 0x252 <vfprintf+0x166>
 22e:	83 35       	cpi	r24, 0x53	; 83
 230:	09 f0       	breq	.+2      	; 0x234 <vfprintf+0x148>
 232:	63 c0       	rjmp	.+198    	; 0x2fa <vfprintf+0x20e>
 234:	27 c0       	rjmp	.+78     	; 0x284 <vfprintf+0x198>
 236:	f7 01       	movw	r30, r14
 238:	80 81       	ld	r24, Z
 23a:	89 83       	std	Y+1, r24	; 0x01
 23c:	97 01       	movw	r18, r14
 23e:	2e 5f       	subi	r18, 0xFE	; 254
 240:	3f 4f       	sbci	r19, 0xFF	; 255
 242:	79 01       	movw	r14, r18
 244:	28 88       	ldd	r2, Y+16	; 0x10
 246:	39 88       	ldd	r3, Y+17	; 0x11
 248:	4a 88       	ldd	r4, Y+18	; 0x12
 24a:	aa 24       	eor	r10, r10
 24c:	a3 94       	inc	r10
 24e:	b1 2c       	mov	r11, r1
 250:	17 c0       	rjmp	.+46     	; 0x280 <vfprintf+0x194>
 252:	a7 01       	movw	r20, r14
 254:	4d 5f       	subi	r20, 0xFD	; 253
 256:	5f 4f       	sbci	r21, 0xFF	; 255
 258:	5f 87       	std	Y+15, r21	; 0x0f
 25a:	4e 87       	std	Y+14, r20	; 0x0e
 25c:	f7 01       	movw	r30, r14
 25e:	20 80       	ld	r2, Z
 260:	31 80       	ldd	r3, Z+1	; 0x01
 262:	42 80       	ldd	r4, Z+2	; 0x02
 264:	16 ff       	sbrs	r17, 6
 266:	03 c0       	rjmp	.+6      	; 0x26e <vfprintf+0x182>
 268:	4b 2d       	mov	r20, r11
 26a:	50 e0       	ldi	r21, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <vfprintf+0x186>
 26e:	4f ef       	ldi	r20, 0xFF	; 255
 270:	5f ef       	ldi	r21, 0xFF	; 255
 272:	84 2d       	mov	r24, r4
 274:	b1 01       	movw	r22, r2
 276:	0e 94 47 05 	call	0xa8e	; 0xa8e <strnlen>
 27a:	5c 01       	movw	r10, r24
 27c:	ee 84       	ldd	r14, Y+14	; 0x0e
 27e:	ff 84       	ldd	r15, Y+15	; 0x0f
 280:	1f 77       	andi	r17, 0x7F	; 127
 282:	18 c0       	rjmp	.+48     	; 0x2b4 <vfprintf+0x1c8>
 284:	97 01       	movw	r18, r14
 286:	2d 5f       	subi	r18, 0xFD	; 253
 288:	3f 4f       	sbci	r19, 0xFF	; 255
 28a:	3f 87       	std	Y+15, r19	; 0x0f
 28c:	2e 87       	std	Y+14, r18	; 0x0e
 28e:	f7 01       	movw	r30, r14
 290:	20 80       	ld	r2, Z
 292:	31 80       	ldd	r3, Z+1	; 0x01
 294:	42 80       	ldd	r4, Z+2	; 0x02
 296:	16 ff       	sbrs	r17, 6
 298:	03 c0       	rjmp	.+6      	; 0x2a0 <vfprintf+0x1b4>
 29a:	4b 2d       	mov	r20, r11
 29c:	50 e0       	ldi	r21, 0x00	; 0
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <vfprintf+0x1b8>
 2a0:	4f ef       	ldi	r20, 0xFF	; 255
 2a2:	5f ef       	ldi	r21, 0xFF	; 255
 2a4:	84 2d       	mov	r24, r4
 2a6:	b1 01       	movw	r22, r2
 2a8:	0e 94 47 05 	call	0xa8e	; 0xa8e <strnlen>
 2ac:	5c 01       	movw	r10, r24
 2ae:	10 68       	ori	r17, 0x80	; 128
 2b0:	ee 84       	ldd	r14, Y+14	; 0x0e
 2b2:	ff 84       	ldd	r15, Y+15	; 0x0f
 2b4:	13 fd       	sbrc	r17, 3
 2b6:	1d c0       	rjmp	.+58     	; 0x2f2 <vfprintf+0x206>
 2b8:	80 2f       	mov	r24, r16
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	a8 16       	cp	r10, r24
 2be:	b9 06       	cpc	r11, r25
 2c0:	c0 f4       	brcc	.+48     	; 0x2f2 <vfprintf+0x206>
 2c2:	b6 01       	movw	r22, r12
 2c4:	80 e2       	ldi	r24, 0x20	; 32
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 2cc:	01 50       	subi	r16, 0x01	; 1
 2ce:	f4 cf       	rjmp	.-24     	; 0x2b8 <vfprintf+0x1cc>
 2d0:	f1 01       	movw	r30, r2
 2d2:	84 91       	lpm	r24, Z
 2d4:	47 fc       	sbrc	r4, 7
 2d6:	80 81       	ld	r24, Z
 2d8:	ff ef       	ldi	r31, 0xFF	; 255
 2da:	2f 1a       	sub	r2, r31
 2dc:	3f 0a       	sbc	r3, r31
 2de:	4f 0a       	sbc	r4, r31
 2e0:	b6 01       	movw	r22, r12
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 2e8:	01 11       	cpse	r16, r1
 2ea:	01 50       	subi	r16, 0x01	; 1
 2ec:	21 e0       	ldi	r18, 0x01	; 1
 2ee:	a2 1a       	sub	r10, r18
 2f0:	b1 08       	sbc	r11, r1
 2f2:	a1 14       	cp	r10, r1
 2f4:	b1 04       	cpc	r11, r1
 2f6:	61 f7       	brne	.-40     	; 0x2d0 <vfprintf+0x1e4>
 2f8:	f5 c0       	rjmp	.+490    	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 2fa:	84 36       	cpi	r24, 0x64	; 100
 2fc:	11 f0       	breq	.+4      	; 0x302 <vfprintf+0x216>
 2fe:	89 36       	cpi	r24, 0x69	; 105
 300:	71 f5       	brne	.+92     	; 0x35e <vfprintf+0x272>
 302:	f7 01       	movw	r30, r14
 304:	17 ff       	sbrs	r17, 7
 306:	08 c0       	rjmp	.+16     	; 0x318 <vfprintf+0x22c>
 308:	60 81       	ld	r22, Z
 30a:	71 81       	ldd	r23, Z+1	; 0x01
 30c:	82 81       	ldd	r24, Z+2	; 0x02
 30e:	93 81       	ldd	r25, Z+3	; 0x03
 310:	97 01       	movw	r18, r14
 312:	2c 5f       	subi	r18, 0xFC	; 252
 314:	3f 4f       	sbci	r19, 0xFF	; 255
 316:	09 c0       	rjmp	.+18     	; 0x32a <vfprintf+0x23e>
 318:	60 81       	ld	r22, Z
 31a:	71 81       	ldd	r23, Z+1	; 0x01
 31c:	07 2e       	mov	r0, r23
 31e:	00 0c       	add	r0, r0
 320:	88 0b       	sbc	r24, r24
 322:	99 0b       	sbc	r25, r25
 324:	97 01       	movw	r18, r14
 326:	2e 5f       	subi	r18, 0xFE	; 254
 328:	3f 4f       	sbci	r19, 0xFF	; 255
 32a:	79 01       	movw	r14, r18
 32c:	1f 76       	andi	r17, 0x6F	; 111
 32e:	31 2e       	mov	r3, r17
 330:	97 ff       	sbrs	r25, 7
 332:	0a c0       	rjmp	.+20     	; 0x348 <vfprintf+0x25c>
 334:	90 95       	com	r25
 336:	80 95       	com	r24
 338:	70 95       	com	r23
 33a:	61 95       	neg	r22
 33c:	7f 4f       	sbci	r23, 0xFF	; 255
 33e:	8f 4f       	sbci	r24, 0xFF	; 255
 340:	9f 4f       	sbci	r25, 0xFF	; 255
 342:	31 2f       	mov	r19, r17
 344:	30 68       	ori	r19, 0x80	; 128
 346:	33 2e       	mov	r3, r19
 348:	2a e0       	ldi	r18, 0x0A	; 10
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	ae 01       	movw	r20, r28
 34e:	4f 5f       	subi	r20, 0xFF	; 255
 350:	5f 4f       	sbci	r21, 0xFF	; 255
 352:	0e 94 9a 02 	call	0x534	; 0x534 <__ultoa_invert>
 356:	48 2e       	mov	r4, r24
 358:	4c 85       	ldd	r20, Y+12	; 0x0c
 35a:	44 1a       	sub	r4, r20
 35c:	4a c0       	rjmp	.+148    	; 0x3f2 <vfprintf+0x306>
 35e:	85 37       	cpi	r24, 0x75	; 117
 360:	29 f4       	brne	.+10     	; 0x36c <vfprintf+0x280>
 362:	1f 7e       	andi	r17, 0xEF	; 239
 364:	a1 2e       	mov	r10, r17
 366:	2a e0       	ldi	r18, 0x0A	; 10
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	25 c0       	rjmp	.+74     	; 0x3b6 <vfprintf+0x2ca>
 36c:	51 2f       	mov	r21, r17
 36e:	59 7f       	andi	r21, 0xF9	; 249
 370:	a5 2e       	mov	r10, r21
 372:	8f 36       	cpi	r24, 0x6F	; 111
 374:	c1 f0       	breq	.+48     	; 0x3a6 <vfprintf+0x2ba>
 376:	18 f4       	brcc	.+6      	; 0x37e <vfprintf+0x292>
 378:	88 35       	cpi	r24, 0x58	; 88
 37a:	79 f0       	breq	.+30     	; 0x39a <vfprintf+0x2ae>
 37c:	bd c0       	rjmp	.+378    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 37e:	80 37       	cpi	r24, 0x70	; 112
 380:	19 f0       	breq	.+6      	; 0x388 <vfprintf+0x29c>
 382:	88 37       	cpi	r24, 0x78	; 120
 384:	21 f0       	breq	.+8      	; 0x38e <vfprintf+0x2a2>
 386:	b8 c0       	rjmp	.+368    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 388:	85 2f       	mov	r24, r21
 38a:	80 61       	ori	r24, 0x10	; 16
 38c:	a8 2e       	mov	r10, r24
 38e:	a4 fe       	sbrs	r10, 4
 390:	0d c0       	rjmp	.+26     	; 0x3ac <vfprintf+0x2c0>
 392:	9a 2d       	mov	r25, r10
 394:	94 60       	ori	r25, 0x04	; 4
 396:	a9 2e       	mov	r10, r25
 398:	09 c0       	rjmp	.+18     	; 0x3ac <vfprintf+0x2c0>
 39a:	14 ff       	sbrs	r17, 4
 39c:	0a c0       	rjmp	.+20     	; 0x3b2 <vfprintf+0x2c6>
 39e:	a5 2f       	mov	r26, r21
 3a0:	a6 60       	ori	r26, 0x06	; 6
 3a2:	aa 2e       	mov	r10, r26
 3a4:	06 c0       	rjmp	.+12     	; 0x3b2 <vfprintf+0x2c6>
 3a6:	28 e0       	ldi	r18, 0x08	; 8
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	05 c0       	rjmp	.+10     	; 0x3b6 <vfprintf+0x2ca>
 3ac:	20 e1       	ldi	r18, 0x10	; 16
 3ae:	30 e0       	ldi	r19, 0x00	; 0
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <vfprintf+0x2ca>
 3b2:	20 e1       	ldi	r18, 0x10	; 16
 3b4:	32 e0       	ldi	r19, 0x02	; 2
 3b6:	f7 01       	movw	r30, r14
 3b8:	a7 fe       	sbrs	r10, 7
 3ba:	08 c0       	rjmp	.+16     	; 0x3cc <vfprintf+0x2e0>
 3bc:	60 81       	ld	r22, Z
 3be:	71 81       	ldd	r23, Z+1	; 0x01
 3c0:	82 81       	ldd	r24, Z+2	; 0x02
 3c2:	93 81       	ldd	r25, Z+3	; 0x03
 3c4:	a7 01       	movw	r20, r14
 3c6:	4c 5f       	subi	r20, 0xFC	; 252
 3c8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ca:	07 c0       	rjmp	.+14     	; 0x3da <vfprintf+0x2ee>
 3cc:	60 81       	ld	r22, Z
 3ce:	71 81       	ldd	r23, Z+1	; 0x01
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	a7 01       	movw	r20, r14
 3d6:	4e 5f       	subi	r20, 0xFE	; 254
 3d8:	5f 4f       	sbci	r21, 0xFF	; 255
 3da:	7a 01       	movw	r14, r20
 3dc:	ae 01       	movw	r20, r28
 3de:	4f 5f       	subi	r20, 0xFF	; 255
 3e0:	5f 4f       	sbci	r21, 0xFF	; 255
 3e2:	0e 94 9a 02 	call	0x534	; 0x534 <__ultoa_invert>
 3e6:	48 2e       	mov	r4, r24
 3e8:	5c 85       	ldd	r21, Y+12	; 0x0c
 3ea:	45 1a       	sub	r4, r21
 3ec:	8a 2d       	mov	r24, r10
 3ee:	8f 77       	andi	r24, 0x7F	; 127
 3f0:	38 2e       	mov	r3, r24
 3f2:	36 fe       	sbrs	r3, 6
 3f4:	0d c0       	rjmp	.+26     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f6:	93 2d       	mov	r25, r3
 3f8:	9e 7f       	andi	r25, 0xFE	; 254
 3fa:	a9 2e       	mov	r10, r25
 3fc:	4b 14       	cp	r4, r11
 3fe:	58 f4       	brcc	.+22     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 400:	34 fe       	sbrs	r3, 4
 402:	0b c0       	rjmp	.+22     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 404:	32 fc       	sbrc	r3, 2
 406:	09 c0       	rjmp	.+18     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 408:	a3 2d       	mov	r26, r3
 40a:	ae 7e       	andi	r26, 0xEE	; 238
 40c:	aa 2e       	mov	r10, r26
 40e:	05 c0       	rjmp	.+10     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 410:	14 2d       	mov	r17, r4
 412:	a3 2c       	mov	r10, r3
 414:	03 c0       	rjmp	.+6      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 416:	14 2d       	mov	r17, r4
 418:	01 c0       	rjmp	.+2      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 41a:	1b 2d       	mov	r17, r11
 41c:	a4 fe       	sbrs	r10, 4
 41e:	0e c0       	rjmp	.+28     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 420:	fe 01       	movw	r30, r28
 422:	e4 0d       	add	r30, r4
 424:	f1 1d       	adc	r31, r1
 426:	80 81       	ld	r24, Z
 428:	80 33       	cpi	r24, 0x30	; 48
 42a:	21 f4       	brne	.+8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42c:	ea 2d       	mov	r30, r10
 42e:	e9 7e       	andi	r30, 0xE9	; 233
 430:	ae 2e       	mov	r10, r30
 432:	08 c0       	rjmp	.+16     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 434:	a2 fe       	sbrs	r10, 2
 436:	05 c0       	rjmp	.+10     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 438:	1e 5f       	subi	r17, 0xFE	; 254
 43a:	04 c0       	rjmp	.+8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43c:	8a 2d       	mov	r24, r10
 43e:	86 78       	andi	r24, 0x86	; 134
 440:	09 f0       	breq	.+2      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 442:	1f 5f       	subi	r17, 0xFF	; 255
 444:	a3 fc       	sbrc	r10, 3
 446:	11 c0       	rjmp	.+34     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 448:	a0 fe       	sbrs	r10, 0
 44a:	06 c0       	rjmp	.+12     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 44c:	10 17       	cp	r17, r16
 44e:	88 f4       	brcc	.+34     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 450:	04 0d       	add	r16, r4
 452:	b0 2e       	mov	r11, r16
 454:	b1 1a       	sub	r11, r17
 456:	0e c0       	rjmp	.+28     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 458:	10 17       	cp	r17, r16
 45a:	60 f4       	brcc	.+24     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 45c:	b6 01       	movw	r22, r12
 45e:	80 e2       	ldi	r24, 0x20	; 32
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 466:	1f 5f       	subi	r17, 0xFF	; 255
 468:	f7 cf       	rjmp	.-18     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 46a:	10 17       	cp	r17, r16
 46c:	18 f4       	brcc	.+6      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 46e:	01 1b       	sub	r16, r17
 470:	02 c0       	rjmp	.+4      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 472:	b4 2c       	mov	r11, r4
 474:	00 e0       	ldi	r16, 0x00	; 0
 476:	a4 fe       	sbrs	r10, 4
 478:	10 c0       	rjmp	.+32     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 47a:	b6 01       	movw	r22, r12
 47c:	80 e3       	ldi	r24, 0x30	; 48
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 484:	a2 fe       	sbrs	r10, 2
 486:	17 c0       	rjmp	.+46     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 488:	a1 fc       	sbrc	r10, 1
 48a:	03 c0       	rjmp	.+6      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48c:	88 e7       	ldi	r24, 0x78	; 120
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	02 c0       	rjmp	.+4      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 492:	88 e5       	ldi	r24, 0x58	; 88
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	b6 01       	movw	r22, r12
 498:	0c c0       	rjmp	.+24     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 49a:	8a 2d       	mov	r24, r10
 49c:	86 78       	andi	r24, 0x86	; 134
 49e:	59 f0       	breq	.+22     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4a0:	a1 fe       	sbrs	r10, 1
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a4:	8b e2       	ldi	r24, 0x2B	; 43
 4a6:	01 c0       	rjmp	.+2      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a8:	80 e2       	ldi	r24, 0x20	; 32
 4aa:	a7 fc       	sbrc	r10, 7
 4ac:	8d e2       	ldi	r24, 0x2D	; 45
 4ae:	b6 01       	movw	r22, r12
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 4b6:	4b 14       	cp	r4, r11
 4b8:	38 f4       	brcc	.+14     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4ba:	b6 01       	movw	r22, r12
 4bc:	80 e3       	ldi	r24, 0x30	; 48
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 4c4:	ba 94       	dec	r11
 4c6:	f7 cf       	rjmp	.-18     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4c8:	4a 94       	dec	r4
 4ca:	e1 e0       	ldi	r30, 0x01	; 1
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	ec 0f       	add	r30, r28
 4d0:	fd 1f       	adc	r31, r29
 4d2:	e4 0d       	add	r30, r4
 4d4:	f1 1d       	adc	r31, r1
 4d6:	80 81       	ld	r24, Z
 4d8:	b6 01       	movw	r22, r12
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 4e0:	41 10       	cpse	r4, r1
 4e2:	f2 cf       	rjmp	.-28     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4e4:	00 23       	and	r16, r16
 4e6:	09 f4       	brne	.+2      	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4e8:	30 ce       	rjmp	.-928    	; 0x14a <vfprintf+0x5e>
 4ea:	b6 01       	movw	r22, r12
 4ec:	80 e2       	ldi	r24, 0x20	; 32
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 4f4:	01 50       	subi	r16, 0x01	; 1
 4f6:	f6 cf       	rjmp	.-20     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4f8:	f6 01       	movw	r30, r12
 4fa:	87 81       	ldd	r24, Z+7	; 0x07
 4fc:	90 85       	ldd	r25, Z+8	; 0x08
 4fe:	02 c0       	rjmp	.+4      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 500:	8f ef       	ldi	r24, 0xFF	; 255
 502:	9f ef       	ldi	r25, 0xFF	; 255
 504:	62 96       	adiw	r28, 0x12	; 18
 506:	0f b6       	in	r0, 0x3f	; 63
 508:	f8 94       	cli
 50a:	de bf       	out	0x3e, r29	; 62
 50c:	0f be       	out	0x3f, r0	; 63
 50e:	cd bf       	out	0x3d, r28	; 61
 510:	df 91       	pop	r29
 512:	cf 91       	pop	r28
 514:	1f 91       	pop	r17
 516:	0f 91       	pop	r16
 518:	ff 90       	pop	r15
 51a:	ef 90       	pop	r14
 51c:	df 90       	pop	r13
 51e:	cf 90       	pop	r12
 520:	bf 90       	pop	r11
 522:	af 90       	pop	r10
 524:	9f 90       	pop	r9
 526:	8f 90       	pop	r8
 528:	7f 90       	pop	r7
 52a:	6f 90       	pop	r6
 52c:	4f 90       	pop	r4
 52e:	3f 90       	pop	r3
 530:	2f 90       	pop	r2
 532:	08 95       	ret

Disassembly of section .text.avrlibc:

00000a8e <strnlen>:
 a8e:	cf 92       	push	r12
 a90:	df 92       	push	r13
 a92:	ef 92       	push	r14
 a94:	6b 01       	movw	r12, r22
 a96:	e8 2e       	mov	r14, r24
 a98:	a8 2f       	mov	r26, r24
 a9a:	cb 01       	movw	r24, r22
 a9c:	41 15       	cp	r20, r1
 a9e:	51 05       	cpc	r21, r1
 aa0:	31 f4       	brne	.+12     	; 0xaae <strnlen+0x20>
 aa2:	8c 19       	sub	r24, r12
 aa4:	9d 09       	sbc	r25, r13
 aa6:	ef 90       	pop	r14
 aa8:	df 90       	pop	r13
 aaa:	cf 90       	pop	r12
 aac:	08 95       	ret
 aae:	fc 01       	movw	r30, r24
 ab0:	24 91       	lpm	r18, Z
 ab2:	a7 fd       	sbrc	r26, 7
 ab4:	20 81       	ld	r18, Z
 ab6:	22 23       	and	r18, r18
 ab8:	a1 f3       	breq	.-24     	; 0xaa2 <strnlen+0x14>
 aba:	01 96       	adiw	r24, 0x01	; 1
 abc:	a1 1d       	adc	r26, r1
 abe:	41 50       	subi	r20, 0x01	; 1
 ac0:	51 09       	sbc	r21, r1
 ac2:	ec cf       	rjmp	.-40     	; 0xa9c <strnlen+0xe>

Disassembly of section .text.avrlibc:

0000072c <fputc>:
 72c:	0f 93       	push	r16
 72e:	1f 93       	push	r17
 730:	cf 93       	push	r28
 732:	df 93       	push	r29
 734:	fb 01       	movw	r30, r22
 736:	24 81       	ldd	r18, Z+4	; 0x04
 738:	21 fd       	sbrc	r18, 1
 73a:	03 c0       	rjmp	.+6      	; 0x742 <fputc+0x16>
 73c:	8f ef       	ldi	r24, 0xFF	; 255
 73e:	9f ef       	ldi	r25, 0xFF	; 255
 740:	2c c0       	rjmp	.+88     	; 0x79a <fputc+0x6e>
 742:	22 ff       	sbrs	r18, 2
 744:	16 c0       	rjmp	.+44     	; 0x772 <fputc+0x46>
 746:	47 81       	ldd	r20, Z+7	; 0x07
 748:	50 85       	ldd	r21, Z+8	; 0x08
 74a:	25 81       	ldd	r18, Z+5	; 0x05
 74c:	36 81       	ldd	r19, Z+6	; 0x06
 74e:	42 17       	cp	r20, r18
 750:	53 07       	cpc	r21, r19
 752:	44 f4       	brge	.+16     	; 0x764 <fputc+0x38>
 754:	a0 81       	ld	r26, Z
 756:	b1 81       	ldd	r27, Z+1	; 0x01
 758:	9d 01       	movw	r18, r26
 75a:	2f 5f       	subi	r18, 0xFF	; 255
 75c:	3f 4f       	sbci	r19, 0xFF	; 255
 75e:	31 83       	std	Z+1, r19	; 0x01
 760:	20 83       	st	Z, r18
 762:	8c 93       	st	X, r24
 764:	27 81       	ldd	r18, Z+7	; 0x07
 766:	30 85       	ldd	r19, Z+8	; 0x08
 768:	2f 5f       	subi	r18, 0xFF	; 255
 76a:	3f 4f       	sbci	r19, 0xFF	; 255
 76c:	30 87       	std	Z+8, r19	; 0x08
 76e:	27 83       	std	Z+7, r18	; 0x07
 770:	14 c0       	rjmp	.+40     	; 0x79a <fputc+0x6e>
 772:	8b 01       	movw	r16, r22
 774:	ec 01       	movw	r28, r24
 776:	fb 01       	movw	r30, r22
 778:	01 84       	ldd	r0, Z+9	; 0x09
 77a:	f2 85       	ldd	r31, Z+10	; 0x0a
 77c:	e0 2d       	mov	r30, r0
 77e:	09 95       	icall
 780:	89 2b       	or	r24, r25
 782:	e1 f6       	brne	.-72     	; 0x73c <fputc+0x10>
 784:	d8 01       	movw	r26, r16
 786:	17 96       	adiw	r26, 0x07	; 7
 788:	8d 91       	ld	r24, X+
 78a:	9c 91       	ld	r25, X
 78c:	18 97       	sbiw	r26, 0x08	; 8
 78e:	01 96       	adiw	r24, 0x01	; 1
 790:	18 96       	adiw	r26, 0x08	; 8
 792:	9c 93       	st	X, r25
 794:	8e 93       	st	-X, r24
 796:	17 97       	sbiw	r26, 0x07	; 7
 798:	ce 01       	movw	r24, r28
 79a:	df 91       	pop	r29
 79c:	cf 91       	pop	r28
 79e:	1f 91       	pop	r17
 7a0:	0f 91       	pop	r16
 7a2:	08 95       	ret

Disassembly of section .text.avrlibc:

00000534 <__ultoa_invert>:
 534:	fa 01       	movw	r30, r20
 536:	aa 27       	eor	r26, r26
 538:	28 30       	cpi	r18, 0x08	; 8
 53a:	51 f1       	breq	.+84     	; 0x590 <__ultoa_invert+0x5c>
 53c:	20 31       	cpi	r18, 0x10	; 16
 53e:	81 f1       	breq	.+96     	; 0x5a0 <__ultoa_invert+0x6c>
 540:	e8 94       	clt
 542:	6f 93       	push	r22
 544:	6e 7f       	andi	r22, 0xFE	; 254
 546:	6e 5f       	subi	r22, 0xFE	; 254
 548:	7f 4f       	sbci	r23, 0xFF	; 255
 54a:	8f 4f       	sbci	r24, 0xFF	; 255
 54c:	9f 4f       	sbci	r25, 0xFF	; 255
 54e:	af 4f       	sbci	r26, 0xFF	; 255
 550:	b1 e0       	ldi	r27, 0x01	; 1
 552:	3e d0       	rcall	.+124    	; 0x5d0 <__ultoa_invert+0x9c>
 554:	b4 e0       	ldi	r27, 0x04	; 4
 556:	3c d0       	rcall	.+120    	; 0x5d0 <__ultoa_invert+0x9c>
 558:	67 0f       	add	r22, r23
 55a:	78 1f       	adc	r23, r24
 55c:	89 1f       	adc	r24, r25
 55e:	9a 1f       	adc	r25, r26
 560:	a1 1d       	adc	r26, r1
 562:	68 0f       	add	r22, r24
 564:	79 1f       	adc	r23, r25
 566:	8a 1f       	adc	r24, r26
 568:	91 1d       	adc	r25, r1
 56a:	a1 1d       	adc	r26, r1
 56c:	6a 0f       	add	r22, r26
 56e:	71 1d       	adc	r23, r1
 570:	81 1d       	adc	r24, r1
 572:	91 1d       	adc	r25, r1
 574:	a1 1d       	adc	r26, r1
 576:	20 d0       	rcall	.+64     	; 0x5b8 <__ultoa_invert+0x84>
 578:	09 f4       	brne	.+2      	; 0x57c <__ultoa_invert+0x48>
 57a:	68 94       	set
 57c:	3f 91       	pop	r19
 57e:	2a e0       	ldi	r18, 0x0A	; 10
 580:	26 9f       	mul	r18, r22
 582:	11 24       	eor	r1, r1
 584:	30 19       	sub	r19, r0
 586:	30 5d       	subi	r19, 0xD0	; 208
 588:	31 93       	st	Z+, r19
 58a:	de f6       	brtc	.-74     	; 0x542 <__ultoa_invert+0xe>
 58c:	cf 01       	movw	r24, r30
 58e:	08 95       	ret
 590:	46 2f       	mov	r20, r22
 592:	47 70       	andi	r20, 0x07	; 7
 594:	40 5d       	subi	r20, 0xD0	; 208
 596:	41 93       	st	Z+, r20
 598:	b3 e0       	ldi	r27, 0x03	; 3
 59a:	0f d0       	rcall	.+30     	; 0x5ba <__ultoa_invert+0x86>
 59c:	c9 f7       	brne	.-14     	; 0x590 <__ultoa_invert+0x5c>
 59e:	f6 cf       	rjmp	.-20     	; 0x58c <__ultoa_invert+0x58>
 5a0:	46 2f       	mov	r20, r22
 5a2:	4f 70       	andi	r20, 0x0F	; 15
 5a4:	40 5d       	subi	r20, 0xD0	; 208
 5a6:	4a 33       	cpi	r20, 0x3A	; 58
 5a8:	18 f0       	brcs	.+6      	; 0x5b0 <__ultoa_invert+0x7c>
 5aa:	49 5d       	subi	r20, 0xD9	; 217
 5ac:	31 fd       	sbrc	r19, 1
 5ae:	40 52       	subi	r20, 0x20	; 32
 5b0:	41 93       	st	Z+, r20
 5b2:	02 d0       	rcall	.+4      	; 0x5b8 <__ultoa_invert+0x84>
 5b4:	a9 f7       	brne	.-22     	; 0x5a0 <__ultoa_invert+0x6c>
 5b6:	ea cf       	rjmp	.-44     	; 0x58c <__ultoa_invert+0x58>
 5b8:	b4 e0       	ldi	r27, 0x04	; 4
 5ba:	a6 95       	lsr	r26
 5bc:	97 95       	ror	r25
 5be:	87 95       	ror	r24
 5c0:	77 95       	ror	r23
 5c2:	67 95       	ror	r22
 5c4:	ba 95       	dec	r27
 5c6:	c9 f7       	brne	.-14     	; 0x5ba <__ultoa_invert+0x86>
 5c8:	00 97       	sbiw	r24, 0x00	; 0
 5ca:	61 05       	cpc	r22, r1
 5cc:	71 05       	cpc	r23, r1
 5ce:	08 95       	ret
 5d0:	9b 01       	movw	r18, r22
 5d2:	ac 01       	movw	r20, r24
 5d4:	0a 2e       	mov	r0, r26
 5d6:	06 94       	lsr	r0
 5d8:	57 95       	ror	r21
 5da:	47 95       	ror	r20
 5dc:	37 95       	ror	r19
 5de:	27 95       	ror	r18
 5e0:	ba 95       	dec	r27
 5e2:	c9 f7       	brne	.-14     	; 0x5d6 <__ultoa_invert+0xa2>
 5e4:	62 0f       	add	r22, r18
 5e6:	73 1f       	adc	r23, r19
 5e8:	84 1f       	adc	r24, r20
 5ea:	95 1f       	adc	r25, r21
 5ec:	a0 1d       	adc	r26, r0
 5ee:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00000a56 <__prologue_saves__>:
 a56:	2f 92       	push	r2
 a58:	3f 92       	push	r3
 a5a:	4f 92       	push	r4
 a5c:	5f 92       	push	r5
 a5e:	6f 92       	push	r6
 a60:	7f 92       	push	r7
 a62:	8f 92       	push	r8
 a64:	9f 92       	push	r9
 a66:	af 92       	push	r10
 a68:	bf 92       	push	r11
 a6a:	cf 92       	push	r12
 a6c:	df 92       	push	r13
 a6e:	ef 92       	push	r14
 a70:	ff 92       	push	r15
 a72:	0f 93       	push	r16
 a74:	1f 93       	push	r17
 a76:	cf 93       	push	r28
 a78:	df 93       	push	r29
 a7a:	cd b7       	in	r28, 0x3d	; 61
 a7c:	de b7       	in	r29, 0x3e	; 62
 a7e:	ca 1b       	sub	r28, r26
 a80:	db 0b       	sbc	r29, r27
 a82:	0f b6       	in	r0, 0x3f	; 63
 a84:	f8 94       	cli
 a86:	de bf       	out	0x3e, r29	; 62
 a88:	0f be       	out	0x3f, r0	; 63
 a8a:	cd bf       	out	0x3d, r28	; 61
 a8c:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00000ac4 <__epilogue_restores__>:
 ac4:	2a 88       	ldd	r2, Y+18	; 0x12
 ac6:	39 88       	ldd	r3, Y+17	; 0x11
 ac8:	48 88       	ldd	r4, Y+16	; 0x10
 aca:	5f 84       	ldd	r5, Y+15	; 0x0f
 acc:	6e 84       	ldd	r6, Y+14	; 0x0e
 ace:	7d 84       	ldd	r7, Y+13	; 0x0d
 ad0:	8c 84       	ldd	r8, Y+12	; 0x0c
 ad2:	9b 84       	ldd	r9, Y+11	; 0x0b
 ad4:	aa 84       	ldd	r10, Y+10	; 0x0a
 ad6:	b9 84       	ldd	r11, Y+9	; 0x09
 ad8:	c8 84       	ldd	r12, Y+8	; 0x08
 ada:	df 80       	ldd	r13, Y+7	; 0x07
 adc:	ee 80       	ldd	r14, Y+6	; 0x06
 ade:	fd 80       	ldd	r15, Y+5	; 0x05
 ae0:	0c 81       	ldd	r16, Y+4	; 0x04
 ae2:	1b 81       	ldd	r17, Y+3	; 0x03
 ae4:	aa 81       	ldd	r26, Y+2	; 0x02
 ae6:	b9 81       	ldd	r27, Y+1	; 0x01
 ae8:	ce 0f       	add	r28, r30
 aea:	d1 1d       	adc	r29, r1
 aec:	0f b6       	in	r0, 0x3f	; 63
 aee:	f8 94       	cli
 af0:	de bf       	out	0x3e, r29	; 62
 af2:	0f be       	out	0x3f, r0	; 63
 af4:	cd bf       	out	0x3d, r28	; 61
 af6:	ed 01       	movw	r28, r26
 af8:	08 95       	ret
