
methane_sensor_v1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001b2e  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000258  00800100  00800100  00001b2e  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00001b2e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000003f8  00000000  00000000  00001b89  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00005666  00000000  00000000  00001f81  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000015ef  00000000  00000000  000075e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001e1b  00000000  00000000  00008bd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000a54  00000000  00000000  0000a9f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004fd  00000000  00000000  0000b448  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001c3e  00000000  00000000  0000b945  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000318  00000000  00000000  0000d583  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00001ab6  00001ab6  00001b2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000d89c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.__vector_3 00000014  00001a38  00001a38  00001aac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.rn2483_init 00000008  00001a92  00001a92  00001b06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.rn2483_reset_active 00000008  00001a9a  00001a9a  00001b0e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.rn2483_reset_deactive 00000008  00001aa2  00001aa2  00001b16  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_16 0000004e  00001438  00001438  000014ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss._cb      00000002  00800524  00800524  00001b2e  2**0
                  ALLOC
 20 .text.__vector_13 0000004e  00001486  00001486  000014fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .bss._cb      00000002  00800526  00800526  00001b2e  2**0
                  ALLOC
 22 .text.TC2_HAL_init 00000020  000019c4  000019c4  00001a38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.__vector_9 00000098  00001032  00001032  000010a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .bss.cnt      00000001  00800528  00800528  00001b2e  2**0
                  ALLOC
 25 .bss.callbacks 0000000a  0080051a  0080051a  00001b2e  2**0
                  ALLOC
 26 .text.copy_buffer 0000002e  00001942  00001942  000019b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.uart0_hal_init 0000003c  00001760  00001760  000017d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.uart0_hal_send_string 0000006a  000012b0  000012b0  00001324  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.uart0_hal_message_ready 0000000e  00001a4c  00001a4c  00001ac0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.uart0_hal_clear_rx_buffer 0000000a  00001a7e  00001a7e  00001af2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.uart0_hal_read_message_as_str 00000028  0000199c  0000199c  00001a10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.__vector_22 0000004a  00001522  00001522  00001596  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__vector_20 00000074  000011cc  000011cc  00001240  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .bss.rx_buffer_has_message 00000001  00800529  00800529  00001b2e  2**0
                  ALLOC
 35 .bss.rx_buffer_data_len 00000001  0080052a  0080052a  00001b2e  2**0
                  ALLOC
 36 .bss.tx_buffer_cursor 00000001  0080052b  0080052b  00001b2e  2**0
                  ALLOC
 37 .bss.tx_buffer_data_len 00000001  0080052c  0080052c  00001b2e  2**0
                  ALLOC
 38 .text.uart1_hal_init 0000003c  0000179c  0000179c  00001810  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.uart1_hal_send_string 0000008a  000010ca  000010ca  0000113e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.__vector_30 0000004a  0000156c  0000156c  000015e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.__vector_28 00000070  00001240  00001240  000012b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .bss.rx_buffer_has_message 00000001  0080052d  0080052d  00001b2e  2**0
                  ALLOC
 43 .bss.rx_buffer_data_len 00000001  0080052e  0080052e  00001b2e  2**0
                  ALLOC
 44 .bss.rx_buffer 00000096  00800484  00800484  00001b2e  2**0
                  ALLOC
 45 .bss.tx_buffer_cursor 00000001  0080052f  0080052f  00001b2e  2**0
                  ALLOC
 46 .bss.tx_buffer_data_len 00000001  00800530  00800530  00001b2e  2**0
                  ALLOC
 47 .bss.tx_buffer 0000012c  00800358  00800358  00001b2e  2**0
                  ALLOC
 48 .text.main    0000000a  00001a88  00001a88  00001afc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .progmemx.data 00000058  000002ca  000002ca  0000033e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 50 .text.parse_err 00000058  000013e0  000013e0  00001454  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.JN_join_network 000002a4  00000a6e  00000a6e  00000ae2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.LM_join_network 00000006  00001aaa  00001aaa  00001b1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .progmemx.data 00000073  000001ea  000001ea  0000025e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 54 .text.attach_ending 0000001c  00001a02  00001a02  00001a76  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.cmd_with_ending 00000032  0000187c  0000187c  000018f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.mac_set_parameter 0000004e  000014d4  000014d4  00001548  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.mac_set_deveui 00000048  00001600  00001600  00001674  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.mac_set_appeui 00000048  00001648  00001648  000016bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.mac_set_appkey 00000048  00001690  00001690  00001704  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.mac_set_ADR 00000030  00001912  00001912  00001986  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.util_setPendingStates 0000000c  00001a5a  00001a5a  00001ace  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.util_setMatchCase 0000000c  00001a66  00001a66  00001ada  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.util_strbeginswith 0000004a  000015b6  000015b6  0000162a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.util_matchMessage 0000005c  00001384  00001384  000013f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .progmemx.data 0000006d  0000025d  0000025d  000002d1  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 66 .text.test_join_network 000000b4  00000f7e  00000f7e  00000ff2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.test_LORA_module_start 00000032  000018ae  000018ae  00001922  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.test_runner 00000006  00001ab0  00001ab0  00001b24  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .progmemx.data 00000008  00000322  00000322  00000396  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 70 .text.avrlibc 00000744  0000032a  0000032a  0000039e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.libgcc  0000000c  00001a72  00001a72  00001ae6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.libgcc.prologue 00000038  000017d8  000017d8  0000184c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.libgcc.prologue 00000036  00001810  00001810  00001884  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.libgcc  0000001a  00001a1e  00001a1e  00001a92  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.avrlibc 000001b0  00000d12  00000d12  00000d86  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.avrlibc 00000032  000018e0  000018e0  00001954  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.avrlibc 00000042  0000171e  0000171e  00001792  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.avrlibc 0000006a  0000131a  0000131a  0000138e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.avrlibc 0000002c  00001970  00001970  000019e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.avrlibc 0000001e  000019e4  000019e4  00001a58  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.avrlibc 00000036  00001846  00001846  000018ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.avrlibc 00000078  00001154  00001154  000011c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.avrlibc 00000046  000016d8  000016d8  0000174c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.avrlibc 000000bc  00000ec2  00000ec2  00000f36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 cb 00 	jmp	0x196	; 0x196 <__ctors_end>
   4:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
   8:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
   c:	0c 94 1c 0d 	jmp	0x1a38	; 0x1a38 <__vector_3>
  10:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  14:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  18:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  1c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  20:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  24:	0c 94 19 08 	jmp	0x1032	; 0x1032 <__vector_9>
  28:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  2c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  30:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  34:	0c 94 43 0a 	jmp	0x1486	; 0x1486 <__vector_13>
  38:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  3c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  40:	0c 94 1c 0a 	jmp	0x1438	; 0x1438 <__vector_16>
  44:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  48:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  4c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  50:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__vector_20>
  54:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  58:	0c 94 91 0a 	jmp	0x1522	; 0x1522 <__vector_22>
  5c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  60:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  64:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  68:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  6c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  70:	0c 94 20 09 	jmp	0x1240	; 0x1240 <__vector_28>
  74:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__bad_interrupt>
  78:	0c 94 b6 0a 	jmp	0x156c	; 0x156c <__vector_30>
  7c:	55 05       	cpc	r21, r5
  7e:	65 06       	cpc	r6, r21
  80:	74 05       	cpc	r23, r4
  82:	92 05       	cpc	r25, r2
  84:	b2 05       	cpc	r27, r2
  86:	d2 05       	cpc	r29, r2
  88:	f2 05       	cpc	r31, r2
  8a:	12 06       	cpc	r1, r18
  8c:	30 06       	cpc	r3, r16
  8e:	4e 06       	cpc	r4, r30
  90:	60 06       	cpc	r6, r16
  92:	76 06       	cpc	r7, r22
  94:	78 06       	cpc	r7, r24

00000096 <.dinit>:
  96:	01 00       	.word	0x0001	; ????
  98:	05 31       	cpi	r16, 0x15	; 21
  9a:	80 00       	.word	0x0080	; ????

0000009c <__trampolines_end>:
  9c:	00 40       	sbci	r16, 0x00	; 0
  9e:	7a 10       	cpse	r7, r10
  a0:	f3 5a       	subi	r31, 0xA3	; 163
  a2:	00 a0       	ldd	r0, Z+32	; 0x20
  a4:	72 4e       	sbci	r23, 0xE2	; 226
  a6:	18 09       	sbc	r17, r8
  a8:	00 10       	cpse	r0, r0
  aa:	a5 d4       	rcall	.+2378   	; 0x9f6 <__EEPROM_REGION_LENGTH__+0x1f6>
  ac:	e8 00       	.word	0x00e8	; ????
  ae:	00 e8       	ldi	r16, 0x80	; 128
  b0:	76 48       	sbci	r23, 0x86	; 134
  b2:	17 00       	.word	0x0017	; ????
  b4:	00 e4       	ldi	r16, 0x40	; 64
  b6:	0b 54       	subi	r16, 0x4B	; 75
  b8:	02 00       	.word	0x0002	; ????
  ba:	00 ca       	rjmp	.-3072   	; 0xfffff4bc <__eeprom_end+0xff7ef4bc>
  bc:	9a 3b       	cpi	r25, 0xBA	; 186
  be:	00 00       	nop
  c0:	00 e1       	ldi	r16, 0x10	; 16
  c2:	f5 05       	cpc	r31, r5
  c4:	00 00       	nop
  c6:	80 96       	adiw	r24, 0x20	; 32
  c8:	98 00       	.word	0x0098	; ????
  ca:	00 00       	nop
  cc:	40 42       	sbci	r20, 0x20	; 32
  ce:	0f 00       	.word	0x000f	; ????
  d0:	00 00       	nop
  d2:	a0 86       	std	Z+8, r10	; 0x08
  d4:	01 00       	.word	0x0001	; ????
  d6:	00 00       	nop
  d8:	10 27       	eor	r17, r16
  da:	00 00       	nop
  dc:	00 00       	nop
  de:	e8 03       	fmulsu	r22, r16
  e0:	00 00       	nop
  e2:	00 00       	nop
  e4:	64 00       	.word	0x0064	; ????
  e6:	00 00       	nop
  e8:	00 00       	nop
  ea:	0a 00       	.word	0x000a	; ????
  ec:	00 00       	nop
  ee:	00 00       	nop
  f0:	01 00       	.word	0x0001	; ????
  f2:	00 00       	nop
  f4:	00 00       	nop
  f6:	2c 76       	andi	r18, 0x6C	; 108
  f8:	d8 88       	ldd	r13, Y+16	; 0x10
  fa:	dc 67       	ori	r29, 0x7C	; 124
  fc:	4f 08       	sbc	r4, r15
  fe:	23 df       	rcall	.-442    	; 0xffffff46 <__eeprom_end+0xff7eff46>
 100:	c1 df       	rcall	.-126    	; 0x84 <__SREG__+0x45>
 102:	ae 59       	subi	r26, 0x9E	; 158
 104:	e1 b1       	in	r30, 0x01	; 1
 106:	b7 96       	adiw	r30, 0x27	; 39
 108:	e5 e3       	ldi	r30, 0x35	; 53
 10a:	e4 53       	subi	r30, 0x34	; 52
 10c:	c6 3a       	cpi	r28, 0xA6	; 166
 10e:	e6 51       	subi	r30, 0x16	; 22
 110:	99 76       	andi	r25, 0x69	; 105
 112:	96 e8       	ldi	r25, 0x86	; 134
 114:	e6 c2       	rjmp	.+1484   	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 116:	84 26       	eor	r8, r20
 118:	eb 89       	ldd	r30, Y+19	; 0x13
 11a:	8c 9b       	sbis	0x11, 4	; 17
 11c:	62 ed       	ldi	r22, 0xD2	; 210
 11e:	40 7c       	andi	r20, 0xC0	; 192
 120:	6f fc       	.word	0xfc6f	; ????
 122:	ef bc       	out	0x2f, r14	; 47
 124:	9c 9f       	mul	r25, r28
 126:	40 f2       	brcs	.-112    	; 0xb8 <__trampolines_end+0x1c>
 128:	ba a5       	ldd	r27, Y+42	; 0x2a
 12a:	6f a5       	ldd	r22, Y+47	; 0x2f
 12c:	f4 90       	lpm	r15, Z
 12e:	05 5a       	subi	r16, 0xA5	; 165
 130:	2a f7       	brpl	.-54     	; 0xfc <__trampolines_end+0x60>
 132:	5c 93       	st	X, r21
 134:	6b 6c       	ori	r22, 0xCB	; 203
 136:	f9 67       	ori	r31, 0x79	; 121
 138:	6d c1       	rjmp	.+730    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 13a:	1b fc       	.word	0xfc1b	; ????
 13c:	e0 e4       	ldi	r30, 0x40	; 64
 13e:	0d 47       	sbci	r16, 0x7D	; 125
 140:	fe f5       	brtc	.+126    	; 0x1c0 <__do_copy_data+0x1e>
 142:	20 e6       	ldi	r18, 0x60	; 96
 144:	b5 00       	.word	0x00b5	; ????
 146:	d0 ed       	ldi	r29, 0xD0	; 208
 148:	90 2e       	mov	r9, r16
 14a:	03 00       	.word	0x0003	; ????
 14c:	94 35       	cpi	r25, 0x54	; 84
 14e:	77 05       	cpc	r23, r7
 150:	00 80       	ld	r0, Z
 152:	84 1e       	adc	r8, r20
 154:	08 00       	.word	0x0008	; ????
 156:	00 20       	and	r0, r0
 158:	4e 0a       	sbc	r4, r30
 15a:	00 00       	nop
 15c:	00 c8       	rjmp	.-4096   	; 0xfffff15e <__eeprom_end+0xff7ef15e>
 15e:	0c 33       	cpi	r16, 0x3C	; 60
 160:	33 33       	cpi	r19, 0x33	; 51
 162:	33 0f       	add	r19, r19
 164:	98 6e       	ori	r25, 0xE8	; 232
 166:	12 83       	std	Z+2, r17	; 0x02
 168:	11 41       	sbci	r17, 0x11	; 17
 16a:	ef 8d       	ldd	r30, Y+31	; 0x1f
 16c:	21 14       	cp	r2, r1
 16e:	89 3b       	cpi	r24, 0xB9	; 185
 170:	e6 55       	subi	r30, 0x56	; 86
 172:	16 cf       	rjmp	.-468    	; 0xffffffa0 <__eeprom_end+0xff7effa0>
 174:	fe e6       	ldi	r31, 0x6E	; 110
 176:	db 18       	sub	r13, r11
 178:	d1 84       	ldd	r13, Z+9	; 0x09
 17a:	4b 38       	cpi	r20, 0x8B	; 139
 17c:	1b f7       	brvc	.-58     	; 0x144 <__trampolines_end+0xa8>
 17e:	7c 1d       	adc	r23, r12
 180:	90 1d       	adc	r25, r0
 182:	a4 bb       	out	0x14, r26	; 20
 184:	e4 24       	eor	r14, r4
 186:	20 32       	cpi	r18, 0x20	; 32
 188:	84 72       	andi	r24, 0x24	; 36
 18a:	5e 22       	and	r5, r30
 18c:	81 00       	.word	0x0081	; ????
 18e:	c9 f1       	breq	.+114    	; 0x202 <_etext+0x18>
 190:	24 ec       	ldi	r18, 0xC4	; 196
 192:	a1 e5       	ldi	r26, 0x51	; 81
 194:	3d 27       	eor	r19, r29

00000196 <__ctors_end>:
 196:	11 24       	eor	r1, r1
 198:	1f be       	out	0x3f, r1	; 63
 19a:	cf ef       	ldi	r28, 0xFF	; 255
 19c:	d0 e1       	ldi	r29, 0x10	; 16
 19e:	de bf       	out	0x3e, r29	; 62
 1a0:	cd bf       	out	0x3d, r28	; 61

000001a2 <__do_copy_data>:
 1a2:	e6 e9       	ldi	r30, 0x96	; 150
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	40 e0       	ldi	r20, 0x00	; 0
 1a8:	17 c0       	rjmp	.+46     	; 0x1d8 <__do_clear_bss+0x8>
 1aa:	b5 91       	lpm	r27, Z+
 1ac:	a5 91       	lpm	r26, Z+
 1ae:	35 91       	lpm	r19, Z+
 1b0:	25 91       	lpm	r18, Z+
 1b2:	05 91       	lpm	r16, Z+
 1b4:	07 fd       	sbrc	r16, 7
 1b6:	0c c0       	rjmp	.+24     	; 0x1d0 <__do_clear_bss>
 1b8:	95 91       	lpm	r25, Z+
 1ba:	85 91       	lpm	r24, Z+
 1bc:	ef 01       	movw	r28, r30
 1be:	f9 2f       	mov	r31, r25
 1c0:	e8 2f       	mov	r30, r24
 1c2:	05 90       	lpm	r0, Z+
 1c4:	0d 92       	st	X+, r0
 1c6:	a2 17       	cp	r26, r18
 1c8:	b3 07       	cpc	r27, r19
 1ca:	d9 f7       	brne	.-10     	; 0x1c2 <__do_copy_data+0x20>
 1cc:	fe 01       	movw	r30, r28
 1ce:	04 c0       	rjmp	.+8      	; 0x1d8 <__do_clear_bss+0x8>

000001d0 <__do_clear_bss>:
 1d0:	1d 92       	st	X+, r1
 1d2:	a2 17       	cp	r26, r18
 1d4:	b3 07       	cpc	r27, r19
 1d6:	e1 f7       	brne	.-8      	; 0x1d0 <__do_clear_bss>
 1d8:	eb 39       	cpi	r30, 0x9B	; 155
 1da:	f4 07       	cpc	r31, r20
 1dc:	31 f7       	brne	.-52     	; 0x1aa <__do_copy_data+0x8>
 1de:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <main>
 1e2:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <_exit>

000001e6 <_exit>:
 1e6:	f8 94       	cli

000001e8 <__stop_program>:
 1e8:	ff cf       	rjmp	.-2      	; 0x1e8 <__stop_program>

Disassembly of section .text:

00001ab6 <__bad_interrupt>:
    1ab6:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.__vector_3:

00001a38 <__vector_3>:
	sleep_cpu();
	sleep_disable();
	clear_bit(EIMSK, 2);
}

ISR(INT2_vect){
    1a38:	1f 92       	push	r1
    1a3a:	0f 92       	push	r0
    1a3c:	0f b6       	in	r0, 0x3f	; 63
    1a3e:	0f 92       	push	r0
    1a40:	11 24       	eor	r1, r1
	
}
    1a42:	0f 90       	pop	r0
    1a44:	0f be       	out	0x3f, r0	; 63
    1a46:	0f 90       	pop	r0
    1a48:	1f 90       	pop	r1
    1a4a:	18 95       	reti

Disassembly of section .text.rn2483_init:

00001a92 <rn2483_init>:

#include "RN2483_HAL.h"
#include "../../util/bit_operators.h"

void rn2483_init(){
	set_bit(RN2483_DDR, RN2483_PIN);
    1a92:	84 b1       	in	r24, 0x04	; 4
    1a94:	80 61       	ori	r24, 0x10	; 16
    1a96:	84 b9       	out	0x04, r24	; 4
    1a98:	08 95       	ret

Disassembly of section .text.rn2483_reset_active:

00001a9a <rn2483_reset_active>:
}

void rn2483_reset_active(){
	clear_bit(RN2483_PORT, RN2483_PIN);
    1a9a:	85 b1       	in	r24, 0x05	; 5
    1a9c:	8f 7e       	andi	r24, 0xEF	; 239
    1a9e:	85 b9       	out	0x05, r24	; 5
    1aa0:	08 95       	ret

Disassembly of section .text.rn2483_reset_deactive:

00001aa2 <rn2483_reset_deactive>:
}

void rn2483_reset_deactive(){
	set_bit(RN2483_PORT, RN2483_PIN);
    1aa2:	85 b1       	in	r24, 0x05	; 5
    1aa4:	80 61       	ori	r24, 0x10	; 16
    1aa6:	85 b9       	out	0x05, r24	; 5
    1aa8:	08 95       	ret

Disassembly of section .text.__vector_16:

00001438 <__vector_16>:

void TC0_HAL_stop(){
	TCCR0B=0x00; 
}

ISR(TIMER0_COMPA_vect){
    1438:	1f 92       	push	r1
    143a:	0f 92       	push	r0
    143c:	0f b6       	in	r0, 0x3f	; 63
    143e:	0f 92       	push	r0
    1440:	11 24       	eor	r1, r1
    1442:	2f 93       	push	r18
    1444:	3f 93       	push	r19
    1446:	4f 93       	push	r20
    1448:	5f 93       	push	r21
    144a:	6f 93       	push	r22
    144c:	7f 93       	push	r23
    144e:	8f 93       	push	r24
    1450:	9f 93       	push	r25
    1452:	af 93       	push	r26
    1454:	bf 93       	push	r27
    1456:	ef 93       	push	r30
    1458:	ff 93       	push	r31
	_cb();
    145a:	e0 91 24 05 	lds	r30, 0x0524	; 0x800524 <_cb>
    145e:	f0 91 25 05 	lds	r31, 0x0525	; 0x800525 <_cb+0x1>
    1462:	09 95       	icall
}
    1464:	ff 91       	pop	r31
    1466:	ef 91       	pop	r30
    1468:	bf 91       	pop	r27
    146a:	af 91       	pop	r26
    146c:	9f 91       	pop	r25
    146e:	8f 91       	pop	r24
    1470:	7f 91       	pop	r23
    1472:	6f 91       	pop	r22
    1474:	5f 91       	pop	r21
    1476:	4f 91       	pop	r20
    1478:	3f 91       	pop	r19
    147a:	2f 91       	pop	r18
    147c:	0f 90       	pop	r0
    147e:	0f be       	out	0x3f, r0	; 63
    1480:	0f 90       	pop	r0
    1482:	1f 90       	pop	r1
    1484:	18 95       	reti

Disassembly of section .text.__vector_13:

00001486 <__vector_13>:

void TC1_HAL_stop(){
	clear_byte(TCCR1B, 0b00000111);
}

ISR(TIMER1_COMPA_vect){
    1486:	1f 92       	push	r1
    1488:	0f 92       	push	r0
    148a:	0f b6       	in	r0, 0x3f	; 63
    148c:	0f 92       	push	r0
    148e:	11 24       	eor	r1, r1
    1490:	2f 93       	push	r18
    1492:	3f 93       	push	r19
    1494:	4f 93       	push	r20
    1496:	5f 93       	push	r21
    1498:	6f 93       	push	r22
    149a:	7f 93       	push	r23
    149c:	8f 93       	push	r24
    149e:	9f 93       	push	r25
    14a0:	af 93       	push	r26
    14a2:	bf 93       	push	r27
    14a4:	ef 93       	push	r30
    14a6:	ff 93       	push	r31
	_cb();
    14a8:	e0 91 26 05 	lds	r30, 0x0526	; 0x800526 <_cb>
    14ac:	f0 91 27 05 	lds	r31, 0x0527	; 0x800527 <_cb+0x1>
    14b0:	09 95       	icall
    14b2:	ff 91       	pop	r31
    14b4:	ef 91       	pop	r30
    14b6:	bf 91       	pop	r27
    14b8:	af 91       	pop	r26
    14ba:	9f 91       	pop	r25
    14bc:	8f 91       	pop	r24
    14be:	7f 91       	pop	r23
    14c0:	6f 91       	pop	r22
    14c2:	5f 91       	pop	r21
    14c4:	4f 91       	pop	r20
    14c6:	3f 91       	pop	r19
    14c8:	2f 91       	pop	r18
    14ca:	0f 90       	pop	r0
    14cc:	0f be       	out	0x3f, r0	; 63
    14ce:	0f 90       	pop	r0
    14d0:	1f 90       	pop	r1
    14d2:	18 95       	reti

Disassembly of section .text.TC2_HAL_init:

000019c4 <TC2_HAL_init>:
static callback_ptr callbacks[MAX_CALLBACKS];
static uint8_t cbCounter=0;
static uint8_t cnt=0;

void TC2_HAL_init(){
	TCCR2A=0x02; //Set mode=CTC
    19c4:	82 e0       	ldi	r24, 0x02	; 2
    19c6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f00b0>
	TCCR2B=0x00; //Stop timer
    19ca:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f00b1>
	
	//Disable async
	ASSR=0x00;
    19ce:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7f00b6>
	
	TCNT2=0; //Set counter to 0
    19d2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f00b2>
	OCR2A=251; //15 Hz, 31 event pr s
    19d6:	9b ef       	ldi	r25, 0xFB	; 251
    19d8:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f00b3>
	
	//Enable interrupt
	TIMSK2=0x02;
    19dc:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f0070>
	sei();
    19e0:	78 94       	sei
    19e2:	08 95       	ret

Disassembly of section .text.__vector_9:

00001032 <__vector_9>:
static void start_timer(){
	TCCR2B=0x07;
}

static void stop_timer(){
	TCCR2B=0x00;
    1032:	1f 92       	push	r1
    1034:	0f 92       	push	r0
    1036:	0f b6       	in	r0, 0x3f	; 63
    1038:	0f 92       	push	r0
    103a:	11 24       	eor	r1, r1
    103c:	2f 93       	push	r18
    103e:	3f 93       	push	r19
    1040:	4f 93       	push	r20
    1042:	5f 93       	push	r21
    1044:	6f 93       	push	r22
    1046:	7f 93       	push	r23
    1048:	8f 93       	push	r24
    104a:	9f 93       	push	r25
    104c:	af 93       	push	r26
    104e:	bf 93       	push	r27
    1050:	cf 93       	push	r28
    1052:	ef 93       	push	r30
    1054:	ff 93       	push	r31
    1056:	90 91 28 05 	lds	r25, 0x0528	; 0x800528 <cnt>
    105a:	9f 5f       	subi	r25, 0xFF	; 255
    105c:	90 93 28 05 	sts	0x0528, r25	; 0x800528 <cnt>
    1060:	89 e0       	ldi	r24, 0x09	; 9
    1062:	98 9f       	mul	r25, r24
    1064:	21 2d       	mov	r18, r1
    1066:	11 24       	eor	r1, r1
    1068:	89 2f       	mov	r24, r25
    106a:	82 1b       	sub	r24, r18
    106c:	86 95       	lsr	r24
    106e:	82 0f       	add	r24, r18
    1070:	82 95       	swap	r24
    1072:	8f 70       	andi	r24, 0x0F	; 15
    1074:	2f e1       	ldi	r18, 0x1F	; 31
    1076:	82 9f       	mul	r24, r18
    1078:	90 19       	sub	r25, r0
    107a:	11 24       	eor	r1, r1
    107c:	91 11       	cpse	r25, r1
    107e:	13 c0       	rjmp	.+38     	; 0x10a6 <__vector_9+0x74>
    1080:	10 92 28 05 	sts	0x0528, r1	; 0x800528 <cnt>
    1084:	c0 e0       	ldi	r28, 0x00	; 0
    1086:	0d c0       	rjmp	.+26     	; 0x10a2 <__vector_9+0x70>
    1088:	ec 2f       	mov	r30, r28
    108a:	f0 e0       	ldi	r31, 0x00	; 0
    108c:	ee 0f       	add	r30, r30
    108e:	ff 1f       	adc	r31, r31
    1090:	e6 5e       	subi	r30, 0xE6	; 230
    1092:	fa 4f       	sbci	r31, 0xFA	; 250
    1094:	01 90       	ld	r0, Z+
    1096:	f0 81       	ld	r31, Z
    1098:	e0 2d       	mov	r30, r0
    109a:	30 97       	sbiw	r30, 0x00	; 0
    109c:	09 f0       	breq	.+2      	; 0x10a0 <__vector_9+0x6e>
    109e:	09 95       	icall
    10a0:	cf 5f       	subi	r28, 0xFF	; 255
    10a2:	c5 30       	cpi	r28, 0x05	; 5
    10a4:	88 f3       	brcs	.-30     	; 0x1088 <__vector_9+0x56>
    10a6:	ff 91       	pop	r31
    10a8:	ef 91       	pop	r30
    10aa:	cf 91       	pop	r28
    10ac:	bf 91       	pop	r27
    10ae:	af 91       	pop	r26
    10b0:	9f 91       	pop	r25
    10b2:	8f 91       	pop	r24
    10b4:	7f 91       	pop	r23
    10b6:	6f 91       	pop	r22
    10b8:	5f 91       	pop	r21
    10ba:	4f 91       	pop	r20
    10bc:	3f 91       	pop	r19
    10be:	2f 91       	pop	r18
    10c0:	0f 90       	pop	r0
    10c2:	0f be       	out	0x3f, r0	; 63
    10c4:	0f 90       	pop	r0
    10c6:	1f 90       	pop	r1
    10c8:	18 95       	reti

Disassembly of section .text.copy_buffer:

00001942 <copy_buffer>:
uint8_t uart0_hal_read_message(uint8_t msg[]){
	copy_buffer(msg);
	uint8_t len= rx_buffer_data_len-2;
	uart0_hal_clear_rx_buffer();
	return len;
}
    1942:	bc 01       	movw	r22, r24
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	09 c0       	rjmp	.+18     	; 0x195a <copy_buffer+0x18>
    1948:	fb 01       	movw	r30, r22
    194a:	e9 0f       	add	r30, r25
    194c:	f1 1d       	adc	r31, r1
    194e:	da 01       	movw	r26, r20
    1950:	a0 50       	subi	r26, 0x00	; 0
    1952:	bf 4f       	sbci	r27, 0xFF	; 255
    1954:	2c 91       	ld	r18, X
    1956:	20 83       	st	Z, r18
    1958:	9f 5f       	subi	r25, 0xFF	; 255
    195a:	49 2f       	mov	r20, r25
    195c:	50 e0       	ldi	r21, 0x00	; 0
    195e:	20 91 2a 05 	lds	r18, 0x052A	; 0x80052a <rx_buffer_data_len>
    1962:	30 e0       	ldi	r19, 0x00	; 0
    1964:	22 50       	subi	r18, 0x02	; 2
    1966:	31 09       	sbc	r19, r1
    1968:	42 17       	cp	r20, r18
    196a:	53 07       	cpc	r21, r19
    196c:	6c f3       	brlt	.-38     	; 0x1948 <copy_buffer+0x6>
    196e:	08 95       	ret

Disassembly of section .text.uart0_hal_init:

00001760 <uart0_hal_init>:
    1760:	e1 ec       	ldi	r30, 0xC1	; 193
    1762:	f0 e0       	ldi	r31, 0x00	; 0
    1764:	80 81       	ld	r24, Z
    1766:	80 61       	ori	r24, 0x10	; 16
    1768:	80 83       	st	Z, r24
    176a:	80 81       	ld	r24, Z
    176c:	88 60       	ori	r24, 0x08	; 8
    176e:	80 83       	st	Z, r24
    1770:	80 81       	ld	r24, Z
    1772:	80 68       	ori	r24, 0x80	; 128
    1774:	80 83       	st	Z, r24
    1776:	80 81       	ld	r24, Z
    1778:	80 64       	ori	r24, 0x40	; 64
    177a:	80 83       	st	Z, r24
    177c:	e0 ec       	ldi	r30, 0xC0	; 192
    177e:	f0 e0       	ldi	r31, 0x00	; 0
    1780:	80 81       	ld	r24, Z
    1782:	82 60       	ori	r24, 0x02	; 2
    1784:	80 83       	st	Z, r24
    1786:	86 e0       	ldi	r24, 0x06	; 6
    1788:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f00c2>
    178c:	80 e1       	ldi	r24, 0x10	; 16
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f00c5>
    1794:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f00c4>
    1798:	78 94       	sei
    179a:	08 95       	ret

Disassembly of section .text.uart0_hal_send_string:

000012b0 <uart0_hal_send_string>:
    12b0:	cf 92       	push	r12
    12b2:	df 92       	push	r13
    12b4:	ef 92       	push	r14
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	cf 93       	push	r28
    12bc:	6b 01       	movw	r12, r22
    12be:	e8 2e       	mov	r14, r24
    12c0:	c0 e0       	ldi	r28, 0x00	; 0
    12c2:	12 c0       	rjmp	.+36     	; 0x12e8 <uart0_hal_send_string+0x38>
    12c4:	8c 2f       	mov	r24, r28
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	4e 2d       	mov	r20, r14
    12ca:	96 01       	movw	r18, r12
    12cc:	20 0f       	add	r18, r16
    12ce:	31 1f       	adc	r19, r17
    12d0:	41 1d       	adc	r20, r1
    12d2:	17 fd       	sbrc	r17, 7
    12d4:	4a 95       	dec	r20
    12d6:	f9 01       	movw	r30, r18
    12d8:	24 91       	lpm	r18, Z
    12da:	47 fd       	sbrc	r20, 7
    12dc:	20 81       	ld	r18, Z
    12de:	fc 01       	movw	r30, r24
    12e0:	ec 59       	subi	r30, 0x9C	; 156
    12e2:	fe 4f       	sbci	r31, 0xFE	; 254
    12e4:	20 83       	st	Z, r18
    12e6:	cf 5f       	subi	r28, 0xFF	; 255
    12e8:	0c 2f       	mov	r16, r28
    12ea:	10 e0       	ldi	r17, 0x00	; 0
    12ec:	8e 2d       	mov	r24, r14
    12ee:	b6 01       	movw	r22, r12
    12f0:	0e 94 b8 0c 	call	0x1970	; 0x1970 <strlen>
    12f4:	08 17       	cp	r16, r24
    12f6:	19 07       	cpc	r17, r25
    12f8:	28 f3       	brcs	.-54     	; 0x12c4 <uart0_hal_send_string+0x14>
    12fa:	80 93 2c 05 	sts	0x052C, r24	; 0x80052c <tx_buffer_data_len>
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	80 93 2b 05 	sts	0x052B, r24	; 0x80052b <tx_buffer_cursor>
    1304:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <tx_buffer>
    1308:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
    130c:	cf 91       	pop	r28
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	ef 90       	pop	r14
    1314:	df 90       	pop	r13
    1316:	cf 90       	pop	r12
    1318:	08 95       	ret

Disassembly of section .text.uart0_hal_message_ready:

00001a4c <uart0_hal_message_ready>:
	tx_buffer_cursor=1;
	UDR0=tx_buffer[0];
}

bool uart0_hal_message_ready(){
	return rx_buffer_has_message>0;
    1a4c:	90 91 29 05 	lds	r25, 0x0529	; 0x800529 <rx_buffer_has_message>
    1a50:	81 e0       	ldi	r24, 0x01	; 1
    1a52:	91 11       	cpse	r25, r1
    1a54:	01 c0       	rjmp	.+2      	; 0x1a58 <uart0_hal_message_ready+0xc>
    1a56:	80 e0       	ldi	r24, 0x00	; 0
}
    1a58:	08 95       	ret

Disassembly of section .text.uart0_hal_clear_rx_buffer:

00001a7e <uart0_hal_clear_rx_buffer>:
	uart0_hal_clear_rx_buffer();
	return len;
}

void uart0_hal_clear_rx_buffer(){
	rx_buffer_has_message=0;
    1a7e:	10 92 29 05 	sts	0x0529, r1	; 0x800529 <rx_buffer_has_message>
	rx_buffer_data_len=0;
    1a82:	10 92 2a 05 	sts	0x052A, r1	; 0x80052a <rx_buffer_data_len>
    1a86:	08 95       	ret

Disassembly of section .text.uart0_hal_read_message_as_str:

0000199c <uart0_hal_read_message_as_str>:
	return len;
}



uint8_t uart0_hal_read_message_as_str(char msg[]){
    199c:	0f 93       	push	r16
    199e:	1f 93       	push	r17
    19a0:	cf 93       	push	r28
    19a2:	8c 01       	movw	r16, r24
	copy_buffer((uint8_t *) msg);
    19a4:	0e 94 a1 0c 	call	0x1942	; 0x1942 <copy_buffer>
	uint8_t len= rx_buffer_data_len-2;
    19a8:	c0 91 2a 05 	lds	r28, 0x052A	; 0x80052a <rx_buffer_data_len>
    19ac:	c2 50       	subi	r28, 0x02	; 2
	msg[len]='\0';
    19ae:	f8 01       	movw	r30, r16
    19b0:	ec 0f       	add	r30, r28
    19b2:	f1 1d       	adc	r31, r1
    19b4:	10 82       	st	Z, r1
	uart0_hal_clear_rx_buffer();
    19b6:	0e 94 3f 0d 	call	0x1a7e	; 0x1a7e <uart0_hal_clear_rx_buffer>
	return len;
}
    19ba:	8c 2f       	mov	r24, r28
    19bc:	cf 91       	pop	r28
    19be:	1f 91       	pop	r17
    19c0:	0f 91       	pop	r16
    19c2:	08 95       	ret

Disassembly of section .text.__vector_22:

00001522 <__vector_22>:
uint8_t uart0_hal_read_message(uint8_t msg[]){
	copy_buffer(msg);
	uint8_t len= rx_buffer_data_len-2;
	uart0_hal_clear_rx_buffer();
	return len;
}
    1522:	1f 92       	push	r1
    1524:	0f 92       	push	r0
    1526:	0f b6       	in	r0, 0x3f	; 63
    1528:	0f 92       	push	r0
    152a:	11 24       	eor	r1, r1
    152c:	8f 93       	push	r24
    152e:	ef 93       	push	r30
    1530:	ff 93       	push	r31
    1532:	e0 91 2b 05 	lds	r30, 0x052B	; 0x80052b <tx_buffer_cursor>
    1536:	80 91 2c 05 	lds	r24, 0x052C	; 0x80052c <tx_buffer_data_len>
    153a:	e8 17       	cp	r30, r24
    153c:	58 f4       	brcc	.+22     	; 0x1554 <__vector_22+0x32>
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	8e 0f       	add	r24, r30
    1542:	80 93 2b 05 	sts	0x052B, r24	; 0x80052b <tx_buffer_cursor>
    1546:	f0 e0       	ldi	r31, 0x00	; 0
    1548:	ec 59       	subi	r30, 0x9C	; 156
    154a:	fe 4f       	sbci	r31, 0xFE	; 254
    154c:	80 81       	ld	r24, Z
    154e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
    1552:	04 c0       	rjmp	.+8      	; 0x155c <__vector_22+0x3a>
    1554:	10 92 2b 05 	sts	0x052B, r1	; 0x80052b <tx_buffer_cursor>
    1558:	10 92 2c 05 	sts	0x052C, r1	; 0x80052c <tx_buffer_data_len>
    155c:	ff 91       	pop	r31
    155e:	ef 91       	pop	r30
    1560:	8f 91       	pop	r24
    1562:	0f 90       	pop	r0
    1564:	0f be       	out	0x3f, r0	; 63
    1566:	0f 90       	pop	r0
    1568:	1f 90       	pop	r1
    156a:	18 95       	reti

Disassembly of section .text.__vector_20:

000011cc <__vector_20>:
    11cc:	1f 92       	push	r1
    11ce:	0f 92       	push	r0
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	0f 92       	push	r0
    11d4:	11 24       	eor	r1, r1
    11d6:	2f 93       	push	r18
    11d8:	8f 93       	push	r24
    11da:	9f 93       	push	r25
    11dc:	ef 93       	push	r30
    11de:	ff 93       	push	r31
    11e0:	80 91 29 05 	lds	r24, 0x0529	; 0x800529 <rx_buffer_has_message>
    11e4:	81 11       	cpse	r24, r1
    11e6:	0e c0       	rjmp	.+28     	; 0x1204 <__vector_20+0x38>
    11e8:	e0 91 2a 05 	lds	r30, 0x052A	; 0x80052a <rx_buffer_data_len>
    11ec:	e4 36       	cpi	r30, 0x64	; 100
    11ee:	50 f4       	brcc	.+20     	; 0x1204 <__vector_20+0x38>
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	8e 0f       	add	r24, r30
    11f4:	80 93 2a 05 	sts	0x052A, r24	; 0x80052a <rx_buffer_data_len>
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
    11fe:	e0 50       	subi	r30, 0x00	; 0
    1200:	ff 4f       	sbci	r31, 0xFF	; 255
    1202:	80 83       	st	Z, r24
    1204:	80 91 2a 05 	lds	r24, 0x052A	; 0x80052a <rx_buffer_data_len>
    1208:	83 30       	cpi	r24, 0x03	; 3
    120a:	80 f0       	brcs	.+32     	; 0x122c <__vector_20+0x60>
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	fc 01       	movw	r30, r24
    1210:	e1 50       	subi	r30, 0x01	; 1
    1212:	ff 4f       	sbci	r31, 0xFF	; 255
    1214:	20 81       	ld	r18, Z
    1216:	2a 30       	cpi	r18, 0x0A	; 10
    1218:	49 f4       	brne	.+18     	; 0x122c <__vector_20+0x60>
    121a:	fc 01       	movw	r30, r24
    121c:	e2 50       	subi	r30, 0x02	; 2
    121e:	ff 4f       	sbci	r31, 0xFF	; 255
    1220:	80 81       	ld	r24, Z
    1222:	8d 30       	cpi	r24, 0x0D	; 13
    1224:	19 f4       	brne	.+6      	; 0x122c <__vector_20+0x60>
    1226:	81 e0       	ldi	r24, 0x01	; 1
    1228:	80 93 29 05 	sts	0x0529, r24	; 0x800529 <rx_buffer_has_message>
    122c:	ff 91       	pop	r31
    122e:	ef 91       	pop	r30
    1230:	9f 91       	pop	r25
    1232:	8f 91       	pop	r24
    1234:	2f 91       	pop	r18
    1236:	0f 90       	pop	r0
    1238:	0f be       	out	0x3f, r0	; 63
    123a:	0f 90       	pop	r0
    123c:	1f 90       	pop	r1
    123e:	18 95       	reti

Disassembly of section .text.uart1_hal_init:

0000179c <uart1_hal_init>:
static uint8_t rx_buffer[UART1_RX_BUFF_LENGTH];
static uint8_t rx_buffer_data_len=0;
static uint8_t rx_buffer_has_message=0;

void uart1_hal_init(){
	set_bit(UCSR1B, 4); //Enable Rx
    179c:	e9 ec       	ldi	r30, 0xC9	; 201
    179e:	f0 e0       	ldi	r31, 0x00	; 0
    17a0:	80 81       	ld	r24, Z
    17a2:	80 61       	ori	r24, 0x10	; 16
    17a4:	80 83       	st	Z, r24
	set_bit(UCSR1B, 3); //Enable Tx
    17a6:	80 81       	ld	r24, Z
    17a8:	88 60       	ori	r24, 0x08	; 8
    17aa:	80 83       	st	Z, r24
	set_bit(UCSR1B, 7); //interrupt Rx complete
    17ac:	80 81       	ld	r24, Z
    17ae:	80 68       	ori	r24, 0x80	; 128
    17b0:	80 83       	st	Z, r24
	set_bit(UCSR1B, 6); //interrupt Tx complete
    17b2:	80 81       	ld	r24, Z
    17b4:	80 64       	ori	r24, 0x40	; 64
    17b6:	80 83       	st	Z, r24
	set_bit(UCSR1A, 1); //Set double speed
    17b8:	e8 ec       	ldi	r30, 0xC8	; 200
    17ba:	f0 e0       	ldi	r31, 0x00	; 0
    17bc:	80 81       	ld	r24, Z
    17be:	82 60       	ori	r24, 0x02	; 2
    17c0:	80 83       	st	Z, r24
	UCSR1C = 0b00000110; //Async, none parity, 1 stop bit, 8 databit
    17c2:	86 e0       	ldi	r24, 0x06	; 6
    17c4:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7f00ca>
	UBRR1=(8000000/(8*57600))-1; //set baudrate
    17c8:	80 e1       	ldi	r24, 0x10	; 16
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f00cd>
    17d0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f00cc>
	sei();
    17d4:	78 94       	sei
    17d6:	08 95       	ret

Disassembly of section .text.uart1_hal_send_string:

000010ca <uart1_hal_send_string>:
static void copy_buffer(uint8_t msg[]){
	for (uint8_t i=0; i<rx_buffer_data_len-2; i++)
	{
		msg[i]=rx_buffer[i];
	}
}
    10ca:	6f 92       	push	r6
    10cc:	7f 92       	push	r7
    10ce:	8f 92       	push	r8
    10d0:	cf 92       	push	r12
    10d2:	df 92       	push	r13
    10d4:	ef 92       	push	r14
    10d6:	3b 01       	movw	r6, r22
    10d8:	88 2e       	mov	r8, r24
    10da:	80 91 30 05 	lds	r24, 0x0530	; 0x800530 <tx_buffer_data_len>
    10de:	81 11       	cpse	r24, r1
    10e0:	fc cf       	rjmp	.-8      	; 0x10da <uart1_hal_send_string+0x10>
    10e2:	88 2d       	mov	r24, r8
    10e4:	b3 01       	movw	r22, r6
    10e6:	0e 94 b8 0c 	call	0x1970	; 0x1970 <strlen>
    10ea:	bc 01       	movw	r22, r24
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	12 c0       	rjmp	.+36     	; 0x1114 <__stack+0x15>
    10f0:	29 2f       	mov	r18, r25
    10f2:	30 e0       	ldi	r19, 0x00	; 0
    10f4:	e8 2c       	mov	r14, r8
    10f6:	63 01       	movw	r12, r6
    10f8:	c4 0e       	add	r12, r20
    10fa:	d5 1e       	adc	r13, r21
    10fc:	e1 1c       	adc	r14, r1
    10fe:	57 fd       	sbrc	r21, 7
    1100:	ea 94       	dec	r14
    1102:	f6 01       	movw	r30, r12
    1104:	44 91       	lpm	r20, Z
    1106:	e7 fc       	sbrc	r14, 7
    1108:	40 81       	ld	r20, Z
    110a:	f9 01       	movw	r30, r18
    110c:	e8 5a       	subi	r30, 0xA8	; 168
    110e:	fc 4f       	sbci	r31, 0xFC	; 252
    1110:	40 83       	st	Z, r20
    1112:	9f 5f       	subi	r25, 0xFF	; 255
    1114:	49 2f       	mov	r20, r25
    1116:	50 e0       	ldi	r21, 0x00	; 0
    1118:	46 17       	cp	r20, r22
    111a:	57 07       	cpc	r21, r23
    111c:	48 f3       	brcs	.-46     	; 0x10f0 <uart1_hal_send_string+0x26>
    111e:	fb 01       	movw	r30, r22
    1120:	e8 5a       	subi	r30, 0xA8	; 168
    1122:	fc 4f       	sbci	r31, 0xFC	; 252
    1124:	8d e0       	ldi	r24, 0x0D	; 13
    1126:	80 83       	st	Z, r24
    1128:	fb 01       	movw	r30, r22
    112a:	e7 5a       	subi	r30, 0xA7	; 167
    112c:	fc 4f       	sbci	r31, 0xFC	; 252
    112e:	8a e0       	ldi	r24, 0x0A	; 10
    1130:	80 83       	st	Z, r24
    1132:	6e 5f       	subi	r22, 0xFE	; 254
    1134:	60 93 30 05 	sts	0x0530, r22	; 0x800530 <tx_buffer_data_len>
    1138:	81 e0       	ldi	r24, 0x01	; 1
    113a:	80 93 2f 05 	sts	0x052F, r24	; 0x80052f <tx_buffer_cursor>
    113e:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <_end>
    1142:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    1146:	ef 90       	pop	r14
    1148:	df 90       	pop	r13
    114a:	cf 90       	pop	r12
    114c:	8f 90       	pop	r8
    114e:	7f 90       	pop	r7
    1150:	6f 90       	pop	r6
    1152:	08 95       	ret

Disassembly of section .text.__vector_30:

0000156c <__vector_30>:
    156c:	1f 92       	push	r1
    156e:	0f 92       	push	r0
    1570:	0f b6       	in	r0, 0x3f	; 63
    1572:	0f 92       	push	r0
    1574:	11 24       	eor	r1, r1
    1576:	8f 93       	push	r24
    1578:	ef 93       	push	r30
    157a:	ff 93       	push	r31
    157c:	e0 91 2f 05 	lds	r30, 0x052F	; 0x80052f <tx_buffer_cursor>
    1580:	80 91 30 05 	lds	r24, 0x0530	; 0x800530 <tx_buffer_data_len>
    1584:	e8 17       	cp	r30, r24
    1586:	58 f4       	brcc	.+22     	; 0x159e <__vector_30+0x32>
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	8e 0f       	add	r24, r30
    158c:	80 93 2f 05 	sts	0x052F, r24	; 0x80052f <tx_buffer_cursor>
    1590:	f0 e0       	ldi	r31, 0x00	; 0
    1592:	e8 5a       	subi	r30, 0xA8	; 168
    1594:	fc 4f       	sbci	r31, 0xFC	; 252
    1596:	80 81       	ld	r24, Z
    1598:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    159c:	04 c0       	rjmp	.+8      	; 0x15a6 <__vector_30+0x3a>
    159e:	10 92 2f 05 	sts	0x052F, r1	; 0x80052f <tx_buffer_cursor>
    15a2:	10 92 30 05 	sts	0x0530, r1	; 0x800530 <tx_buffer_data_len>
    15a6:	ff 91       	pop	r31
    15a8:	ef 91       	pop	r30
    15aa:	8f 91       	pop	r24
    15ac:	0f 90       	pop	r0
    15ae:	0f be       	out	0x3f, r0	; 63
    15b0:	0f 90       	pop	r0
    15b2:	1f 90       	pop	r1
    15b4:	18 95       	reti

Disassembly of section .text.__vector_28:

00001240 <__vector_28>:
    1240:	1f 92       	push	r1
    1242:	0f 92       	push	r0
    1244:	0f b6       	in	r0, 0x3f	; 63
    1246:	0f 92       	push	r0
    1248:	11 24       	eor	r1, r1
    124a:	2f 93       	push	r18
    124c:	8f 93       	push	r24
    124e:	9f 93       	push	r25
    1250:	ef 93       	push	r30
    1252:	ff 93       	push	r31
    1254:	80 91 2d 05 	lds	r24, 0x052D	; 0x80052d <rx_buffer_has_message>
    1258:	81 11       	cpse	r24, r1
    125a:	0e c0       	rjmp	.+28     	; 0x1278 <__vector_28+0x38>
    125c:	e0 91 2e 05 	lds	r30, 0x052E	; 0x80052e <rx_buffer_data_len>
    1260:	e6 39       	cpi	r30, 0x96	; 150
    1262:	50 f4       	brcc	.+20     	; 0x1278 <__vector_28+0x38>
    1264:	81 e0       	ldi	r24, 0x01	; 1
    1266:	8e 0f       	add	r24, r30
    1268:	80 93 2e 05 	sts	0x052E, r24	; 0x80052e <rx_buffer_data_len>
    126c:	f0 e0       	ldi	r31, 0x00	; 0
    126e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    1272:	ec 57       	subi	r30, 0x7C	; 124
    1274:	fb 4f       	sbci	r31, 0xFB	; 251
    1276:	80 83       	st	Z, r24
    1278:	80 91 2e 05 	lds	r24, 0x052E	; 0x80052e <rx_buffer_data_len>
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	fc 01       	movw	r30, r24
    1280:	ed 57       	subi	r30, 0x7D	; 125
    1282:	fb 4f       	sbci	r31, 0xFB	; 251
    1284:	20 81       	ld	r18, Z
    1286:	2a 30       	cpi	r18, 0x0A	; 10
    1288:	49 f4       	brne	.+18     	; 0x129c <__vector_28+0x5c>
    128a:	fc 01       	movw	r30, r24
    128c:	ee 57       	subi	r30, 0x7E	; 126
    128e:	fb 4f       	sbci	r31, 0xFB	; 251
    1290:	80 81       	ld	r24, Z
    1292:	8d 30       	cpi	r24, 0x0D	; 13
    1294:	19 f4       	brne	.+6      	; 0x129c <__vector_28+0x5c>
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	80 93 2d 05 	sts	0x052D, r24	; 0x80052d <rx_buffer_has_message>
    129c:	ff 91       	pop	r31
    129e:	ef 91       	pop	r30
    12a0:	9f 91       	pop	r25
    12a2:	8f 91       	pop	r24
    12a4:	2f 91       	pop	r18
    12a6:	0f 90       	pop	r0
    12a8:	0f be       	out	0x3f, r0	; 63
    12aa:	0f 90       	pop	r0
    12ac:	1f 90       	pop	r1
    12ae:	18 95       	reti

Disassembly of section .text.main:

00001a88 <main>:
#include "PROGRAMS/MAINPG/MAINPG.h"
#include "PROGRAMS/CONFIG_MODE/CONFIG_MODE.h"

int main(void)
{
	test_runner();
    1a88:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <test_runner>
			//MAINPG_start();
		//}
		//_delay_ms(5000);
        //
    //}
    1a8c:	80 e0       	ldi	r24, 0x00	; 0
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	08 95       	ret

Disassembly of section .text.parse_err:

000013e0 <parse_err>:
	}
	return LM_STATUS_FATAL_ERROR;
}


LM_STATUS parse_err(char *msg){
    13e0:	cf 92       	push	r12
    13e2:	df 92       	push	r13
    13e4:	ef 92       	push	r14
	if(strcmp(msg, NO_FREE_CH)==0){
    13e6:	6c 01       	movw	r12, r24
    13e8:	20 e8       	ldi	r18, 0x80	; 128
    13ea:	e2 2e       	mov	r14, r18
    13ec:	2a ec       	ldi	r18, 0xCA	; 202
    13ee:	32 e0       	ldi	r19, 0x02	; 2
    13f0:	40 e0       	ldi	r20, 0x00	; 0
    13f2:	8e 2d       	mov	r24, r14
    13f4:	b6 01       	movw	r22, r12
    13f6:	0e 94 8f 0b 	call	0x171e	; 0x171e <strcmp>
    13fa:	89 2b       	or	r24, r25
    13fc:	a1 f0       	breq	.+40     	; 0x1426 <parse_err+0x46>
		return LM_STATUS_TRY_AGAIN;
	}
	
	if(strcmp(msg, DENIED)==0){
    13fe:	25 ed       	ldi	r18, 0xD5	; 213
    1400:	32 e0       	ldi	r19, 0x02	; 2
    1402:	40 e0       	ldi	r20, 0x00	; 0
    1404:	8e 2d       	mov	r24, r14
    1406:	b6 01       	movw	r22, r12
    1408:	0e 94 8f 0b 	call	0x171e	; 0x171e <strcmp>
    140c:	89 2b       	or	r24, r25
    140e:	69 f0       	breq	.+26     	; 0x142a <parse_err+0x4a>
		return LM_STATUS_TRY_AGAIN;
	}
	
	if(strcmp(msg, KEYS_NOT_INIT)==0){
    1410:	2c ed       	ldi	r18, 0xDC	; 220
    1412:	32 e0       	ldi	r19, 0x02	; 2
    1414:	40 e0       	ldi	r20, 0x00	; 0
    1416:	8e 2d       	mov	r24, r14
    1418:	b6 01       	movw	r22, r12
    141a:	0e 94 8f 0b 	call	0x171e	; 0x171e <strcmp>
    141e:	89 2b       	or	r24, r25
    1420:	31 f4       	brne	.+12     	; 0x142e <parse_err+0x4e>
		return LM_STATUS_CONF_ERR;
    1422:	83 e0       	ldi	r24, 0x03	; 3
    1424:	05 c0       	rjmp	.+10     	; 0x1430 <parse_err+0x50>
}


LM_STATUS parse_err(char *msg){
	if(strcmp(msg, NO_FREE_CH)==0){
		return LM_STATUS_TRY_AGAIN;
    1426:	82 e0       	ldi	r24, 0x02	; 2
    1428:	03 c0       	rjmp	.+6      	; 0x1430 <parse_err+0x50>
	}
	
	if(strcmp(msg, DENIED)==0){
		return LM_STATUS_TRY_AGAIN;
    142a:	82 e0       	ldi	r24, 0x02	; 2
    142c:	01 c0       	rjmp	.+2      	; 0x1430 <parse_err+0x50>
	
	if(strcmp(msg, KEYS_NOT_INIT)==0){
		return LM_STATUS_CONF_ERR;
	}
	
	return LM_STATUS_FATAL_ERROR;
    142e:	81 e0       	ldi	r24, 0x01	; 1
}
    1430:	ef 90       	pop	r14
    1432:	df 90       	pop	r13
    1434:	cf 90       	pop	r12
    1436:	08 95       	ret

Disassembly of section .text.JN_join_network:

00000a6e <JN_join_network>:
#include "../../../HAL/UART0/UART0_HAL.h"
#include "../util/util.h"

static LM_STATUS parse_err(char *msg);

LM_STATUS JN_join_network(char deveui[], char appeui[], char appkey[]){
 a6e:	af 92       	push	r10
 a70:	bf 92       	push	r11
 a72:	cf 92       	push	r12
 a74:	df 92       	push	r13
 a76:	ef 92       	push	r14
 a78:	ff 92       	push	r15
 a7a:	1f 93       	push	r17
 a7c:	cf 93       	push	r28
 a7e:	df 93       	push	r29
 a80:	cd b7       	in	r28, 0x3d	; 61
 a82:	de b7       	in	r29, 0x3e	; 62
 a84:	28 97       	sbiw	r28, 0x08	; 8
 a86:	0f b6       	in	r0, 0x3f	; 63
 a88:	f8 94       	cli
 a8a:	de bf       	out	0x3e, r29	; 62
 a8c:	0f be       	out	0x3f, r0	; 63
 a8e:	cd bf       	out	0x3d, r28	; 61
 a90:	5c 01       	movw	r10, r24
 a92:	6b 01       	movw	r12, r22
 a94:	7a 01       	movw	r14, r20
	
	JN_STATES state=JN_HW_RESET_RN2483;
 a96:	10 e0       	ldi	r17, 0x00	; 0
	LM_STATE_DATA stateData;
	
	while(1){
		switch(state){
 a98:	e1 2f       	mov	r30, r17
 a9a:	f0 e0       	ldi	r31, 0x00	; 0
 a9c:	ed 30       	cpi	r30, 0x0D	; 13
 a9e:	f1 05       	cpc	r31, r1
 aa0:	d8 f7       	brcc	.-10     	; 0xa98 <JN_join_network+0x2a>
 aa2:	e2 5c       	subi	r30, 0xC2	; 194
 aa4:	ff 4f       	sbci	r31, 0xFF	; 255
 aa6:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__tablejump2__>
			case JN_HW_RESET_RN2483:
				rn2483_reset_active();
 aaa:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <rn2483_reset_active>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 aae:	2f ef       	ldi	r18, 0xFF	; 255
 ab0:	89 e6       	ldi	r24, 0x69	; 105
 ab2:	98 e1       	ldi	r25, 0x18	; 24
 ab4:	21 50       	subi	r18, 0x01	; 1
 ab6:	80 40       	sbci	r24, 0x00	; 0
 ab8:	90 40       	sbci	r25, 0x00	; 0
 aba:	e1 f7       	brne	.-8      	; 0xab4 <JN_join_network+0x46>
 abc:	00 c0       	rjmp	.+0      	; 0xabe <JN_join_network+0x50>
 abe:	00 00       	nop
				_delay_ms(1000);
				rn2483_reset_deactive();
 ac0:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <rn2483_reset_deactive>
				
				util_setPendingStates(&stateData, JN_SOFT_RESET_LORA, JN_JOIN_FATAL_ERROR);
 ac4:	4c e0       	ldi	r20, 0x0C	; 12
 ac6:	50 e0       	ldi	r21, 0x00	; 0
 ac8:	62 e0       	ldi	r22, 0x02	; 2
 aca:	70 e0       	ldi	r23, 0x00	; 0
 acc:	ce 01       	movw	r24, r28
 ace:	01 96       	adiw	r24, 0x01	; 1
 ad0:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_BEGINS_WITH, RN2483);
 ad4:	2a ee       	ldi	r18, 0xEA	; 234
 ad6:	32 e0       	ldi	r19, 0x02	; 2
 ad8:	40 e0       	ldi	r20, 0x00	; 0
 ada:	61 e0       	ldi	r22, 0x01	; 1
 adc:	ce 01       	movw	r24, r28
 ade:	01 96       	adiw	r24, 0x01	; 1
 ae0:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				
				state=JN_WAIT_FOR_INCOMMING;
 ae4:	11 e0       	ldi	r17, 0x01	; 1
			break;
 ae6:	d8 cf       	rjmp	.-80     	; 0xa98 <JN_join_network+0x2a>
			
			case JN_SOFT_RESET_LORA:
				cmd_with_ending(lm_msg, MAC_RESET_TO_868_BAND);
 ae8:	41 ef       	ldi	r20, 0xF1	; 241
 aea:	52 e0       	ldi	r21, 0x02	; 2
 aec:	60 e0       	ldi	r22, 0x00	; 0
 aee:	80 e9       	ldi	r24, 0x90	; 144
 af0:	92 e0       	ldi	r25, 0x02	; 2
 af2:	0e 94 3e 0c 	call	0x187c	; 0x187c <cmd_with_ending>
				uart0_hal_send_string(lm_msg);
 af6:	60 e9       	ldi	r22, 0x90	; 144
 af8:	72 e0       	ldi	r23, 0x02	; 2
 afa:	80 e8       	ldi	r24, 0x80	; 128
 afc:	0e 94 58 09 	call	0x12b0	; 0x12b0 <uart0_hal_send_string>
				
				util_setPendingStates(&stateData, JN_LOAD_DEVEUI, JN_JOIN_FATAL_ERROR);
 b00:	4c e0       	ldi	r20, 0x0C	; 12
 b02:	50 e0       	ldi	r21, 0x00	; 0
 b04:	63 e0       	ldi	r22, 0x03	; 3
 b06:	70 e0       	ldi	r23, 0x00	; 0
 b08:	ce 01       	movw	r24, r28
 b0a:	01 96       	adiw	r24, 0x01	; 1
 b0c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_EXACT, OK);
 b10:	2f ef       	ldi	r18, 0xFF	; 255
 b12:	32 e0       	ldi	r19, 0x02	; 2
 b14:	40 e0       	ldi	r20, 0x00	; 0
 b16:	60 e0       	ldi	r22, 0x00	; 0
 b18:	ce 01       	movw	r24, r28
 b1a:	01 96       	adiw	r24, 0x01	; 1
 b1c:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				state=JN_WAIT_FOR_INCOMMING;
 b20:	11 e0       	ldi	r17, 0x01	; 1
			break;
 b22:	ba cf       	rjmp	.-140    	; 0xa98 <JN_join_network+0x2a>
			
			case JN_LOAD_DEVEUI:
				mac_set_deveui(lm_msg, deveui);
 b24:	b5 01       	movw	r22, r10
 b26:	80 e9       	ldi	r24, 0x90	; 144
 b28:	92 e0       	ldi	r25, 0x02	; 2
 b2a:	0e 94 00 0b 	call	0x1600	; 0x1600 <mac_set_deveui>
				attach_ending(lm_msg);
 b2e:	80 e9       	ldi	r24, 0x90	; 144
 b30:	92 e0       	ldi	r25, 0x02	; 2
 b32:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <attach_ending>
				uart0_hal_send_string(lm_msg);
 b36:	60 e9       	ldi	r22, 0x90	; 144
 b38:	72 e0       	ldi	r23, 0x02	; 2
 b3a:	80 e8       	ldi	r24, 0x80	; 128
 b3c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <uart0_hal_send_string>
				
				util_setPendingStates(&stateData, JN_LOAD_APPKEY, JN_JOIN_FATAL_ERROR);
 b40:	4c e0       	ldi	r20, 0x0C	; 12
 b42:	50 e0       	ldi	r21, 0x00	; 0
 b44:	64 e0       	ldi	r22, 0x04	; 4
 b46:	70 e0       	ldi	r23, 0x00	; 0
 b48:	ce 01       	movw	r24, r28
 b4a:	01 96       	adiw	r24, 0x01	; 1
 b4c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_EXACT, OK);
 b50:	2f ef       	ldi	r18, 0xFF	; 255
 b52:	32 e0       	ldi	r19, 0x02	; 2
 b54:	40 e0       	ldi	r20, 0x00	; 0
 b56:	60 e0       	ldi	r22, 0x00	; 0
 b58:	ce 01       	movw	r24, r28
 b5a:	01 96       	adiw	r24, 0x01	; 1
 b5c:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				state=JN_WAIT_FOR_INCOMMING;
 b60:	11 e0       	ldi	r17, 0x01	; 1
			break;
 b62:	9a cf       	rjmp	.-204    	; 0xa98 <JN_join_network+0x2a>
			
			case JN_LOAD_APPKEY:
				mac_set_appkey(lm_msg, appkey);
 b64:	b7 01       	movw	r22, r14
 b66:	80 e9       	ldi	r24, 0x90	; 144
 b68:	92 e0       	ldi	r25, 0x02	; 2
 b6a:	0e 94 48 0b 	call	0x1690	; 0x1690 <mac_set_appkey>
				attach_ending(lm_msg);
 b6e:	80 e9       	ldi	r24, 0x90	; 144
 b70:	92 e0       	ldi	r25, 0x02	; 2
 b72:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <attach_ending>
				uart0_hal_send_string(lm_msg);
 b76:	60 e9       	ldi	r22, 0x90	; 144
 b78:	72 e0       	ldi	r23, 0x02	; 2
 b7a:	80 e8       	ldi	r24, 0x80	; 128
 b7c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <uart0_hal_send_string>
				
				util_setPendingStates(&stateData, JN_LOAD_APPEUI, JN_JOIN_FATAL_ERROR);
 b80:	4c e0       	ldi	r20, 0x0C	; 12
 b82:	50 e0       	ldi	r21, 0x00	; 0
 b84:	65 e0       	ldi	r22, 0x05	; 5
 b86:	70 e0       	ldi	r23, 0x00	; 0
 b88:	ce 01       	movw	r24, r28
 b8a:	01 96       	adiw	r24, 0x01	; 1
 b8c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_EXACT, OK);
 b90:	2f ef       	ldi	r18, 0xFF	; 255
 b92:	32 e0       	ldi	r19, 0x02	; 2
 b94:	40 e0       	ldi	r20, 0x00	; 0
 b96:	60 e0       	ldi	r22, 0x00	; 0
 b98:	ce 01       	movw	r24, r28
 b9a:	01 96       	adiw	r24, 0x01	; 1
 b9c:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				state=JN_WAIT_FOR_INCOMMING;
 ba0:	11 e0       	ldi	r17, 0x01	; 1
			break;
 ba2:	7a cf       	rjmp	.-268    	; 0xa98 <JN_join_network+0x2a>
			
			case JN_LOAD_APPEUI:
				mac_set_appeui(lm_msg, appeui);
 ba4:	b6 01       	movw	r22, r12
 ba6:	80 e9       	ldi	r24, 0x90	; 144
 ba8:	92 e0       	ldi	r25, 0x02	; 2
 baa:	0e 94 24 0b 	call	0x1648	; 0x1648 <mac_set_appeui>
				attach_ending(lm_msg);
 bae:	80 e9       	ldi	r24, 0x90	; 144
 bb0:	92 e0       	ldi	r25, 0x02	; 2
 bb2:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <attach_ending>
				uart0_hal_send_string(lm_msg);
 bb6:	60 e9       	ldi	r22, 0x90	; 144
 bb8:	72 e0       	ldi	r23, 0x02	; 2
 bba:	80 e8       	ldi	r24, 0x80	; 128
 bbc:	0e 94 58 09 	call	0x12b0	; 0x12b0 <uart0_hal_send_string>
				
				util_setPendingStates(&stateData, JN_LOAD_ADR, JN_JOIN_FATAL_ERROR);
 bc0:	4c e0       	ldi	r20, 0x0C	; 12
 bc2:	50 e0       	ldi	r21, 0x00	; 0
 bc4:	66 e0       	ldi	r22, 0x06	; 6
 bc6:	70 e0       	ldi	r23, 0x00	; 0
 bc8:	ce 01       	movw	r24, r28
 bca:	01 96       	adiw	r24, 0x01	; 1
 bcc:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_EXACT, OK);
 bd0:	2f ef       	ldi	r18, 0xFF	; 255
 bd2:	32 e0       	ldi	r19, 0x02	; 2
 bd4:	40 e0       	ldi	r20, 0x00	; 0
 bd6:	60 e0       	ldi	r22, 0x00	; 0
 bd8:	ce 01       	movw	r24, r28
 bda:	01 96       	adiw	r24, 0x01	; 1
 bdc:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				state=JN_WAIT_FOR_INCOMMING;
 be0:	11 e0       	ldi	r17, 0x01	; 1
			break;
 be2:	5a cf       	rjmp	.-332    	; 0xa98 <JN_join_network+0x2a>
			
			case JN_LOAD_ADR:
				mac_set_ADR(lm_msg, 1);
 be4:	61 e0       	ldi	r22, 0x01	; 1
 be6:	80 e9       	ldi	r24, 0x90	; 144
 be8:	92 e0       	ldi	r25, 0x02	; 2
 bea:	0e 94 89 0c 	call	0x1912	; 0x1912 <mac_set_ADR>
				attach_ending(lm_msg);
 bee:	80 e9       	ldi	r24, 0x90	; 144
 bf0:	92 e0       	ldi	r25, 0x02	; 2
 bf2:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <attach_ending>
				uart0_hal_send_string(lm_msg);
 bf6:	60 e9       	ldi	r22, 0x90	; 144
 bf8:	72 e0       	ldi	r23, 0x02	; 2
 bfa:	80 e8       	ldi	r24, 0x80	; 128
 bfc:	0e 94 58 09 	call	0x12b0	; 0x12b0 <uart0_hal_send_string>
				
				util_setPendingStates(&stateData, JN_LOAD_SAVE, JN_JOIN_FATAL_ERROR);
 c00:	4c e0       	ldi	r20, 0x0C	; 12
 c02:	50 e0       	ldi	r21, 0x00	; 0
 c04:	67 e0       	ldi	r22, 0x07	; 7
 c06:	70 e0       	ldi	r23, 0x00	; 0
 c08:	ce 01       	movw	r24, r28
 c0a:	01 96       	adiw	r24, 0x01	; 1
 c0c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_EXACT, OK);
 c10:	2f ef       	ldi	r18, 0xFF	; 255
 c12:	32 e0       	ldi	r19, 0x02	; 2
 c14:	40 e0       	ldi	r20, 0x00	; 0
 c16:	60 e0       	ldi	r22, 0x00	; 0
 c18:	ce 01       	movw	r24, r28
 c1a:	01 96       	adiw	r24, 0x01	; 1
 c1c:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				state=JN_WAIT_FOR_INCOMMING;
 c20:	11 e0       	ldi	r17, 0x01	; 1
			break;
 c22:	3a cf       	rjmp	.-396    	; 0xa98 <JN_join_network+0x2a>
			
			case JN_LOAD_SAVE:
				cmd_with_ending(lm_msg, MAC_SAVE);
 c24:	42 e0       	ldi	r20, 0x02	; 2
 c26:	53 e0       	ldi	r21, 0x03	; 3
 c28:	60 e0       	ldi	r22, 0x00	; 0
 c2a:	80 e9       	ldi	r24, 0x90	; 144
 c2c:	92 e0       	ldi	r25, 0x02	; 2
 c2e:	0e 94 3e 0c 	call	0x187c	; 0x187c <cmd_with_ending>
				uart0_hal_send_string(lm_msg);
 c32:	60 e9       	ldi	r22, 0x90	; 144
 c34:	72 e0       	ldi	r23, 0x02	; 2
 c36:	80 e8       	ldi	r24, 0x80	; 128
 c38:	0e 94 58 09 	call	0x12b0	; 0x12b0 <uart0_hal_send_string>
				
				util_setPendingStates(&stateData, JN_JOIN_NETWORK, JN_JOIN_FATAL_ERROR);
 c3c:	4c e0       	ldi	r20, 0x0C	; 12
 c3e:	50 e0       	ldi	r21, 0x00	; 0
 c40:	68 e0       	ldi	r22, 0x08	; 8
 c42:	70 e0       	ldi	r23, 0x00	; 0
 c44:	ce 01       	movw	r24, r28
 c46:	01 96       	adiw	r24, 0x01	; 1
 c48:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_EXACT, OK);
 c4c:	2f ef       	ldi	r18, 0xFF	; 255
 c4e:	32 e0       	ldi	r19, 0x02	; 2
 c50:	40 e0       	ldi	r20, 0x00	; 0
 c52:	60 e0       	ldi	r22, 0x00	; 0
 c54:	ce 01       	movw	r24, r28
 c56:	01 96       	adiw	r24, 0x01	; 1
 c58:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				state=JN_WAIT_FOR_INCOMMING;
 c5c:	11 e0       	ldi	r17, 0x01	; 1
			break;
 c5e:	1c cf       	rjmp	.-456    	; 0xa98 <JN_join_network+0x2a>
			
			case JN_JOIN_NETWORK:
				cmd_with_ending(lm_msg, MAC_JOIN_OTAA);
 c60:	4b e0       	ldi	r20, 0x0B	; 11
 c62:	53 e0       	ldi	r21, 0x03	; 3
 c64:	60 e0       	ldi	r22, 0x00	; 0
 c66:	80 e9       	ldi	r24, 0x90	; 144
 c68:	92 e0       	ldi	r25, 0x02	; 2
 c6a:	0e 94 3e 0c 	call	0x187c	; 0x187c <cmd_with_ending>
				uart0_hal_send_string(lm_msg);
 c6e:	60 e9       	ldi	r22, 0x90	; 144
 c70:	72 e0       	ldi	r23, 0x02	; 2
 c72:	80 e8       	ldi	r24, 0x80	; 128
 c74:	0e 94 58 09 	call	0x12b0	; 0x12b0 <uart0_hal_send_string>
				
				util_setPendingStates(&stateData, JN_JOIN_NETWORK_RES_2, JN_JOIN_NETWORK_FAILED);
 c78:	4a e0       	ldi	r20, 0x0A	; 10
 c7a:	50 e0       	ldi	r21, 0x00	; 0
 c7c:	69 e0       	ldi	r22, 0x09	; 9
 c7e:	70 e0       	ldi	r23, 0x00	; 0
 c80:	ce 01       	movw	r24, r28
 c82:	01 96       	adiw	r24, 0x01	; 1
 c84:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_EXACT, OK);
 c88:	2f ef       	ldi	r18, 0xFF	; 255
 c8a:	32 e0       	ldi	r19, 0x02	; 2
 c8c:	40 e0       	ldi	r20, 0x00	; 0
 c8e:	60 e0       	ldi	r22, 0x00	; 0
 c90:	ce 01       	movw	r24, r28
 c92:	01 96       	adiw	r24, 0x01	; 1
 c94:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				state=JN_WAIT_FOR_INCOMMING;
 c98:	11 e0       	ldi	r17, 0x01	; 1
			break;
 c9a:	fe ce       	rjmp	.-516    	; 0xa98 <JN_join_network+0x2a>
			
			case JN_JOIN_NETWORK_RES_2:
				util_setPendingStates(&stateData, JN_JOIN_SUCCESS, JN_JOIN_NETWORK_FAILED);
 c9c:	4a e0       	ldi	r20, 0x0A	; 10
 c9e:	50 e0       	ldi	r21, 0x00	; 0
 ca0:	6b e0       	ldi	r22, 0x0B	; 11
 ca2:	70 e0       	ldi	r23, 0x00	; 0
 ca4:	ce 01       	movw	r24, r28
 ca6:	01 96       	adiw	r24, 0x01	; 1
 ca8:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <util_setPendingStates>
				util_setMatchCase(&stateData, LM_EXACT, ACCEPTED);
 cac:	29 e1       	ldi	r18, 0x19	; 25
 cae:	33 e0       	ldi	r19, 0x03	; 3
 cb0:	40 e0       	ldi	r20, 0x00	; 0
 cb2:	60 e0       	ldi	r22, 0x00	; 0
 cb4:	ce 01       	movw	r24, r28
 cb6:	01 96       	adiw	r24, 0x01	; 1
 cb8:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <util_setMatchCase>
				state=JN_WAIT_FOR_INCOMMING;
 cbc:	11 e0       	ldi	r17, 0x01	; 1
			break;
 cbe:	ec ce       	rjmp	.-552    	; 0xa98 <JN_join_network+0x2a>
				
			case JN_JOIN_FATAL_ERROR:
				return LM_STATUS_FATAL_ERROR;
				
			case JN_JOIN_NETWORK_FAILED:
				return parse_err(lm_msg);
 cc0:	80 e9       	ldi	r24, 0x90	; 144
 cc2:	92 e0       	ldi	r25, 0x02	; 2
 cc4:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <parse_err>
 cc8:	14 c0       	rjmp	.+40     	; 0xcf2 <JN_join_network+0x284>
				
				
			case JN_WAIT_FOR_INCOMMING:
				if(uart0_hal_message_ready()){
 cca:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <uart0_hal_message_ready>
 cce:	88 23       	and	r24, r24
 cd0:	09 f4       	brne	.+2      	; 0xcd4 <JN_join_network+0x266>
 cd2:	e2 ce       	rjmp	.-572    	; 0xa98 <JN_join_network+0x2a>
					uart0_hal_read_message_as_str(lm_msg);
 cd4:	80 e9       	ldi	r24, 0x90	; 144
 cd6:	92 e0       	ldi	r25, 0x02	; 2
 cd8:	0e 94 ce 0c 	call	0x199c	; 0x199c <uart0_hal_read_message_as_str>
					state=util_matchMessage(&stateData, lm_msg);
 cdc:	60 e9       	ldi	r22, 0x90	; 144
 cde:	72 e0       	ldi	r23, 0x02	; 2
 ce0:	ce 01       	movw	r24, r28
 ce2:	01 96       	adiw	r24, 0x01	; 1
 ce4:	0e 94 c2 09 	call	0x1384	; 0x1384 <util_matchMessage>
 ce8:	18 2f       	mov	r17, r24
 cea:	d6 ce       	rjmp	.-596    	; 0xa98 <JN_join_network+0x2a>
				util_setMatchCase(&stateData, LM_EXACT, ACCEPTED);
				state=JN_WAIT_FOR_INCOMMING;
			break;
				
			case JN_JOIN_SUCCESS:
				return LM_STATUS_SUCCESS;
 cec:	80 e0       	ldi	r24, 0x00	; 0
 cee:	01 c0       	rjmp	.+2      	; 0xcf2 <JN_join_network+0x284>
				
			case JN_JOIN_FATAL_ERROR:
				return LM_STATUS_FATAL_ERROR;
 cf0:	81 e0       	ldi	r24, 0x01	; 1
				}
			break;
		}
	}
	return LM_STATUS_FATAL_ERROR;
}
 cf2:	28 96       	adiw	r28, 0x08	; 8
 cf4:	0f b6       	in	r0, 0x3f	; 63
 cf6:	f8 94       	cli
 cf8:	de bf       	out	0x3e, r29	; 62
 cfa:	0f be       	out	0x3f, r0	; 63
 cfc:	cd bf       	out	0x3d, r28	; 61
 cfe:	df 91       	pop	r29
 d00:	cf 91       	pop	r28
 d02:	1f 91       	pop	r17
 d04:	ff 90       	pop	r15
 d06:	ef 90       	pop	r14
 d08:	df 90       	pop	r13
 d0a:	cf 90       	pop	r12
 d0c:	bf 90       	pop	r11
 d0e:	af 90       	pop	r10
 d10:	08 95       	ret

Disassembly of section .text.LM_join_network:

00001aaa <LM_join_network>:

static void cb_block_uplink();
static void set_block_uplink();

LM_STATUS LM_join_network(char deveui[], char appeui[], char appkey[]){
	return JN_join_network(deveui, appeui, appkey);
    1aaa:	0e 94 37 05 	call	0xa6e	; 0xa6e <JN_join_network>
}
    1aae:	08 95       	ret

Disassembly of section .text.attach_ending:

00001a02 <attach_ending>:
 * Auxiliary - global
**************************************************************/

void attach_ending(char buffer[])
{
    strcat(buffer, CMD_END_CHARS);
    1a02:	fc 01       	movw	r30, r24
    1a04:	01 90       	ld	r0, Z+
    1a06:	00 20       	and	r0, r0
    1a08:	e9 f7       	brne	.-6      	; 0x1a04 <attach_ending+0x2>
    1a0a:	cf 01       	movw	r24, r30
    1a0c:	23 e0       	ldi	r18, 0x03	; 3
    1a0e:	30 e0       	ldi	r19, 0x00	; 0
    1a10:	4f ee       	ldi	r20, 0xEF	; 239
    1a12:	51 e0       	ldi	r21, 0x01	; 1
    1a14:	60 e0       	ldi	r22, 0x00	; 0
    1a16:	01 97       	sbiw	r24, 0x01	; 1
    1a18:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <memcpy>
    1a1c:	08 95       	ret

Disassembly of section .text.cmd_with_ending:

0000187c <cmd_with_ending>:
static void tohex(char str[], const uint8_t data[], int bytes)
{
    for (int i = 0; i < bytes; i++){
        sprintf(str + i * 2, "%02x", data[i]);
	}
}
    187c:	cf 93       	push	r28
    187e:	df 93       	push	r29
    1880:	ec 01       	movw	r28, r24
    1882:	0e 94 f2 0c 	call	0x19e4	; 0x19e4 <strcpy>
    1886:	fe 01       	movw	r30, r28
    1888:	01 90       	ld	r0, Z+
    188a:	00 20       	and	r0, r0
    188c:	e9 f7       	brne	.-6      	; 0x1888 <cmd_with_ending+0xc>
    188e:	cf 01       	movw	r24, r30
    1890:	23 e0       	ldi	r18, 0x03	; 3
    1892:	30 e0       	ldi	r19, 0x00	; 0
    1894:	4f ee       	ldi	r20, 0xEF	; 239
    1896:	51 e0       	ldi	r21, 0x01	; 1
    1898:	60 e0       	ldi	r22, 0x00	; 0
    189a:	01 97       	sbiw	r24, 0x01	; 1
    189c:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <memcpy>
    18a0:	be 01       	movw	r22, r28
    18a2:	80 e8       	ldi	r24, 0x80	; 128
    18a4:	0e 94 b8 0c 	call	0x1970	; 0x1970 <strlen>
    18a8:	df 91       	pop	r29
    18aa:	cf 91       	pop	r28
    18ac:	08 95       	ret

Disassembly of section .text.mac_set_parameter:

000014d4 <mac_set_parameter>:
    14d4:	0f 93       	push	r16
    14d6:	1f 93       	push	r17
    14d8:	cf 93       	push	r28
    14da:	df 93       	push	r29
    14dc:	ec 01       	movw	r28, r24
    14de:	2f 93       	push	r18
    14e0:	1f 93       	push	r17
    14e2:	0f 93       	push	r16
    14e4:	6f 93       	push	r22
    14e6:	5f 93       	push	r21
    14e8:	4f 93       	push	r20
    14ea:	83 e0       	ldi	r24, 0x03	; 3
    14ec:	92 e0       	ldi	r25, 0x02	; 2
    14ee:	a0 e0       	ldi	r26, 0x00	; 0
    14f0:	af 93       	push	r26
    14f2:	9f 93       	push	r25
    14f4:	8f 93       	push	r24
    14f6:	df 93       	push	r29
    14f8:	cf 93       	push	r28
    14fa:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <sprintf>
    14fe:	be 01       	movw	r22, r28
    1500:	80 e8       	ldi	r24, 0x80	; 128
    1502:	0e 94 b8 0c 	call	0x1970	; 0x1970 <strlen>
    1506:	2d b7       	in	r18, 0x3d	; 61
    1508:	3e b7       	in	r19, 0x3e	; 62
    150a:	25 5f       	subi	r18, 0xF5	; 245
    150c:	3f 4f       	sbci	r19, 0xFF	; 255
    150e:	0f b6       	in	r0, 0x3f	; 63
    1510:	f8 94       	cli
    1512:	3e bf       	out	0x3e, r19	; 62
    1514:	0f be       	out	0x3f, r0	; 63
    1516:	2d bf       	out	0x3d, r18	; 61
    1518:	df 91       	pop	r29
    151a:	cf 91       	pop	r28
    151c:	1f 91       	pop	r17
    151e:	0f 91       	pop	r16
    1520:	08 95       	ret

Disassembly of section .text.mac_set_deveui:

00001600 <mac_set_deveui>:
    1600:	cf 92       	push	r12
    1602:	df 92       	push	r13
    1604:	ef 92       	push	r14
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	cf 93       	push	r28
    160c:	df 93       	push	r29
    160e:	ec 01       	movw	r28, r24
    1610:	6b 01       	movw	r12, r22
    1612:	80 e8       	ldi	r24, 0x80	; 128
    1614:	e8 2e       	mov	r14, r24
    1616:	8e 2d       	mov	r24, r14
    1618:	b6 01       	movw	r22, r12
    161a:	0e 94 b8 0c 	call	0x1970	; 0x1970 <strlen>
    161e:	40 97       	sbiw	r24, 0x10	; 16
    1620:	49 f4       	brne	.+18     	; 0x1634 <mac_set_deveui+0x34>
    1622:	2e 2d       	mov	r18, r14
    1624:	86 01       	movw	r16, r12
    1626:	49 e0       	ldi	r20, 0x09	; 9
    1628:	52 e0       	ldi	r21, 0x02	; 2
    162a:	60 e0       	ldi	r22, 0x00	; 0
    162c:	ce 01       	movw	r24, r28
    162e:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <mac_set_parameter>
    1632:	02 c0       	rjmp	.+4      	; 0x1638 <mac_set_deveui+0x38>
    1634:	8f ef       	ldi	r24, 0xFF	; 255
    1636:	9f ef       	ldi	r25, 0xFF	; 255
    1638:	df 91       	pop	r29
    163a:	cf 91       	pop	r28
    163c:	1f 91       	pop	r17
    163e:	0f 91       	pop	r16
    1640:	ef 90       	pop	r14
    1642:	df 90       	pop	r13
    1644:	cf 90       	pop	r12
    1646:	08 95       	ret

Disassembly of section .text.mac_set_appeui:

00001648 <mac_set_appeui>:
    1648:	cf 92       	push	r12
    164a:	df 92       	push	r13
    164c:	ef 92       	push	r14
    164e:	0f 93       	push	r16
    1650:	1f 93       	push	r17
    1652:	cf 93       	push	r28
    1654:	df 93       	push	r29
    1656:	ec 01       	movw	r28, r24
    1658:	6b 01       	movw	r12, r22
    165a:	80 e8       	ldi	r24, 0x80	; 128
    165c:	e8 2e       	mov	r14, r24
    165e:	8e 2d       	mov	r24, r14
    1660:	b6 01       	movw	r22, r12
    1662:	0e 94 b8 0c 	call	0x1970	; 0x1970 <strlen>
    1666:	40 97       	sbiw	r24, 0x10	; 16
    1668:	49 f4       	brne	.+18     	; 0x167c <mac_set_appeui+0x34>
    166a:	2e 2d       	mov	r18, r14
    166c:	86 01       	movw	r16, r12
    166e:	48 e1       	ldi	r20, 0x18	; 24
    1670:	52 e0       	ldi	r21, 0x02	; 2
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	ce 01       	movw	r24, r28
    1676:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <mac_set_parameter>
    167a:	02 c0       	rjmp	.+4      	; 0x1680 <mac_set_appeui+0x38>
    167c:	8f ef       	ldi	r24, 0xFF	; 255
    167e:	9f ef       	ldi	r25, 0xFF	; 255
    1680:	df 91       	pop	r29
    1682:	cf 91       	pop	r28
    1684:	1f 91       	pop	r17
    1686:	0f 91       	pop	r16
    1688:	ef 90       	pop	r14
    168a:	df 90       	pop	r13
    168c:	cf 90       	pop	r12
    168e:	08 95       	ret

Disassembly of section .text.mac_set_appkey:

00001690 <mac_set_appkey>:
    1690:	cf 92       	push	r12
    1692:	df 92       	push	r13
    1694:	ef 92       	push	r14
    1696:	0f 93       	push	r16
    1698:	1f 93       	push	r17
    169a:	cf 93       	push	r28
    169c:	df 93       	push	r29
    169e:	ec 01       	movw	r28, r24
    16a0:	6b 01       	movw	r12, r22
    16a2:	80 e8       	ldi	r24, 0x80	; 128
    16a4:	e8 2e       	mov	r14, r24
    16a6:	8e 2d       	mov	r24, r14
    16a8:	b6 01       	movw	r22, r12
    16aa:	0e 94 b8 0c 	call	0x1970	; 0x1970 <strlen>
    16ae:	80 97       	sbiw	r24, 0x20	; 32
    16b0:	49 f4       	brne	.+18     	; 0x16c4 <mac_set_appkey+0x34>
    16b2:	2e 2d       	mov	r18, r14
    16b4:	86 01       	movw	r16, r12
    16b6:	47 e2       	ldi	r20, 0x27	; 39
    16b8:	52 e0       	ldi	r21, 0x02	; 2
    16ba:	60 e0       	ldi	r22, 0x00	; 0
    16bc:	ce 01       	movw	r24, r28
    16be:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <mac_set_parameter>
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <mac_set_appkey+0x38>
    16c4:	8f ef       	ldi	r24, 0xFF	; 255
    16c6:	9f ef       	ldi	r25, 0xFF	; 255
    16c8:	df 91       	pop	r29
    16ca:	cf 91       	pop	r28
    16cc:	1f 91       	pop	r17
    16ce:	0f 91       	pop	r16
    16d0:	ef 90       	pop	r14
    16d2:	df 90       	pop	r13
    16d4:	cf 90       	pop	r12
    16d6:	08 95       	ret

Disassembly of section .text.mac_set_ADR:

00001912 <mac_set_ADR>:
    1912:	0f 93       	push	r16
    1914:	1f 93       	push	r17
    1916:	61 11       	cpse	r22, r1
    1918:	09 c0       	rjmp	.+18     	; 0x192c <mac_set_ADR+0x1a>
    191a:	06 e3       	ldi	r16, 0x36	; 54
    191c:	12 e0       	ldi	r17, 0x02	; 2
    191e:	20 e0       	ldi	r18, 0x00	; 0
    1920:	4a e3       	ldi	r20, 0x3A	; 58
    1922:	52 e0       	ldi	r21, 0x02	; 2
    1924:	60 e0       	ldi	r22, 0x00	; 0
    1926:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <mac_set_parameter>
    192a:	08 c0       	rjmp	.+16     	; 0x193c <mac_set_ADR+0x2a>
    192c:	06 e4       	ldi	r16, 0x46	; 70
    192e:	12 e0       	ldi	r17, 0x02	; 2
    1930:	20 e0       	ldi	r18, 0x00	; 0
    1932:	4a e3       	ldi	r20, 0x3A	; 58
    1934:	52 e0       	ldi	r21, 0x02	; 2
    1936:	60 e0       	ldi	r22, 0x00	; 0
    1938:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <mac_set_parameter>
    193c:	1f 91       	pop	r17
    193e:	0f 91       	pop	r16
    1940:	08 95       	ret

Disassembly of section .text.util_setPendingStates:

00001a5a <util_setPendingStates>:


char lm_msg[200];

void util_setPendingStates(LM_STATE_DATA *sd, int success, int failed){
	sd->success_state=success;
    1a5a:	fc 01       	movw	r30, r24
    1a5c:	71 83       	std	Z+1, r23	; 0x01
    1a5e:	60 83       	st	Z, r22
	sd->failure_state=failed;
    1a60:	53 83       	std	Z+3, r21	; 0x03
    1a62:	42 83       	std	Z+2, r20	; 0x02
    1a64:	08 95       	ret

Disassembly of section .text.util_setMatchCase:

00001a66 <util_setMatchCase>:
}

void util_setMatchCase(LM_STATE_DATA *sd, LM_MATCH_CASES matchCase, const char *matchString){
	sd->matchCase=matchCase;
    1a66:	fc 01       	movw	r30, r24
    1a68:	64 83       	std	Z+4, r22	; 0x04
	sd->matchString=matchString;
    1a6a:	25 83       	std	Z+5, r18	; 0x05
    1a6c:	36 83       	std	Z+6, r19	; 0x06
    1a6e:	47 83       	std	Z+7, r20	; 0x07
    1a70:	08 95       	ret

Disassembly of section .text.util_strbeginswith:

000015b6 <util_strbeginswith>:
		return sd->failure_state;
	}
}


bool util_strbeginswith(const char *s1, const char *s2){
    15b6:	6f 92       	push	r6
    15b8:	7f 92       	push	r7
    15ba:	8f 92       	push	r8
    15bc:	cf 92       	push	r12
    15be:	df 92       	push	r13
    15c0:	ef 92       	push	r14
    15c2:	0f 93       	push	r16
    15c4:	1f 93       	push	r17
    15c6:	3b 01       	movw	r6, r22
    15c8:	88 2e       	mov	r8, r24
    15ca:	69 01       	movw	r12, r18
    15cc:	e4 2e       	mov	r14, r20
	return strncmp(s1, s2, strlen(s2))==0?true:false;
    15ce:	84 2f       	mov	r24, r20
    15d0:	b9 01       	movw	r22, r18
    15d2:	0e 94 b8 0c 	call	0x1970	; 0x1970 <strlen>
    15d6:	8c 01       	movw	r16, r24
    15d8:	4e 2d       	mov	r20, r14
    15da:	96 01       	movw	r18, r12
    15dc:	88 2d       	mov	r24, r8
    15de:	b3 01       	movw	r22, r6
    15e0:	0e 94 8d 09 	call	0x131a	; 0x131a <strncmp>
    15e4:	21 e0       	ldi	r18, 0x01	; 1
    15e6:	89 2b       	or	r24, r25
    15e8:	09 f0       	breq	.+2      	; 0x15ec <util_strbeginswith+0x36>
    15ea:	20 e0       	ldi	r18, 0x00	; 0
}
    15ec:	82 2f       	mov	r24, r18
    15ee:	1f 91       	pop	r17
    15f0:	0f 91       	pop	r16
    15f2:	ef 90       	pop	r14
    15f4:	df 90       	pop	r13
    15f6:	cf 90       	pop	r12
    15f8:	8f 90       	pop	r8
    15fa:	7f 90       	pop	r7
    15fc:	6f 90       	pop	r6
    15fe:	08 95       	ret

Disassembly of section .text.util_matchMessage:

00001384 <util_matchMessage>:
void util_setMatchCase(LM_STATE_DATA *sd, LM_MATCH_CASES matchCase, const char *matchString){
	sd->matchCase=matchCase;
	sd->matchString=matchString;
}

int util_matchMessage(LM_STATE_DATA *sd, char *msg){
    1384:	cf 93       	push	r28
    1386:	df 93       	push	r29
    1388:	ec 01       	movw	r28, r24
	switch(sd->matchCase){
    138a:	8c 81       	ldd	r24, Y+4	; 0x04
    138c:	81 30       	cpi	r24, 0x01	; 1
    138e:	91 f0       	breq	.+36     	; 0x13b4 <util_matchMessage+0x30>
    1390:	18 f0       	brcs	.+6      	; 0x1398 <util_matchMessage+0x14>
    1392:	82 30       	cpi	r24, 0x02	; 2
    1394:	e9 f0       	breq	.+58     	; 0x13d0 <util_matchMessage+0x4c>
    1396:	1f c0       	rjmp	.+62     	; 0x13d6 <util_matchMessage+0x52>
		case LM_EXACT:
		return strcmp(msg, sd->matchString)==0?sd->success_state:sd->failure_state;
    1398:	2d 81       	ldd	r18, Y+5	; 0x05
    139a:	3e 81       	ldd	r19, Y+6	; 0x06
    139c:	4f 81       	ldd	r20, Y+7	; 0x07
    139e:	80 e8       	ldi	r24, 0x80	; 128
    13a0:	0e 94 8f 0b 	call	0x171e	; 0x171e <strcmp>
    13a4:	89 2b       	or	r24, r25
    13a6:	19 f4       	brne	.+6      	; 0x13ae <util_matchMessage+0x2a>
    13a8:	88 81       	ld	r24, Y
    13aa:	99 81       	ldd	r25, Y+1	; 0x01
    13ac:	16 c0       	rjmp	.+44     	; 0x13da <util_matchMessage+0x56>
    13ae:	8a 81       	ldd	r24, Y+2	; 0x02
    13b0:	9b 81       	ldd	r25, Y+3	; 0x03
    13b2:	13 c0       	rjmp	.+38     	; 0x13da <util_matchMessage+0x56>

		case LM_BEGINS_WITH:
		return util_strbeginswith(msg, sd->matchString)?sd->success_state:sd->failure_state;
    13b4:	2d 81       	ldd	r18, Y+5	; 0x05
    13b6:	3e 81       	ldd	r19, Y+6	; 0x06
    13b8:	4f 81       	ldd	r20, Y+7	; 0x07
    13ba:	80 e8       	ldi	r24, 0x80	; 128
    13bc:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <util_strbeginswith>
    13c0:	88 23       	and	r24, r24
    13c2:	19 f0       	breq	.+6      	; 0x13ca <util_matchMessage+0x46>
    13c4:	88 81       	ld	r24, Y
    13c6:	99 81       	ldd	r25, Y+1	; 0x01
    13c8:	08 c0       	rjmp	.+16     	; 0x13da <util_matchMessage+0x56>
    13ca:	8a 81       	ldd	r24, Y+2	; 0x02
    13cc:	9b 81       	ldd	r25, Y+3	; 0x03
    13ce:	05 c0       	rjmp	.+10     	; 0x13da <util_matchMessage+0x56>

		case LM_NO_TEST:
		return sd->success_state;
    13d0:	88 81       	ld	r24, Y
    13d2:	99 81       	ldd	r25, Y+1	; 0x01
    13d4:	02 c0       	rjmp	.+4      	; 0x13da <util_matchMessage+0x56>
		default:
		return sd->failure_state;
    13d6:	8a 81       	ldd	r24, Y+2	; 0x02
    13d8:	9b 81       	ldd	r25, Y+3	; 0x03
	}
}
    13da:	df 91       	pop	r29
    13dc:	cf 91       	pop	r28
    13de:	08 95       	ret

Disassembly of section .text.test_join_network:

00000f7e <test_join_network>:
		
		_delay_ms(3000);
	}
}

static void test_join_network(){
     f7e:	cf 93       	push	r28
     f80:	df 93       	push	r29
     f82:	cd b7       	in	r28, 0x3d	; 61
     f84:	de b7       	in	r29, 0x3e	; 62
     f86:	c3 54       	subi	r28, 0x43	; 67
     f88:	d1 09       	sbc	r29, r1
     f8a:	0f b6       	in	r0, 0x3f	; 63
     f8c:	f8 94       	cli
     f8e:	de bf       	out	0x3e, r29	; 62
     f90:	0f be       	out	0x3f, r0	; 63
     f92:	cd bf       	out	0x3d, r28	; 61
	char deveui[]="0004A30B00F4547A";
     f94:	2c e7       	ldi	r18, 0x7C	; 124
     f96:	32 e0       	ldi	r19, 0x02	; 2
     f98:	40 e0       	ldi	r20, 0x00	; 0
     f9a:	81 e1       	ldi	r24, 0x11	; 17
     f9c:	f9 01       	movw	r30, r18
     f9e:	de 01       	movw	r26, r28
     fa0:	11 96       	adiw	r26, 0x01	; 1
     fa2:	74 2f       	mov	r23, r20
     fa4:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__movmemx_qi>
	char appeui[]="70B3D57ED003F844";
     fa8:	2d e8       	ldi	r18, 0x8D	; 141
     faa:	32 e0       	ldi	r19, 0x02	; 2
     fac:	40 e0       	ldi	r20, 0x00	; 0
     fae:	81 e1       	ldi	r24, 0x11	; 17
     fb0:	f9 01       	movw	r30, r18
     fb2:	de 01       	movw	r26, r28
     fb4:	52 96       	adiw	r26, 0x12	; 18
     fb6:	74 2f       	mov	r23, r20
     fb8:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__movmemx_qi>
	char appkey[]="B88AD6D25A3B27C69A01F74C53F9A179";
     fbc:	2e e9       	ldi	r18, 0x9E	; 158
     fbe:	32 e0       	ldi	r19, 0x02	; 2
     fc0:	40 e0       	ldi	r20, 0x00	; 0
     fc2:	81 e2       	ldi	r24, 0x21	; 33
     fc4:	f9 01       	movw	r30, r18
     fc6:	de 01       	movw	r26, r28
     fc8:	93 96       	adiw	r26, 0x23	; 35
     fca:	74 2f       	mov	r23, r20
     fcc:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__movmemx_qi>
	
	
	LM_STATUS status=LM_join_network(deveui, appeui, appkey);
     fd0:	ae 01       	movw	r20, r28
     fd2:	4d 5d       	subi	r20, 0xDD	; 221
     fd4:	5f 4f       	sbci	r21, 0xFF	; 255
     fd6:	be 01       	movw	r22, r28
     fd8:	6e 5e       	subi	r22, 0xEE	; 238
     fda:	7f 4f       	sbci	r23, 0xFF	; 255
     fdc:	ce 01       	movw	r24, r28
     fde:	01 96       	adiw	r24, 0x01	; 1
     fe0:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <LM_join_network>
	if(status==LM_STATUS_SUCCESS){
     fe4:	81 11       	cpse	r24, r1
     fe6:	06 c0       	rjmp	.+12     	; 0xff4 <test_join_network+0x76>
		uart1_hal_send_string("OK ");
     fe8:	6d e5       	ldi	r22, 0x5D	; 93
     fea:	72 e0       	ldi	r23, 0x02	; 2
     fec:	80 e0       	ldi	r24, 0x00	; 0
     fee:	0e 94 65 08 	call	0x10ca	; 0x10ca <uart1_hal_send_string>
     ff2:	15 c0       	rjmp	.+42     	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
	}else if(status==LM_STATUS_TRY_AGAIN){
     ff4:	82 30       	cpi	r24, 0x02	; 2
     ff6:	31 f4       	brne	.+12     	; 0x1004 <__DATA_REGION_LENGTH__+0x4>
		uart1_hal_send_string("TRY AGAIN ");
     ff8:	61 e6       	ldi	r22, 0x61	; 97
     ffa:	72 e0       	ldi	r23, 0x02	; 2
     ffc:	80 e0       	ldi	r24, 0x00	; 0
     ffe:	0e 94 65 08 	call	0x10ca	; 0x10ca <uart1_hal_send_string>
    1002:	0d c0       	rjmp	.+26     	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
	}else if(status==LM_STATUS_CONF_ERR){
    1004:	83 30       	cpi	r24, 0x03	; 3
    1006:	31 f4       	brne	.+12     	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
		uart1_hal_send_string("CONF_ERR ");
    1008:	6c e6       	ldi	r22, 0x6C	; 108
    100a:	72 e0       	ldi	r23, 0x02	; 2
    100c:	80 e0       	ldi	r24, 0x00	; 0
    100e:	0e 94 65 08 	call	0x10ca	; 0x10ca <uart1_hal_send_string>
    1012:	05 c0       	rjmp	.+10     	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
	}else{
		uart1_hal_send_string("FAIL ");
    1014:	66 e7       	ldi	r22, 0x76	; 118
    1016:	72 e0       	ldi	r23, 0x02	; 2
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	0e 94 65 08 	call	0x10ca	; 0x10ca <uart1_hal_send_string>
	}
}
    101e:	cd 5b       	subi	r28, 0xBD	; 189
    1020:	df 4f       	sbci	r29, 0xFF	; 255
    1022:	0f b6       	in	r0, 0x3f	; 63
    1024:	f8 94       	cli
    1026:	de bf       	out	0x3e, r29	; 62
    1028:	0f be       	out	0x3f, r0	; 63
    102a:	cd bf       	out	0x3d, r28	; 61
    102c:	df 91       	pop	r29
    102e:	cf 91       	pop	r28
    1030:	08 95       	ret

Disassembly of section .text.test_LORA_module_start:

000018ae <test_LORA_module_start>:
static void test_forward_msg();



void test_LORA_module_start(){
	uart1_hal_init();
    18ae:	0e 94 ce 0b 	call	0x179c	; 0x179c <uart1_hal_init>
	uart0_hal_init();
    18b2:	0e 94 b0 0b 	call	0x1760	; 0x1760 <uart0_hal_init>
	rn2483_init();
    18b6:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <rn2483_init>
	TC2_HAL_init();
    18ba:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <TC2_HAL_init>
	
	while(1){
		uart1_hal_send_string("Starting: ");
    18be:	6f eb       	ldi	r22, 0xBF	; 191
    18c0:	72 e0       	ldi	r23, 0x02	; 2
    18c2:	80 e0       	ldi	r24, 0x00	; 0
    18c4:	0e 94 65 08 	call	0x10ca	; 0x10ca <uart1_hal_send_string>
		
		test_join_network();
    18c8:	0e 94 bf 07 	call	0xf7e	; 0xf7e <test_join_network>
    18cc:	2f ef       	ldi	r18, 0xFF	; 255
    18ce:	8d e3       	ldi	r24, 0x3D	; 61
    18d0:	99 e4       	ldi	r25, 0x49	; 73
    18d2:	21 50       	subi	r18, 0x01	; 1
    18d4:	80 40       	sbci	r24, 0x00	; 0
    18d6:	90 40       	sbci	r25, 0x00	; 0
    18d8:	e1 f7       	brne	.-8      	; 0x18d2 <test_LORA_module_start+0x24>
    18da:	00 c0       	rjmp	.+0      	; 0x18dc <test_LORA_module_start+0x2e>
    18dc:	00 00       	nop
    18de:	ef cf       	rjmp	.-34     	; 0x18be <test_LORA_module_start+0x10>

Disassembly of section .text.test_runner:

00001ab0 <test_runner>:
#include "MRPP_module/test_MRPP_module.h"
#include "PUMP_module/test_PUMP_module.h"
#include "LED_module/test_LED_module.h"

void test_runner(){
	test_LORA_module_start();
    1ab0:	0e 94 57 0c 	call	0x18ae	; 0x18ae <test_LORA_module_start>
    1ab4:	08 95       	ret

Disassembly of section .text.avrlibc:

0000032a <vfprintf>:
 32a:	a4 e1       	ldi	r26, 0x14	; 20
 32c:	b0 e0       	ldi	r27, 0x00	; 0
 32e:	eb e9       	ldi	r30, 0x9B	; 155
 330:	f1 e0       	ldi	r31, 0x01	; 1
 332:	0c 94 ec 0b 	jmp	0x17d8	; 0x17d8 <__prologue_saves__>
 336:	6c 01       	movw	r12, r24
 338:	1a 01       	movw	r2, r20
 33a:	46 2e       	mov	r4, r22
 33c:	59 01       	movw	r10, r18
 33e:	fc 01       	movw	r30, r24
 340:	10 86       	std	Z+8, r1	; 0x08
 342:	17 82       	std	Z+7, r1	; 0x07
 344:	84 81       	ldd	r24, Z+4	; 0x04
 346:	81 ff       	sbrs	r24, 1
 348:	62 c3       	rjmp	.+1732   	; 0xa0e <__EEPROM_REGION_LENGTH__+0x20e>
 34a:	ce 01       	movw	r24, r28
 34c:	01 96       	adiw	r24, 0x01	; 1
 34e:	9d 87       	std	Y+13, r25	; 0x0d
 350:	8c 87       	std	Y+12, r24	; 0x0c
 352:	a0 e8       	ldi	r26, 0x80	; 128
 354:	8a 8b       	std	Y+18, r24	; 0x12
 356:	9b 8b       	std	Y+19, r25	; 0x13
 358:	ac 8b       	std	Y+20, r26	; 0x14
 35a:	f1 01       	movw	r30, r2
 35c:	84 91       	lpm	r24, Z
 35e:	47 fc       	sbrc	r4, 7
 360:	80 81       	ld	r24, Z
 362:	88 23       	and	r24, r24
 364:	09 f4       	brne	.+2      	; 0x368 <vfprintf+0x3e>
 366:	4f c3       	rjmp	.+1694   	; 0xa06 <__EEPROM_REGION_LENGTH__+0x206>
 368:	44 2d       	mov	r20, r4
 36a:	91 01       	movw	r18, r2
 36c:	2f 5f       	subi	r18, 0xFF	; 255
 36e:	3f 4f       	sbci	r19, 0xFF	; 255
 370:	4f 4f       	sbci	r20, 0xFF	; 255
 372:	85 32       	cpi	r24, 0x25	; 37
 374:	19 f0       	breq	.+6      	; 0x37c <vfprintf+0x52>
 376:	19 01       	movw	r2, r18
 378:	44 2e       	mov	r4, r20
 37a:	0a c0       	rjmp	.+20     	; 0x390 <vfprintf+0x66>
 37c:	f9 01       	movw	r30, r18
 37e:	84 91       	lpm	r24, Z
 380:	47 fd       	sbrc	r20, 7
 382:	80 81       	ld	r24, Z
 384:	92 e0       	ldi	r25, 0x02	; 2
 386:	29 0e       	add	r2, r25
 388:	31 1c       	adc	r3, r1
 38a:	41 1c       	adc	r4, r1
 38c:	85 32       	cpi	r24, 0x25	; 37
 38e:	49 f4       	brne	.+18     	; 0x3a2 <vfprintf+0x78>
 390:	b6 01       	movw	r22, r12
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 398:	bf 86       	std	Y+15, r11	; 0x0f
 39a:	ae 86       	std	Y+14, r10	; 0x0e
 39c:	ae 84       	ldd	r10, Y+14	; 0x0e
 39e:	bf 84       	ldd	r11, Y+15	; 0x0f
 3a0:	dc cf       	rjmp	.-72     	; 0x35a <vfprintf+0x30>
 3a2:	10 e0       	ldi	r17, 0x00	; 0
 3a4:	f1 2c       	mov	r15, r1
 3a6:	00 e0       	ldi	r16, 0x00	; 0
 3a8:	00 32       	cpi	r16, 0x20	; 32
 3aa:	a0 f4       	brcc	.+40     	; 0x3d4 <vfprintf+0xaa>
 3ac:	8b 32       	cpi	r24, 0x2B	; 43
 3ae:	69 f0       	breq	.+26     	; 0x3ca <vfprintf+0xa0>
 3b0:	30 f4       	brcc	.+12     	; 0x3be <vfprintf+0x94>
 3b2:	80 32       	cpi	r24, 0x20	; 32
 3b4:	59 f0       	breq	.+22     	; 0x3cc <vfprintf+0xa2>
 3b6:	83 32       	cpi	r24, 0x23	; 35
 3b8:	69 f4       	brne	.+26     	; 0x3d4 <vfprintf+0xaa>
 3ba:	00 61       	ori	r16, 0x10	; 16
 3bc:	2c c0       	rjmp	.+88     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3be:	8d 32       	cpi	r24, 0x2D	; 45
 3c0:	39 f0       	breq	.+14     	; 0x3d0 <vfprintf+0xa6>
 3c2:	80 33       	cpi	r24, 0x30	; 48
 3c4:	39 f4       	brne	.+14     	; 0x3d4 <vfprintf+0xaa>
 3c6:	01 60       	ori	r16, 0x01	; 1
 3c8:	26 c0       	rjmp	.+76     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3ca:	02 60       	ori	r16, 0x02	; 2
 3cc:	04 60       	ori	r16, 0x04	; 4
 3ce:	23 c0       	rjmp	.+70     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3d0:	08 60       	ori	r16, 0x08	; 8
 3d2:	21 c0       	rjmp	.+66     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3d4:	07 fd       	sbrc	r16, 7
 3d6:	29 c0       	rjmp	.+82     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3d8:	90 ed       	ldi	r25, 0xD0	; 208
 3da:	98 0f       	add	r25, r24
 3dc:	9a 30       	cpi	r25, 0x0A	; 10
 3de:	78 f4       	brcc	.+30     	; 0x3fe <vfprintf+0xd4>
 3e0:	06 ff       	sbrs	r16, 6
 3e2:	06 c0       	rjmp	.+12     	; 0x3f0 <vfprintf+0xc6>
 3e4:	aa e0       	ldi	r26, 0x0A	; 10
 3e6:	1a 9f       	mul	r17, r26
 3e8:	90 0d       	add	r25, r0
 3ea:	11 24       	eor	r1, r1
 3ec:	19 2f       	mov	r17, r25
 3ee:	13 c0       	rjmp	.+38     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3f0:	ea e0       	ldi	r30, 0x0A	; 10
 3f2:	fe 9e       	mul	r15, r30
 3f4:	90 0d       	add	r25, r0
 3f6:	11 24       	eor	r1, r1
 3f8:	f9 2e       	mov	r15, r25
 3fa:	00 62       	ori	r16, 0x20	; 32
 3fc:	0c c0       	rjmp	.+24     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3fe:	8e 32       	cpi	r24, 0x2E	; 46
 400:	21 f4       	brne	.+8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 402:	06 fd       	sbrc	r16, 6
 404:	00 c3       	rjmp	.+1536   	; 0xa06 <__EEPROM_REGION_LENGTH__+0x206>
 406:	00 64       	ori	r16, 0x40	; 64
 408:	06 c0       	rjmp	.+12     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 40a:	8c 36       	cpi	r24, 0x6C	; 108
 40c:	11 f4       	brne	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	00 68       	ori	r16, 0x80	; 128
 410:	02 c0       	rjmp	.+4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 412:	88 36       	cpi	r24, 0x68	; 104
 414:	51 f4       	brne	.+20     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 416:	f1 01       	movw	r30, r2
 418:	84 91       	lpm	r24, Z
 41a:	47 fc       	sbrc	r4, 7
 41c:	80 81       	ld	r24, Z
 41e:	ff ef       	ldi	r31, 0xFF	; 255
 420:	2f 1a       	sub	r2, r31
 422:	3f 0a       	sbc	r3, r31
 424:	4f 0a       	sbc	r4, r31
 426:	81 11       	cpse	r24, r1
 428:	bf cf       	rjmp	.-130    	; 0x3a8 <vfprintf+0x7e>
 42a:	9b eb       	ldi	r25, 0xBB	; 187
 42c:	98 0f       	add	r25, r24
 42e:	93 30       	cpi	r25, 0x03	; 3
 430:	18 f4       	brcc	.+6      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 432:	00 61       	ori	r16, 0x10	; 16
 434:	80 5e       	subi	r24, 0xE0	; 224
 436:	06 c0       	rjmp	.+12     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 438:	9b e9       	ldi	r25, 0x9B	; 155
 43a:	98 0f       	add	r25, r24
 43c:	93 30       	cpi	r25, 0x03	; 3
 43e:	08 f0       	brcs	.+2      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 440:	66 c1       	rjmp	.+716    	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 442:	0f 7e       	andi	r16, 0xEF	; 239
 444:	06 ff       	sbrs	r16, 6
 446:	16 e0       	ldi	r17, 0x06	; 6
 448:	0f 73       	andi	r16, 0x3F	; 63
 44a:	70 2e       	mov	r7, r16
 44c:	85 36       	cpi	r24, 0x65	; 101
 44e:	21 f4       	brne	.+8      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 450:	20 2f       	mov	r18, r16
 452:	20 64       	ori	r18, 0x40	; 64
 454:	72 2e       	mov	r7, r18
 456:	08 c0       	rjmp	.+16     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 458:	86 36       	cpi	r24, 0x66	; 102
 45a:	21 f4       	brne	.+8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 45c:	80 2f       	mov	r24, r16
 45e:	80 68       	ori	r24, 0x80	; 128
 460:	78 2e       	mov	r7, r24
 462:	02 c0       	rjmp	.+4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 464:	11 11       	cpse	r17, r1
 466:	11 50       	subi	r17, 0x01	; 1
 468:	77 fe       	sbrs	r7, 7
 46a:	07 c0       	rjmp	.+14     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 46c:	1c 33       	cpi	r17, 0x3C	; 60
 46e:	50 f4       	brcc	.+20     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 470:	ee 24       	eor	r14, r14
 472:	e3 94       	inc	r14
 474:	e1 0e       	add	r14, r17
 476:	27 e0       	ldi	r18, 0x07	; 7
 478:	0b c0       	rjmp	.+22     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 47a:	18 30       	cpi	r17, 0x08	; 8
 47c:	38 f0       	brcs	.+14     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 47e:	27 e0       	ldi	r18, 0x07	; 7
 480:	17 e0       	ldi	r17, 0x07	; 7
 482:	05 c0       	rjmp	.+10     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 484:	27 e0       	ldi	r18, 0x07	; 7
 486:	6c e3       	ldi	r22, 0x3C	; 60
 488:	e6 2e       	mov	r14, r22
 48a:	02 c0       	rjmp	.+4      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 48c:	21 2f       	mov	r18, r17
 48e:	e1 2c       	mov	r14, r1
 490:	f5 01       	movw	r30, r10
 492:	34 96       	adiw	r30, 0x04	; 4
 494:	ff 87       	std	Y+15, r31	; 0x0f
 496:	ee 87       	std	Y+14, r30	; 0x0e
 498:	f5 01       	movw	r30, r10
 49a:	60 81       	ld	r22, Z
 49c:	71 81       	ldd	r23, Z+1	; 0x01
 49e:	82 81       	ldd	r24, Z+2	; 0x02
 4a0:	93 81       	ldd	r25, Z+3	; 0x03
 4a2:	0e 2d       	mov	r16, r14
 4a4:	ae 01       	movw	r20, r28
 4a6:	4f 5f       	subi	r20, 0xFF	; 255
 4a8:	5f 4f       	sbci	r21, 0xFF	; 255
 4aa:	0e 94 89 06 	call	0xd12	; 0xd12 <__ftoa_engine>
 4ae:	5c 01       	movw	r10, r24
 4b0:	59 80       	ldd	r5, Y+1	; 0x01
 4b2:	50 fe       	sbrs	r5, 0
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b6:	53 fe       	sbrs	r5, 3
 4b8:	06 c0       	rjmp	.+12     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4ba:	71 fc       	sbrc	r7, 1
 4bc:	06 c0       	rjmp	.+12     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4be:	72 fe       	sbrs	r7, 2
 4c0:	06 c0       	rjmp	.+12     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4c2:	00 e2       	ldi	r16, 0x20	; 32
 4c4:	05 c0       	rjmp	.+10     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4c6:	0d e2       	ldi	r16, 0x2D	; 45
 4c8:	03 c0       	rjmp	.+6      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4ca:	0b e2       	ldi	r16, 0x2B	; 43
 4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4ce:	00 e0       	ldi	r16, 0x00	; 0
 4d0:	85 2d       	mov	r24, r5
 4d2:	8c 70       	andi	r24, 0x0C	; 12
 4d4:	19 f0       	breq	.+6      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d6:	01 11       	cpse	r16, r1
 4d8:	73 c2       	rjmp	.+1254   	; 0x9c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 4da:	be c2       	rjmp	.+1404   	; 0xa58 <__EEPROM_REGION_LENGTH__+0x258>
 4dc:	77 fe       	sbrs	r7, 7
 4de:	0f c0       	rjmp	.+30     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e0:	ea 0c       	add	r14, r10
 4e2:	54 fe       	sbrs	r5, 4
 4e4:	04 c0       	rjmp	.+8      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4e6:	8a 81       	ldd	r24, Y+2	; 0x02
 4e8:	81 33       	cpi	r24, 0x31	; 49
 4ea:	09 f4       	brne	.+2      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ec:	ea 94       	dec	r14
 4ee:	1e 14       	cp	r1, r14
 4f0:	74 f5       	brge	.+92     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 4f2:	28 e0       	ldi	r18, 0x08	; 8
 4f4:	2e 15       	cp	r18, r14
 4f6:	78 f5       	brcc	.+94     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 4f8:	38 e0       	ldi	r19, 0x08	; 8
 4fa:	e3 2e       	mov	r14, r19
 4fc:	2c c0       	rjmp	.+88     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 4fe:	76 fc       	sbrc	r7, 6
 500:	2a c0       	rjmp	.+84     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 502:	81 2f       	mov	r24, r17
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	8a 15       	cp	r24, r10
 508:	9b 05       	cpc	r25, r11
 50a:	9c f0       	brlt	.+38     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 50c:	8c ef       	ldi	r24, 0xFC	; 252
 50e:	a8 16       	cp	r10, r24
 510:	8f ef       	ldi	r24, 0xFF	; 255
 512:	b8 06       	cpc	r11, r24
 514:	74 f0       	brlt	.+28     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 516:	97 2d       	mov	r25, r7
 518:	90 68       	ori	r25, 0x80	; 128
 51a:	79 2e       	mov	r7, r25
 51c:	0a c0       	rjmp	.+20     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 51e:	e2 e0       	ldi	r30, 0x02	; 2
 520:	f0 e0       	ldi	r31, 0x00	; 0
 522:	ec 0f       	add	r30, r28
 524:	fd 1f       	adc	r31, r29
 526:	e1 0f       	add	r30, r17
 528:	f1 1d       	adc	r31, r1
 52a:	80 81       	ld	r24, Z
 52c:	80 33       	cpi	r24, 0x30	; 48
 52e:	19 f4       	brne	.+6      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 530:	11 50       	subi	r17, 0x01	; 1
 532:	11 11       	cpse	r17, r1
 534:	f4 cf       	rjmp	.-24     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 536:	77 fe       	sbrs	r7, 7
 538:	0e c0       	rjmp	.+28     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 53a:	ee 24       	eor	r14, r14
 53c:	e3 94       	inc	r14
 53e:	e1 0e       	add	r14, r17
 540:	81 2f       	mov	r24, r17
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	a8 16       	cp	r10, r24
 546:	b9 06       	cpc	r11, r25
 548:	2c f4       	brge	.+10     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 54a:	1a 19       	sub	r17, r10
 54c:	04 c0       	rjmp	.+8      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 54e:	ee 24       	eor	r14, r14
 550:	e3 94       	inc	r14
 552:	01 c0       	rjmp	.+2      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 554:	10 e0       	ldi	r17, 0x00	; 0
 556:	77 fe       	sbrs	r7, 7
 558:	06 c0       	rjmp	.+12     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 55a:	1a 14       	cp	r1, r10
 55c:	1b 04       	cpc	r1, r11
 55e:	34 f4       	brge	.+12     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 560:	c5 01       	movw	r24, r10
 562:	01 96       	adiw	r24, 0x01	; 1
 564:	05 c0       	rjmp	.+10     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 566:	85 e0       	ldi	r24, 0x05	; 5
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	02 c0       	rjmp	.+4      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	01 11       	cpse	r16, r1
 572:	01 96       	adiw	r24, 0x01	; 1
 574:	11 23       	and	r17, r17
 576:	31 f0       	breq	.+12     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 578:	21 2f       	mov	r18, r17
 57a:	30 e0       	ldi	r19, 0x00	; 0
 57c:	2f 5f       	subi	r18, 0xFF	; 255
 57e:	3f 4f       	sbci	r19, 0xFF	; 255
 580:	82 0f       	add	r24, r18
 582:	93 1f       	adc	r25, r19
 584:	2f 2d       	mov	r18, r15
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	82 17       	cp	r24, r18
 58a:	93 07       	cpc	r25, r19
 58c:	14 f4       	brge	.+4      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 58e:	f8 1a       	sub	r15, r24
 590:	01 c0       	rjmp	.+2      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 592:	f1 2c       	mov	r15, r1
 594:	87 2d       	mov	r24, r7
 596:	89 70       	andi	r24, 0x09	; 9
 598:	49 f4       	brne	.+18     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59a:	ff 20       	and	r15, r15
 59c:	39 f0       	breq	.+14     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59e:	b6 01       	movw	r22, r12
 5a0:	80 e2       	ldi	r24, 0x20	; 32
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 5a8:	fa 94       	dec	r15
 5aa:	f7 cf       	rjmp	.-18     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 5ac:	00 23       	and	r16, r16
 5ae:	29 f0       	breq	.+10     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b0:	b6 01       	movw	r22, r12
 5b2:	80 2f       	mov	r24, r16
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 5ba:	73 fc       	sbrc	r7, 3
 5bc:	09 c0       	rjmp	.+18     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5be:	ff 20       	and	r15, r15
 5c0:	39 f0       	breq	.+14     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5c2:	b6 01       	movw	r22, r12
 5c4:	80 e3       	ldi	r24, 0x30	; 48
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 5cc:	fa 94       	dec	r15
 5ce:	f7 cf       	rjmp	.-18     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5d0:	77 fe       	sbrs	r7, 7
 5d2:	49 c0       	rjmp	.+146    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 5d4:	35 01       	movw	r6, r10
 5d6:	b7 fe       	sbrs	r11, 7
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5da:	61 2c       	mov	r6, r1
 5dc:	71 2c       	mov	r7, r1
 5de:	c5 01       	movw	r24, r10
 5e0:	86 19       	sub	r24, r6
 5e2:	97 09       	sbc	r25, r7
 5e4:	88 24       	eor	r8, r8
 5e6:	83 94       	inc	r8
 5e8:	91 2c       	mov	r9, r1
 5ea:	8c 0e       	add	r8, r28
 5ec:	9d 1e       	adc	r9, r29
 5ee:	88 0e       	add	r8, r24
 5f0:	99 1e       	adc	r9, r25
 5f2:	f5 01       	movw	r30, r10
 5f4:	ee 19       	sub	r30, r14
 5f6:	f1 09       	sbc	r31, r1
 5f8:	f9 8b       	std	Y+17, r31	; 0x11
 5fa:	e8 8b       	std	Y+16, r30	; 0x10
 5fc:	01 2f       	mov	r16, r17
 5fe:	10 e0       	ldi	r17, 0x00	; 0
 600:	11 95       	neg	r17
 602:	01 95       	neg	r16
 604:	11 09       	sbc	r17, r1
 606:	ff ef       	ldi	r31, 0xFF	; 255
 608:	6f 16       	cp	r6, r31
 60a:	7f 06       	cpc	r7, r31
 60c:	29 f4       	brne	.+10     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60e:	b6 01       	movw	r22, r12
 610:	8e e2       	ldi	r24, 0x2E	; 46
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 618:	a6 14       	cp	r10, r6
 61a:	b7 04       	cpc	r11, r7
 61c:	44 f0       	brlt	.+16     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 61e:	88 89       	ldd	r24, Y+16	; 0x10
 620:	99 89       	ldd	r25, Y+17	; 0x11
 622:	86 15       	cp	r24, r6
 624:	97 05       	cpc	r25, r7
 626:	1c f4       	brge	.+6      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 628:	f4 01       	movw	r30, r8
 62a:	81 81       	ldd	r24, Z+1	; 0x01
 62c:	01 c0       	rjmp	.+2      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 62e:	80 e3       	ldi	r24, 0x30	; 48
 630:	f1 e0       	ldi	r31, 0x01	; 1
 632:	6f 1a       	sub	r6, r31
 634:	71 08       	sbc	r7, r1
 636:	2f ef       	ldi	r18, 0xFF	; 255
 638:	82 1a       	sub	r8, r18
 63a:	92 0a       	sbc	r9, r18
 63c:	60 16       	cp	r6, r16
 63e:	71 06       	cpc	r7, r17
 640:	2c f0       	brlt	.+10     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 642:	b6 01       	movw	r22, r12
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 64a:	dd cf       	rjmp	.-70     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 64c:	a6 14       	cp	r10, r6
 64e:	b7 04       	cpc	r11, r7
 650:	39 f4       	brne	.+14     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 652:	9a 81       	ldd	r25, Y+2	; 0x02
 654:	96 33       	cpi	r25, 0x36	; 54
 656:	18 f4       	brcc	.+6      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 658:	95 33       	cpi	r25, 0x35	; 53
 65a:	11 f4       	brne	.+4      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 65c:	54 fe       	sbrs	r5, 4
 65e:	81 e3       	ldi	r24, 0x31	; 49
 660:	b6 01       	movw	r22, r12
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	51 c0       	rjmp	.+162    	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 666:	8a 81       	ldd	r24, Y+2	; 0x02
 668:	81 33       	cpi	r24, 0x31	; 49
 66a:	19 f0       	breq	.+6      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 66c:	95 2d       	mov	r25, r5
 66e:	9f 7e       	andi	r25, 0xEF	; 239
 670:	59 2e       	mov	r5, r25
 672:	b6 01       	movw	r22, r12
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 67a:	11 11       	cpse	r17, r1
 67c:	05 c0       	rjmp	.+10     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 67e:	74 fc       	sbrc	r7, 4
 680:	1c c0       	rjmp	.+56     	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 682:	85 e6       	ldi	r24, 0x65	; 101
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	1b c0       	rjmp	.+54     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 688:	b6 01       	movw	r22, r12
 68a:	8e e2       	ldi	r24, 0x2E	; 46
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 692:	02 e0       	ldi	r16, 0x02	; 2
 694:	01 0f       	add	r16, r17
 696:	82 e0       	ldi	r24, 0x02	; 2
 698:	11 e0       	ldi	r17, 0x01	; 1
 69a:	18 0f       	add	r17, r24
 69c:	e1 e0       	ldi	r30, 0x01	; 1
 69e:	f0 e0       	ldi	r31, 0x00	; 0
 6a0:	ec 0f       	add	r30, r28
 6a2:	fd 1f       	adc	r31, r29
 6a4:	e8 0f       	add	r30, r24
 6a6:	f1 1d       	adc	r31, r1
 6a8:	80 81       	ld	r24, Z
 6aa:	b6 01       	movw	r22, r12
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 6b2:	81 2f       	mov	r24, r17
 6b4:	10 13       	cpse	r17, r16
 6b6:	f0 cf       	rjmp	.-32     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 6b8:	e2 cf       	rjmp	.-60     	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 6ba:	85 e4       	ldi	r24, 0x45	; 69
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	b6 01       	movw	r22, r12
 6c0:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 6c4:	b7 fc       	sbrc	r11, 7
 6c6:	05 c0       	rjmp	.+10     	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6c8:	a1 14       	cp	r10, r1
 6ca:	b1 04       	cpc	r11, r1
 6cc:	39 f4       	brne	.+14     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6ce:	54 fe       	sbrs	r5, 4
 6d0:	05 c0       	rjmp	.+10     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6d2:	b1 94       	neg	r11
 6d4:	a1 94       	neg	r10
 6d6:	b1 08       	sbc	r11, r1
 6d8:	8d e2       	ldi	r24, 0x2D	; 45
 6da:	01 c0       	rjmp	.+2      	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6dc:	8b e2       	ldi	r24, 0x2B	; 43
 6de:	b6 01       	movw	r22, r12
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 6e6:	80 e3       	ldi	r24, 0x30	; 48
 6e8:	ea e0       	ldi	r30, 0x0A	; 10
 6ea:	ae 16       	cp	r10, r30
 6ec:	b1 04       	cpc	r11, r1
 6ee:	2c f0       	brlt	.+10     	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f0:	8f 5f       	subi	r24, 0xFF	; 255
 6f2:	aa e0       	ldi	r26, 0x0A	; 10
 6f4:	aa 1a       	sub	r10, r26
 6f6:	b1 08       	sbc	r11, r1
 6f8:	f7 cf       	rjmp	.-18     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6fa:	b6 01       	movw	r22, r12
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 702:	b6 01       	movw	r22, r12
 704:	c5 01       	movw	r24, r10
 706:	c0 96       	adiw	r24, 0x30	; 48
 708:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 70c:	72 c1       	rjmp	.+740    	; 0x9f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 70e:	83 36       	cpi	r24, 0x63	; 99
 710:	31 f0       	breq	.+12     	; 0x71e <__LOCK_REGION_LENGTH__+0x31e>
 712:	83 37       	cpi	r24, 0x73	; 115
 714:	91 f0       	breq	.+36     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 716:	83 35       	cpi	r24, 0x53	; 83
 718:	09 f0       	breq	.+2      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 71a:	5d c0       	rjmp	.+186    	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
 71c:	24 c0       	rjmp	.+72     	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 71e:	c5 01       	movw	r24, r10
 720:	02 96       	adiw	r24, 0x02	; 2
 722:	9f 87       	std	Y+15, r25	; 0x0f
 724:	8e 87       	std	Y+14, r24	; 0x0e
 726:	f5 01       	movw	r30, r10
 728:	80 81       	ld	r24, Z
 72a:	89 83       	std	Y+1, r24	; 0x01
 72c:	6a 88       	ldd	r6, Y+18	; 0x12
 72e:	7b 88       	ldd	r7, Y+19	; 0x13
 730:	8c 88       	ldd	r8, Y+20	; 0x14
 732:	aa 24       	eor	r10, r10
 734:	a3 94       	inc	r10
 736:	b1 2c       	mov	r11, r1
 738:	14 c0       	rjmp	.+40     	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
 73a:	c5 01       	movw	r24, r10
 73c:	03 96       	adiw	r24, 0x03	; 3
 73e:	9f 87       	std	Y+15, r25	; 0x0f
 740:	8e 87       	std	Y+14, r24	; 0x0e
 742:	f5 01       	movw	r30, r10
 744:	60 80       	ld	r6, Z
 746:	71 80       	ldd	r7, Z+1	; 0x01
 748:	82 80       	ldd	r8, Z+2	; 0x02
 74a:	06 ff       	sbrs	r16, 6
 74c:	03 c0       	rjmp	.+6      	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
 74e:	41 2f       	mov	r20, r17
 750:	50 e0       	ldi	r21, 0x00	; 0
 752:	02 c0       	rjmp	.+4      	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 754:	4f ef       	ldi	r20, 0xFF	; 255
 756:	5f ef       	ldi	r21, 0xFF	; 255
 758:	88 2d       	mov	r24, r8
 75a:	b3 01       	movw	r22, r6
 75c:	0e 94 23 0c 	call	0x1846	; 0x1846 <strnlen>
 760:	5c 01       	movw	r10, r24
 762:	0f 77       	andi	r16, 0x7F	; 127
 764:	15 c0       	rjmp	.+42     	; 0x790 <__LOCK_REGION_LENGTH__+0x390>
 766:	c5 01       	movw	r24, r10
 768:	03 96       	adiw	r24, 0x03	; 3
 76a:	9f 87       	std	Y+15, r25	; 0x0f
 76c:	8e 87       	std	Y+14, r24	; 0x0e
 76e:	f5 01       	movw	r30, r10
 770:	60 80       	ld	r6, Z
 772:	71 80       	ldd	r7, Z+1	; 0x01
 774:	82 80       	ldd	r8, Z+2	; 0x02
 776:	06 ff       	sbrs	r16, 6
 778:	03 c0       	rjmp	.+6      	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 77a:	41 2f       	mov	r20, r17
 77c:	50 e0       	ldi	r21, 0x00	; 0
 77e:	02 c0       	rjmp	.+4      	; 0x784 <__LOCK_REGION_LENGTH__+0x384>
 780:	4f ef       	ldi	r20, 0xFF	; 255
 782:	5f ef       	ldi	r21, 0xFF	; 255
 784:	88 2d       	mov	r24, r8
 786:	b3 01       	movw	r22, r6
 788:	0e 94 23 0c 	call	0x1846	; 0x1846 <strnlen>
 78c:	5c 01       	movw	r10, r24
 78e:	00 68       	ori	r16, 0x80	; 128
 790:	03 fd       	sbrc	r16, 3
 792:	1d c0       	rjmp	.+58     	; 0x7ce <__LOCK_REGION_LENGTH__+0x3ce>
 794:	8f 2d       	mov	r24, r15
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	a8 16       	cp	r10, r24
 79a:	b9 06       	cpc	r11, r25
 79c:	c0 f4       	brcc	.+48     	; 0x7ce <__LOCK_REGION_LENGTH__+0x3ce>
 79e:	b6 01       	movw	r22, r12
 7a0:	80 e2       	ldi	r24, 0x20	; 32
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 7a8:	fa 94       	dec	r15
 7aa:	f4 cf       	rjmp	.-24     	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 7ac:	f3 01       	movw	r30, r6
 7ae:	84 91       	lpm	r24, Z
 7b0:	87 fc       	sbrc	r8, 7
 7b2:	80 81       	ld	r24, Z
 7b4:	ff ef       	ldi	r31, 0xFF	; 255
 7b6:	6f 1a       	sub	r6, r31
 7b8:	7f 0a       	sbc	r7, r31
 7ba:	8f 0a       	sbc	r8, r31
 7bc:	b6 01       	movw	r22, r12
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 7c4:	f1 10       	cpse	r15, r1
 7c6:	fa 94       	dec	r15
 7c8:	21 e0       	ldi	r18, 0x01	; 1
 7ca:	a2 1a       	sub	r10, r18
 7cc:	b1 08       	sbc	r11, r1
 7ce:	a1 14       	cp	r10, r1
 7d0:	b1 04       	cpc	r11, r1
 7d2:	61 f7       	brne	.-40     	; 0x7ac <__LOCK_REGION_LENGTH__+0x3ac>
 7d4:	0e c1       	rjmp	.+540    	; 0x9f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 7d6:	84 36       	cpi	r24, 0x64	; 100
 7d8:	11 f0       	breq	.+4      	; 0x7de <__LOCK_REGION_LENGTH__+0x3de>
 7da:	89 36       	cpi	r24, 0x69	; 105
 7dc:	79 f5       	brne	.+94     	; 0x83c <__EEPROM_REGION_LENGTH__+0x3c>
 7de:	c5 01       	movw	r24, r10
 7e0:	07 ff       	sbrs	r16, 7
 7e2:	09 c0       	rjmp	.+18     	; 0x7f6 <__LOCK_REGION_LENGTH__+0x3f6>
 7e4:	04 96       	adiw	r24, 0x04	; 4
 7e6:	9f 87       	std	Y+15, r25	; 0x0f
 7e8:	8e 87       	std	Y+14, r24	; 0x0e
 7ea:	f5 01       	movw	r30, r10
 7ec:	60 81       	ld	r22, Z
 7ee:	71 81       	ldd	r23, Z+1	; 0x01
 7f0:	82 81       	ldd	r24, Z+2	; 0x02
 7f2:	93 81       	ldd	r25, Z+3	; 0x03
 7f4:	0a c0       	rjmp	.+20     	; 0x80a <__EEPROM_REGION_LENGTH__+0xa>
 7f6:	02 96       	adiw	r24, 0x02	; 2
 7f8:	9f 87       	std	Y+15, r25	; 0x0f
 7fa:	8e 87       	std	Y+14, r24	; 0x0e
 7fc:	f5 01       	movw	r30, r10
 7fe:	60 81       	ld	r22, Z
 800:	71 81       	ldd	r23, Z+1	; 0x01
 802:	07 2e       	mov	r0, r23
 804:	00 0c       	add	r0, r0
 806:	88 0b       	sbc	r24, r24
 808:	99 0b       	sbc	r25, r25
 80a:	0f 76       	andi	r16, 0x6F	; 111
 80c:	e0 2e       	mov	r14, r16
 80e:	97 ff       	sbrs	r25, 7
 810:	0a c0       	rjmp	.+20     	; 0x826 <__EEPROM_REGION_LENGTH__+0x26>
 812:	90 95       	com	r25
 814:	80 95       	com	r24
 816:	70 95       	com	r23
 818:	61 95       	neg	r22
 81a:	7f 4f       	sbci	r23, 0xFF	; 255
 81c:	8f 4f       	sbci	r24, 0xFF	; 255
 81e:	9f 4f       	sbci	r25, 0xFF	; 255
 820:	f0 2f       	mov	r31, r16
 822:	f0 68       	ori	r31, 0x80	; 128
 824:	ef 2e       	mov	r14, r31
 826:	2a e0       	ldi	r18, 0x0A	; 10
 828:	30 e0       	ldi	r19, 0x00	; 0
 82a:	ae 01       	movw	r20, r28
 82c:	4f 5f       	subi	r20, 0xFF	; 255
 82e:	5f 4f       	sbci	r21, 0xFF	; 255
 830:	0e 94 61 07 	call	0xec2	; 0xec2 <__ultoa_invert>
 834:	a8 2e       	mov	r10, r24
 836:	2c 85       	ldd	r18, Y+12	; 0x0c
 838:	a2 1a       	sub	r10, r18
 83a:	4b c0       	rjmp	.+150    	; 0x8d2 <__EEPROM_REGION_LENGTH__+0xd2>
 83c:	85 37       	cpi	r24, 0x75	; 117
 83e:	29 f4       	brne	.+10     	; 0x84a <__EEPROM_REGION_LENGTH__+0x4a>
 840:	0f 7e       	andi	r16, 0xEF	; 239
 842:	e0 2e       	mov	r14, r16
 844:	2a e0       	ldi	r18, 0x0A	; 10
 846:	30 e0       	ldi	r19, 0x00	; 0
 848:	25 c0       	rjmp	.+74     	; 0x894 <__EEPROM_REGION_LENGTH__+0x94>
 84a:	90 2f       	mov	r25, r16
 84c:	99 7f       	andi	r25, 0xF9	; 249
 84e:	e9 2e       	mov	r14, r25
 850:	8f 36       	cpi	r24, 0x6F	; 111
 852:	c1 f0       	breq	.+48     	; 0x884 <__EEPROM_REGION_LENGTH__+0x84>
 854:	18 f4       	brcc	.+6      	; 0x85c <__EEPROM_REGION_LENGTH__+0x5c>
 856:	88 35       	cpi	r24, 0x58	; 88
 858:	79 f0       	breq	.+30     	; 0x878 <__EEPROM_REGION_LENGTH__+0x78>
 85a:	d5 c0       	rjmp	.+426    	; 0xa06 <__EEPROM_REGION_LENGTH__+0x206>
 85c:	80 37       	cpi	r24, 0x70	; 112
 85e:	19 f0       	breq	.+6      	; 0x866 <__EEPROM_REGION_LENGTH__+0x66>
 860:	88 37       	cpi	r24, 0x78	; 120
 862:	21 f0       	breq	.+8      	; 0x86c <__EEPROM_REGION_LENGTH__+0x6c>
 864:	d0 c0       	rjmp	.+416    	; 0xa06 <__EEPROM_REGION_LENGTH__+0x206>
 866:	a9 2f       	mov	r26, r25
 868:	a0 61       	ori	r26, 0x10	; 16
 86a:	ea 2e       	mov	r14, r26
 86c:	e4 fe       	sbrs	r14, 4
 86e:	0d c0       	rjmp	.+26     	; 0x88a <__EEPROM_REGION_LENGTH__+0x8a>
 870:	ee 2d       	mov	r30, r14
 872:	e4 60       	ori	r30, 0x04	; 4
 874:	ee 2e       	mov	r14, r30
 876:	09 c0       	rjmp	.+18     	; 0x88a <__EEPROM_REGION_LENGTH__+0x8a>
 878:	04 ff       	sbrs	r16, 4
 87a:	0a c0       	rjmp	.+20     	; 0x890 <__EEPROM_REGION_LENGTH__+0x90>
 87c:	f9 2f       	mov	r31, r25
 87e:	f6 60       	ori	r31, 0x06	; 6
 880:	ef 2e       	mov	r14, r31
 882:	06 c0       	rjmp	.+12     	; 0x890 <__EEPROM_REGION_LENGTH__+0x90>
 884:	28 e0       	ldi	r18, 0x08	; 8
 886:	30 e0       	ldi	r19, 0x00	; 0
 888:	05 c0       	rjmp	.+10     	; 0x894 <__EEPROM_REGION_LENGTH__+0x94>
 88a:	20 e1       	ldi	r18, 0x10	; 16
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	02 c0       	rjmp	.+4      	; 0x894 <__EEPROM_REGION_LENGTH__+0x94>
 890:	20 e1       	ldi	r18, 0x10	; 16
 892:	32 e0       	ldi	r19, 0x02	; 2
 894:	c5 01       	movw	r24, r10
 896:	e7 fe       	sbrs	r14, 7
 898:	09 c0       	rjmp	.+18     	; 0x8ac <__EEPROM_REGION_LENGTH__+0xac>
 89a:	04 96       	adiw	r24, 0x04	; 4
 89c:	9f 87       	std	Y+15, r25	; 0x0f
 89e:	8e 87       	std	Y+14, r24	; 0x0e
 8a0:	f5 01       	movw	r30, r10
 8a2:	60 81       	ld	r22, Z
 8a4:	71 81       	ldd	r23, Z+1	; 0x01
 8a6:	82 81       	ldd	r24, Z+2	; 0x02
 8a8:	93 81       	ldd	r25, Z+3	; 0x03
 8aa:	08 c0       	rjmp	.+16     	; 0x8bc <__EEPROM_REGION_LENGTH__+0xbc>
 8ac:	02 96       	adiw	r24, 0x02	; 2
 8ae:	9f 87       	std	Y+15, r25	; 0x0f
 8b0:	8e 87       	std	Y+14, r24	; 0x0e
 8b2:	f5 01       	movw	r30, r10
 8b4:	60 81       	ld	r22, Z
 8b6:	71 81       	ldd	r23, Z+1	; 0x01
 8b8:	80 e0       	ldi	r24, 0x00	; 0
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	ae 01       	movw	r20, r28
 8be:	4f 5f       	subi	r20, 0xFF	; 255
 8c0:	5f 4f       	sbci	r21, 0xFF	; 255
 8c2:	0e 94 61 07 	call	0xec2	; 0xec2 <__ultoa_invert>
 8c6:	a8 2e       	mov	r10, r24
 8c8:	fc 85       	ldd	r31, Y+12	; 0x0c
 8ca:	af 1a       	sub	r10, r31
 8cc:	2e 2d       	mov	r18, r14
 8ce:	2f 77       	andi	r18, 0x7F	; 127
 8d0:	e2 2e       	mov	r14, r18
 8d2:	e6 fe       	sbrs	r14, 6
 8d4:	0b c0       	rjmp	.+22     	; 0x8ec <__EEPROM_REGION_LENGTH__+0xec>
 8d6:	0e 2d       	mov	r16, r14
 8d8:	0e 7f       	andi	r16, 0xFE	; 254
 8da:	a1 16       	cp	r10, r17
 8dc:	50 f4       	brcc	.+20     	; 0x8f2 <__EEPROM_REGION_LENGTH__+0xf2>
 8de:	e4 fe       	sbrs	r14, 4
 8e0:	0a c0       	rjmp	.+20     	; 0x8f6 <__EEPROM_REGION_LENGTH__+0xf6>
 8e2:	e2 fc       	sbrc	r14, 2
 8e4:	08 c0       	rjmp	.+16     	; 0x8f6 <__EEPROM_REGION_LENGTH__+0xf6>
 8e6:	0e 2d       	mov	r16, r14
 8e8:	0e 7e       	andi	r16, 0xEE	; 238
 8ea:	05 c0       	rjmp	.+10     	; 0x8f6 <__EEPROM_REGION_LENGTH__+0xf6>
 8ec:	ba 2c       	mov	r11, r10
 8ee:	0e 2d       	mov	r16, r14
 8f0:	03 c0       	rjmp	.+6      	; 0x8f8 <__EEPROM_REGION_LENGTH__+0xf8>
 8f2:	ba 2c       	mov	r11, r10
 8f4:	01 c0       	rjmp	.+2      	; 0x8f8 <__EEPROM_REGION_LENGTH__+0xf8>
 8f6:	b1 2e       	mov	r11, r17
 8f8:	04 ff       	sbrs	r16, 4
 8fa:	0d c0       	rjmp	.+26     	; 0x916 <__EEPROM_REGION_LENGTH__+0x116>
 8fc:	fe 01       	movw	r30, r28
 8fe:	ea 0d       	add	r30, r10
 900:	f1 1d       	adc	r31, r1
 902:	80 81       	ld	r24, Z
 904:	80 33       	cpi	r24, 0x30	; 48
 906:	11 f4       	brne	.+4      	; 0x90c <__EEPROM_REGION_LENGTH__+0x10c>
 908:	09 7e       	andi	r16, 0xE9	; 233
 90a:	09 c0       	rjmp	.+18     	; 0x91e <__EEPROM_REGION_LENGTH__+0x11e>
 90c:	02 ff       	sbrs	r16, 2
 90e:	06 c0       	rjmp	.+12     	; 0x91c <__EEPROM_REGION_LENGTH__+0x11c>
 910:	b3 94       	inc	r11
 912:	b3 94       	inc	r11
 914:	04 c0       	rjmp	.+8      	; 0x91e <__EEPROM_REGION_LENGTH__+0x11e>
 916:	80 2f       	mov	r24, r16
 918:	86 78       	andi	r24, 0x86	; 134
 91a:	09 f0       	breq	.+2      	; 0x91e <__EEPROM_REGION_LENGTH__+0x11e>
 91c:	b3 94       	inc	r11
 91e:	03 fd       	sbrc	r16, 3
 920:	11 c0       	rjmp	.+34     	; 0x944 <__EEPROM_REGION_LENGTH__+0x144>
 922:	00 ff       	sbrs	r16, 0
 924:	06 c0       	rjmp	.+12     	; 0x932 <__EEPROM_REGION_LENGTH__+0x132>
 926:	bf 14       	cp	r11, r15
 928:	88 f4       	brcc	.+34     	; 0x94c <__EEPROM_REGION_LENGTH__+0x14c>
 92a:	fa 0c       	add	r15, r10
 92c:	1f 2d       	mov	r17, r15
 92e:	1b 19       	sub	r17, r11
 930:	0e c0       	rjmp	.+28     	; 0x94e <__EEPROM_REGION_LENGTH__+0x14e>
 932:	bf 14       	cp	r11, r15
 934:	60 f4       	brcc	.+24     	; 0x94e <__EEPROM_REGION_LENGTH__+0x14e>
 936:	b6 01       	movw	r22, r12
 938:	80 e2       	ldi	r24, 0x20	; 32
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 940:	b3 94       	inc	r11
 942:	f7 cf       	rjmp	.-18     	; 0x932 <__EEPROM_REGION_LENGTH__+0x132>
 944:	bf 14       	cp	r11, r15
 946:	18 f4       	brcc	.+6      	; 0x94e <__EEPROM_REGION_LENGTH__+0x14e>
 948:	fb 18       	sub	r15, r11
 94a:	02 c0       	rjmp	.+4      	; 0x950 <__EEPROM_REGION_LENGTH__+0x150>
 94c:	1a 2d       	mov	r17, r10
 94e:	f1 2c       	mov	r15, r1
 950:	04 ff       	sbrs	r16, 4
 952:	10 c0       	rjmp	.+32     	; 0x974 <__EEPROM_REGION_LENGTH__+0x174>
 954:	b6 01       	movw	r22, r12
 956:	80 e3       	ldi	r24, 0x30	; 48
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 95e:	02 ff       	sbrs	r16, 2
 960:	17 c0       	rjmp	.+46     	; 0x990 <__EEPROM_REGION_LENGTH__+0x190>
 962:	01 fd       	sbrc	r16, 1
 964:	03 c0       	rjmp	.+6      	; 0x96c <__EEPROM_REGION_LENGTH__+0x16c>
 966:	88 e7       	ldi	r24, 0x78	; 120
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	02 c0       	rjmp	.+4      	; 0x970 <__EEPROM_REGION_LENGTH__+0x170>
 96c:	88 e5       	ldi	r24, 0x58	; 88
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	b6 01       	movw	r22, r12
 972:	0c c0       	rjmp	.+24     	; 0x98c <__EEPROM_REGION_LENGTH__+0x18c>
 974:	80 2f       	mov	r24, r16
 976:	86 78       	andi	r24, 0x86	; 134
 978:	59 f0       	breq	.+22     	; 0x990 <__EEPROM_REGION_LENGTH__+0x190>
 97a:	01 ff       	sbrs	r16, 1
 97c:	02 c0       	rjmp	.+4      	; 0x982 <__EEPROM_REGION_LENGTH__+0x182>
 97e:	8b e2       	ldi	r24, 0x2B	; 43
 980:	01 c0       	rjmp	.+2      	; 0x984 <__EEPROM_REGION_LENGTH__+0x184>
 982:	80 e2       	ldi	r24, 0x20	; 32
 984:	07 fd       	sbrc	r16, 7
 986:	8d e2       	ldi	r24, 0x2D	; 45
 988:	b6 01       	movw	r22, r12
 98a:	90 e0       	ldi	r25, 0x00	; 0
 98c:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 990:	a1 16       	cp	r10, r17
 992:	38 f4       	brcc	.+14     	; 0x9a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 994:	b6 01       	movw	r22, r12
 996:	80 e3       	ldi	r24, 0x30	; 48
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 99e:	11 50       	subi	r17, 0x01	; 1
 9a0:	f7 cf       	rjmp	.-18     	; 0x990 <__EEPROM_REGION_LENGTH__+0x190>
 9a2:	aa 94       	dec	r10
 9a4:	e1 e0       	ldi	r30, 0x01	; 1
 9a6:	f0 e0       	ldi	r31, 0x00	; 0
 9a8:	ec 0f       	add	r30, r28
 9aa:	fd 1f       	adc	r31, r29
 9ac:	ea 0d       	add	r30, r10
 9ae:	f1 1d       	adc	r31, r1
 9b0:	80 81       	ld	r24, Z
 9b2:	b6 01       	movw	r22, r12
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 9ba:	a1 10       	cpse	r10, r1
 9bc:	f2 cf       	rjmp	.-28     	; 0x9a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 9be:	19 c0       	rjmp	.+50     	; 0x9f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 9c0:	f4 e0       	ldi	r31, 0x04	; 4
 9c2:	ff 15       	cp	r31, r15
 9c4:	80 f5       	brcc	.+96     	; 0xa26 <__EEPROM_REGION_LENGTH__+0x226>
 9c6:	84 e0       	ldi	r24, 0x04	; 4
 9c8:	f8 1a       	sub	r15, r24
 9ca:	73 fe       	sbrs	r7, 3
 9cc:	23 c0       	rjmp	.+70     	; 0xa14 <__EEPROM_REGION_LENGTH__+0x214>
 9ce:	01 11       	cpse	r16, r1
 9d0:	2b c0       	rjmp	.+86     	; 0xa28 <__EEPROM_REGION_LENGTH__+0x228>
 9d2:	53 fe       	sbrs	r5, 3
 9d4:	2f c0       	rjmp	.+94     	; 0xa34 <__EEPROM_REGION_LENGTH__+0x234>
 9d6:	56 e2       	ldi	r21, 0x26	; 38
 9d8:	85 2e       	mov	r8, r21
 9da:	53 e0       	ldi	r21, 0x03	; 3
 9dc:	95 2e       	mov	r9, r21
 9de:	50 e0       	ldi	r21, 0x00	; 0
 9e0:	a5 2e       	mov	r10, r21
 9e2:	07 2d       	mov	r16, r7
 9e4:	00 71       	andi	r16, 0x10	; 16
 9e6:	f4 01       	movw	r30, r8
 9e8:	84 91       	lpm	r24, Z
 9ea:	a7 fc       	sbrc	r10, 7
 9ec:	80 81       	ld	r24, Z
 9ee:	81 11       	cpse	r24, r1
 9f0:	28 c0       	rjmp	.+80     	; 0xa42 <__EEPROM_REGION_LENGTH__+0x242>
 9f2:	ff 20       	and	r15, r15
 9f4:	09 f4       	brne	.+2      	; 0x9f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 9f6:	d2 cc       	rjmp	.-1628   	; 0x39c <vfprintf+0x72>
 9f8:	b6 01       	movw	r22, r12
 9fa:	80 e2       	ldi	r24, 0x20	; 32
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 a02:	fa 94       	dec	r15
 a04:	f6 cf       	rjmp	.-20     	; 0x9f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 a06:	f6 01       	movw	r30, r12
 a08:	87 81       	ldd	r24, Z+7	; 0x07
 a0a:	90 85       	ldd	r25, Z+8	; 0x08
 a0c:	2c c0       	rjmp	.+88     	; 0xa66 <__EEPROM_REGION_LENGTH__+0x266>
 a0e:	8f ef       	ldi	r24, 0xFF	; 255
 a10:	9f ef       	ldi	r25, 0xFF	; 255
 a12:	29 c0       	rjmp	.+82     	; 0xa66 <__EEPROM_REGION_LENGTH__+0x266>
 a14:	b6 01       	movw	r22, r12
 a16:	80 e2       	ldi	r24, 0x20	; 32
 a18:	90 e0       	ldi	r25, 0x00	; 0
 a1a:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 a1e:	fa 94       	dec	r15
 a20:	f1 10       	cpse	r15, r1
 a22:	f8 cf       	rjmp	.-16     	; 0xa14 <__EEPROM_REGION_LENGTH__+0x214>
 a24:	d4 cf       	rjmp	.-88     	; 0x9ce <__EEPROM_REGION_LENGTH__+0x1ce>
 a26:	f1 2c       	mov	r15, r1
 a28:	b6 01       	movw	r22, r12
 a2a:	80 2f       	mov	r24, r16
 a2c:	90 e0       	ldi	r25, 0x00	; 0
 a2e:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 a32:	cf cf       	rjmp	.-98     	; 0x9d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 a34:	42 e2       	ldi	r20, 0x22	; 34
 a36:	84 2e       	mov	r8, r20
 a38:	43 e0       	ldi	r20, 0x03	; 3
 a3a:	94 2e       	mov	r9, r20
 a3c:	40 e0       	ldi	r20, 0x00	; 0
 a3e:	a4 2e       	mov	r10, r20
 a40:	d0 cf       	rjmp	.-96     	; 0x9e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 a42:	01 11       	cpse	r16, r1
 a44:	80 52       	subi	r24, 0x20	; 32
 a46:	b6 01       	movw	r22, r12
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	0e 94 aa 08 	call	0x1154	; 0x1154 <fputc>
 a4e:	ff ef       	ldi	r31, 0xFF	; 255
 a50:	8f 1a       	sub	r8, r31
 a52:	9f 0a       	sbc	r9, r31
 a54:	af 0a       	sbc	r10, r31
 a56:	c7 cf       	rjmp	.-114    	; 0x9e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 a58:	23 e0       	ldi	r18, 0x03	; 3
 a5a:	2f 15       	cp	r18, r15
 a5c:	10 f4       	brcc	.+4      	; 0xa62 <__EEPROM_REGION_LENGTH__+0x262>
 a5e:	83 e0       	ldi	r24, 0x03	; 3
 a60:	b3 cf       	rjmp	.-154    	; 0x9c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 a62:	f1 2c       	mov	r15, r1
 a64:	b6 cf       	rjmp	.-148    	; 0x9d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 a66:	64 96       	adiw	r28, 0x14	; 20
 a68:	e2 e1       	ldi	r30, 0x12	; 18
 a6a:	0c 94 08 0c 	jmp	0x1810	; 0x1810 <__epilogue_restores__>

Disassembly of section .text.libgcc:

00001a72 <__tablejump2__>:
    1a72:	ee 0f       	add	r30, r30
    1a74:	ff 1f       	adc	r31, r31
    1a76:	05 90       	lpm	r0, Z+
    1a78:	f4 91       	lpm	r31, Z
    1a7a:	e0 2d       	mov	r30, r0
    1a7c:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

000017d8 <__prologue_saves__>:
    17d8:	2f 92       	push	r2
    17da:	3f 92       	push	r3
    17dc:	4f 92       	push	r4
    17de:	5f 92       	push	r5
    17e0:	6f 92       	push	r6
    17e2:	7f 92       	push	r7
    17e4:	8f 92       	push	r8
    17e6:	9f 92       	push	r9
    17e8:	af 92       	push	r10
    17ea:	bf 92       	push	r11
    17ec:	cf 92       	push	r12
    17ee:	df 92       	push	r13
    17f0:	ef 92       	push	r14
    17f2:	ff 92       	push	r15
    17f4:	0f 93       	push	r16
    17f6:	1f 93       	push	r17
    17f8:	cf 93       	push	r28
    17fa:	df 93       	push	r29
    17fc:	cd b7       	in	r28, 0x3d	; 61
    17fe:	de b7       	in	r29, 0x3e	; 62
    1800:	ca 1b       	sub	r28, r26
    1802:	db 0b       	sbc	r29, r27
    1804:	0f b6       	in	r0, 0x3f	; 63
    1806:	f8 94       	cli
    1808:	de bf       	out	0x3e, r29	; 62
    180a:	0f be       	out	0x3f, r0	; 63
    180c:	cd bf       	out	0x3d, r28	; 61
    180e:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00001810 <__epilogue_restores__>:
    1810:	2a 88       	ldd	r2, Y+18	; 0x12
    1812:	39 88       	ldd	r3, Y+17	; 0x11
    1814:	48 88       	ldd	r4, Y+16	; 0x10
    1816:	5f 84       	ldd	r5, Y+15	; 0x0f
    1818:	6e 84       	ldd	r6, Y+14	; 0x0e
    181a:	7d 84       	ldd	r7, Y+13	; 0x0d
    181c:	8c 84       	ldd	r8, Y+12	; 0x0c
    181e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1820:	aa 84       	ldd	r10, Y+10	; 0x0a
    1822:	b9 84       	ldd	r11, Y+9	; 0x09
    1824:	c8 84       	ldd	r12, Y+8	; 0x08
    1826:	df 80       	ldd	r13, Y+7	; 0x07
    1828:	ee 80       	ldd	r14, Y+6	; 0x06
    182a:	fd 80       	ldd	r15, Y+5	; 0x05
    182c:	0c 81       	ldd	r16, Y+4	; 0x04
    182e:	1b 81       	ldd	r17, Y+3	; 0x03
    1830:	aa 81       	ldd	r26, Y+2	; 0x02
    1832:	b9 81       	ldd	r27, Y+1	; 0x01
    1834:	ce 0f       	add	r28, r30
    1836:	d1 1d       	adc	r29, r1
    1838:	0f b6       	in	r0, 0x3f	; 63
    183a:	f8 94       	cli
    183c:	de bf       	out	0x3e, r29	; 62
    183e:	0f be       	out	0x3f, r0	; 63
    1840:	cd bf       	out	0x3d, r28	; 61
    1842:	ed 01       	movw	r28, r26
    1844:	08 95       	ret

Disassembly of section .text.libgcc:

00001a1e <__movmemx_qi>:
    1a1e:	99 27       	eor	r25, r25

00001a20 <__movmemx_hi>:
    1a20:	77 fd       	sbrc	r23, 7
    1a22:	05 c0       	rjmp	.+10     	; 0x1a2e <__movmemx_hi+0xe>
    1a24:	05 90       	lpm	r0, Z+
    1a26:	0d 92       	st	X+, r0
    1a28:	01 97       	sbiw	r24, 0x01	; 1
    1a2a:	e1 f7       	brne	.-8      	; 0x1a24 <__movmemx_hi+0x4>
    1a2c:	08 95       	ret
    1a2e:	01 90       	ld	r0, Z+
    1a30:	0d 92       	st	X+, r0
    1a32:	01 97       	sbiw	r24, 0x01	; 1
    1a34:	e1 f7       	brne	.-8      	; 0x1a2e <__movmemx_hi+0xe>
    1a36:	08 95       	ret

Disassembly of section .text.avrlibc:

00000d12 <__ftoa_engine>:
 d12:	28 30       	cpi	r18, 0x08	; 8
 d14:	08 f0       	brcs	.+2      	; 0xd18 <__ftoa_engine+0x6>
 d16:	27 e0       	ldi	r18, 0x07	; 7
 d18:	33 27       	eor	r19, r19
 d1a:	da 01       	movw	r26, r20
 d1c:	99 0f       	add	r25, r25
 d1e:	31 1d       	adc	r19, r1
 d20:	87 fd       	sbrc	r24, 7
 d22:	91 60       	ori	r25, 0x01	; 1
 d24:	00 96       	adiw	r24, 0x00	; 0
 d26:	61 05       	cpc	r22, r1
 d28:	71 05       	cpc	r23, r1
 d2a:	39 f4       	brne	.+14     	; 0xd3a <__ftoa_engine+0x28>
 d2c:	32 60       	ori	r19, 0x02	; 2
 d2e:	2e 5f       	subi	r18, 0xFE	; 254
 d30:	3d 93       	st	X+, r19
 d32:	30 e3       	ldi	r19, 0x30	; 48
 d34:	2a 95       	dec	r18
 d36:	e1 f7       	brne	.-8      	; 0xd30 <__ftoa_engine+0x1e>
 d38:	08 95       	ret
 d3a:	9f 3f       	cpi	r25, 0xFF	; 255
 d3c:	30 f0       	brcs	.+12     	; 0xd4a <__ftoa_engine+0x38>
 d3e:	80 38       	cpi	r24, 0x80	; 128
 d40:	71 05       	cpc	r23, r1
 d42:	61 05       	cpc	r22, r1
 d44:	09 f0       	breq	.+2      	; 0xd48 <__ftoa_engine+0x36>
 d46:	3c 5f       	subi	r19, 0xFC	; 252
 d48:	3c 5f       	subi	r19, 0xFC	; 252
 d4a:	3d 93       	st	X+, r19
 d4c:	91 30       	cpi	r25, 0x01	; 1
 d4e:	08 f0       	brcs	.+2      	; 0xd52 <__ftoa_engine+0x40>
 d50:	80 68       	ori	r24, 0x80	; 128
 d52:	91 1d       	adc	r25, r1
 d54:	df 93       	push	r29
 d56:	cf 93       	push	r28
 d58:	1f 93       	push	r17
 d5a:	0f 93       	push	r16
 d5c:	ff 92       	push	r15
 d5e:	ef 92       	push	r14
 d60:	19 2f       	mov	r17, r25
 d62:	98 7f       	andi	r25, 0xF8	; 248
 d64:	96 95       	lsr	r25
 d66:	e9 2f       	mov	r30, r25
 d68:	96 95       	lsr	r25
 d6a:	96 95       	lsr	r25
 d6c:	e9 0f       	add	r30, r25
 d6e:	ff 27       	eor	r31, r31
 d70:	ea 50       	subi	r30, 0x0A	; 10
 d72:	ff 4f       	sbci	r31, 0xFF	; 255
 d74:	99 27       	eor	r25, r25
 d76:	33 27       	eor	r19, r19
 d78:	ee 24       	eor	r14, r14
 d7a:	ff 24       	eor	r15, r15
 d7c:	a7 01       	movw	r20, r14
 d7e:	e7 01       	movw	r28, r14
 d80:	05 90       	lpm	r0, Z+
 d82:	08 94       	sec
 d84:	07 94       	ror	r0
 d86:	28 f4       	brcc	.+10     	; 0xd92 <__ftoa_engine+0x80>
 d88:	36 0f       	add	r19, r22
 d8a:	e7 1e       	adc	r14, r23
 d8c:	f8 1e       	adc	r15, r24
 d8e:	49 1f       	adc	r20, r25
 d90:	51 1d       	adc	r21, r1
 d92:	66 0f       	add	r22, r22
 d94:	77 1f       	adc	r23, r23
 d96:	88 1f       	adc	r24, r24
 d98:	99 1f       	adc	r25, r25
 d9a:	06 94       	lsr	r0
 d9c:	a1 f7       	brne	.-24     	; 0xd86 <__ftoa_engine+0x74>
 d9e:	05 90       	lpm	r0, Z+
 da0:	07 94       	ror	r0
 da2:	28 f4       	brcc	.+10     	; 0xdae <__ftoa_engine+0x9c>
 da4:	e7 0e       	add	r14, r23
 da6:	f8 1e       	adc	r15, r24
 da8:	49 1f       	adc	r20, r25
 daa:	56 1f       	adc	r21, r22
 dac:	c1 1d       	adc	r28, r1
 dae:	77 0f       	add	r23, r23
 db0:	88 1f       	adc	r24, r24
 db2:	99 1f       	adc	r25, r25
 db4:	66 1f       	adc	r22, r22
 db6:	06 94       	lsr	r0
 db8:	a1 f7       	brne	.-24     	; 0xda2 <__ftoa_engine+0x90>
 dba:	05 90       	lpm	r0, Z+
 dbc:	07 94       	ror	r0
 dbe:	28 f4       	brcc	.+10     	; 0xdca <__ftoa_engine+0xb8>
 dc0:	f8 0e       	add	r15, r24
 dc2:	49 1f       	adc	r20, r25
 dc4:	56 1f       	adc	r21, r22
 dc6:	c7 1f       	adc	r28, r23
 dc8:	d1 1d       	adc	r29, r1
 dca:	88 0f       	add	r24, r24
 dcc:	99 1f       	adc	r25, r25
 dce:	66 1f       	adc	r22, r22
 dd0:	77 1f       	adc	r23, r23
 dd2:	06 94       	lsr	r0
 dd4:	a1 f7       	brne	.-24     	; 0xdbe <__ftoa_engine+0xac>
 dd6:	05 90       	lpm	r0, Z+
 dd8:	07 94       	ror	r0
 dda:	20 f4       	brcc	.+8      	; 0xde4 <__ftoa_engine+0xd2>
 ddc:	49 0f       	add	r20, r25
 dde:	56 1f       	adc	r21, r22
 de0:	c7 1f       	adc	r28, r23
 de2:	d8 1f       	adc	r29, r24
 de4:	99 0f       	add	r25, r25
 de6:	66 1f       	adc	r22, r22
 de8:	77 1f       	adc	r23, r23
 dea:	88 1f       	adc	r24, r24
 dec:	06 94       	lsr	r0
 dee:	a9 f7       	brne	.-22     	; 0xdda <__ftoa_engine+0xc8>
 df0:	84 91       	lpm	r24, Z
 df2:	10 95       	com	r17
 df4:	17 70       	andi	r17, 0x07	; 7
 df6:	41 f0       	breq	.+16     	; 0xe08 <__ftoa_engine+0xf6>
 df8:	d6 95       	lsr	r29
 dfa:	c7 95       	ror	r28
 dfc:	57 95       	ror	r21
 dfe:	47 95       	ror	r20
 e00:	f7 94       	ror	r15
 e02:	e7 94       	ror	r14
 e04:	1a 95       	dec	r17
 e06:	c1 f7       	brne	.-16     	; 0xdf8 <__ftoa_engine+0xe6>
 e08:	ec e9       	ldi	r30, 0x9C	; 156
 e0a:	f0 e0       	ldi	r31, 0x00	; 0
 e0c:	68 94       	set
 e0e:	15 90       	lpm	r1, Z+
 e10:	15 91       	lpm	r17, Z+
 e12:	35 91       	lpm	r19, Z+
 e14:	65 91       	lpm	r22, Z+
 e16:	95 91       	lpm	r25, Z+
 e18:	05 90       	lpm	r0, Z+
 e1a:	7f e2       	ldi	r23, 0x2F	; 47
 e1c:	73 95       	inc	r23
 e1e:	e1 18       	sub	r14, r1
 e20:	f1 0a       	sbc	r15, r17
 e22:	43 0b       	sbc	r20, r19
 e24:	56 0b       	sbc	r21, r22
 e26:	c9 0b       	sbc	r28, r25
 e28:	d0 09       	sbc	r29, r0
 e2a:	c0 f7       	brcc	.-16     	; 0xe1c <__ftoa_engine+0x10a>
 e2c:	e1 0c       	add	r14, r1
 e2e:	f1 1e       	adc	r15, r17
 e30:	43 1f       	adc	r20, r19
 e32:	56 1f       	adc	r21, r22
 e34:	c9 1f       	adc	r28, r25
 e36:	d0 1d       	adc	r29, r0
 e38:	7e f4       	brtc	.+30     	; 0xe58 <__ftoa_engine+0x146>
 e3a:	70 33       	cpi	r23, 0x30	; 48
 e3c:	11 f4       	brne	.+4      	; 0xe42 <__ftoa_engine+0x130>
 e3e:	8a 95       	dec	r24
 e40:	e6 cf       	rjmp	.-52     	; 0xe0e <__ftoa_engine+0xfc>
 e42:	e8 94       	clt
 e44:	01 50       	subi	r16, 0x01	; 1
 e46:	30 f0       	brcs	.+12     	; 0xe54 <__ftoa_engine+0x142>
 e48:	08 0f       	add	r16, r24
 e4a:	0a f4       	brpl	.+2      	; 0xe4e <__ftoa_engine+0x13c>
 e4c:	00 27       	eor	r16, r16
 e4e:	02 17       	cp	r16, r18
 e50:	08 f4       	brcc	.+2      	; 0xe54 <__ftoa_engine+0x142>
 e52:	20 2f       	mov	r18, r16
 e54:	23 95       	inc	r18
 e56:	02 2f       	mov	r16, r18
 e58:	7a 33       	cpi	r23, 0x3A	; 58
 e5a:	28 f0       	brcs	.+10     	; 0xe66 <__ftoa_engine+0x154>
 e5c:	79 e3       	ldi	r23, 0x39	; 57
 e5e:	7d 93       	st	X+, r23
 e60:	2a 95       	dec	r18
 e62:	e9 f7       	brne	.-6      	; 0xe5e <__ftoa_engine+0x14c>
 e64:	10 c0       	rjmp	.+32     	; 0xe86 <__ftoa_engine+0x174>
 e66:	7d 93       	st	X+, r23
 e68:	2a 95       	dec	r18
 e6a:	89 f6       	brne	.-94     	; 0xe0e <__ftoa_engine+0xfc>
 e6c:	06 94       	lsr	r0
 e6e:	97 95       	ror	r25
 e70:	67 95       	ror	r22
 e72:	37 95       	ror	r19
 e74:	17 95       	ror	r17
 e76:	17 94       	ror	r1
 e78:	e1 18       	sub	r14, r1
 e7a:	f1 0a       	sbc	r15, r17
 e7c:	43 0b       	sbc	r20, r19
 e7e:	56 0b       	sbc	r21, r22
 e80:	c9 0b       	sbc	r28, r25
 e82:	d0 09       	sbc	r29, r0
 e84:	98 f0       	brcs	.+38     	; 0xeac <__ftoa_engine+0x19a>
 e86:	23 95       	inc	r18
 e88:	7e 91       	ld	r23, -X
 e8a:	73 95       	inc	r23
 e8c:	7a 33       	cpi	r23, 0x3A	; 58
 e8e:	08 f0       	brcs	.+2      	; 0xe92 <__ftoa_engine+0x180>
 e90:	70 e3       	ldi	r23, 0x30	; 48
 e92:	7c 93       	st	X, r23
 e94:	20 13       	cpse	r18, r16
 e96:	b8 f7       	brcc	.-18     	; 0xe86 <__ftoa_engine+0x174>
 e98:	7e 91       	ld	r23, -X
 e9a:	70 61       	ori	r23, 0x10	; 16
 e9c:	7d 93       	st	X+, r23
 e9e:	30 f0       	brcs	.+12     	; 0xeac <__ftoa_engine+0x19a>
 ea0:	83 95       	inc	r24
 ea2:	71 e3       	ldi	r23, 0x31	; 49
 ea4:	7d 93       	st	X+, r23
 ea6:	70 e3       	ldi	r23, 0x30	; 48
 ea8:	2a 95       	dec	r18
 eaa:	e1 f7       	brne	.-8      	; 0xea4 <__ftoa_engine+0x192>
 eac:	11 24       	eor	r1, r1
 eae:	ef 90       	pop	r14
 eb0:	ff 90       	pop	r15
 eb2:	0f 91       	pop	r16
 eb4:	1f 91       	pop	r17
 eb6:	cf 91       	pop	r28
 eb8:	df 91       	pop	r29
 eba:	99 27       	eor	r25, r25
 ebc:	87 fd       	sbrc	r24, 7
 ebe:	90 95       	com	r25
 ec0:	08 95       	ret

Disassembly of section .text.avrlibc:

000018e0 <memcpy>:
    18e0:	cf 92       	push	r12
    18e2:	df 92       	push	r13
    18e4:	ef 92       	push	r14
    18e6:	dc 01       	movw	r26, r24
    18e8:	6a 01       	movw	r12, r20
    18ea:	e6 2e       	mov	r14, r22
    18ec:	28 0f       	add	r18, r24
    18ee:	39 1f       	adc	r19, r25
    18f0:	a2 17       	cp	r26, r18
    18f2:	b3 07       	cpc	r27, r19
    18f4:	51 f0       	breq	.+20     	; 0x190a <memcpy+0x2a>
    18f6:	f6 01       	movw	r30, r12
    18f8:	44 91       	lpm	r20, Z
    18fa:	e7 fc       	sbrc	r14, 7
    18fc:	40 81       	ld	r20, Z
    18fe:	4d 93       	st	X+, r20
    1900:	4f ef       	ldi	r20, 0xFF	; 255
    1902:	c4 1a       	sub	r12, r20
    1904:	d4 0a       	sbc	r13, r20
    1906:	e4 0a       	sbc	r14, r20
    1908:	f3 cf       	rjmp	.-26     	; 0x18f0 <memcpy+0x10>
    190a:	ef 90       	pop	r14
    190c:	df 90       	pop	r13
    190e:	cf 90       	pop	r12
    1910:	08 95       	ret

Disassembly of section .text.avrlibc:

0000171e <strcmp>:
    171e:	cf 92       	push	r12
    1720:	df 92       	push	r13
    1722:	ef 92       	push	r14
    1724:	6b 01       	movw	r12, r22
    1726:	e8 2e       	mov	r14, r24
    1728:	f6 01       	movw	r30, r12
    172a:	84 91       	lpm	r24, Z
    172c:	e7 fc       	sbrc	r14, 7
    172e:	80 81       	ld	r24, Z
    1730:	f9 01       	movw	r30, r18
    1732:	54 91       	lpm	r21, Z
    1734:	47 fd       	sbrc	r20, 7
    1736:	50 81       	ld	r21, Z
    1738:	85 13       	cpse	r24, r21
    173a:	0b c0       	rjmp	.+22     	; 0x1752 <strcmp+0x34>
    173c:	88 23       	and	r24, r24
    173e:	41 f0       	breq	.+16     	; 0x1750 <strcmp+0x32>
    1740:	8f ef       	ldi	r24, 0xFF	; 255
    1742:	c8 1a       	sub	r12, r24
    1744:	d8 0a       	sbc	r13, r24
    1746:	e8 0a       	sbc	r14, r24
    1748:	2f 5f       	subi	r18, 0xFF	; 255
    174a:	3f 4f       	sbci	r19, 0xFF	; 255
    174c:	4f 4f       	sbci	r20, 0xFF	; 255
    174e:	ec cf       	rjmp	.-40     	; 0x1728 <strcmp+0xa>
    1750:	58 2f       	mov	r21, r24
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	85 1b       	sub	r24, r21
    1756:	91 09       	sbc	r25, r1
    1758:	ef 90       	pop	r14
    175a:	df 90       	pop	r13
    175c:	cf 90       	pop	r12
    175e:	08 95       	ret

Disassembly of section .text.avrlibc:

0000131a <strncmp>:
    131a:	cf 92       	push	r12
    131c:	df 92       	push	r13
    131e:	ef 92       	push	r14
    1320:	0f 93       	push	r16
    1322:	1f 93       	push	r17
    1324:	6b 01       	movw	r12, r22
    1326:	e8 2e       	mov	r14, r24
    1328:	01 15       	cp	r16, r1
    132a:	11 05       	cpc	r17, r1
    132c:	19 f1       	breq	.+70     	; 0x1374 <strncmp+0x5a>
    132e:	01 50       	subi	r16, 0x01	; 1
    1330:	11 09       	sbc	r17, r1
    1332:	f6 01       	movw	r30, r12
    1334:	84 91       	lpm	r24, Z
    1336:	e7 fc       	sbrc	r14, 7
    1338:	80 81       	ld	r24, Z
    133a:	88 23       	and	r24, r24
    133c:	99 f0       	breq	.+38     	; 0x1364 <strncmp+0x4a>
    133e:	f9 01       	movw	r30, r18
    1340:	94 91       	lpm	r25, Z
    1342:	47 fd       	sbrc	r20, 7
    1344:	90 81       	ld	r25, Z
    1346:	99 23       	and	r25, r25
    1348:	69 f0       	breq	.+26     	; 0x1364 <strncmp+0x4a>
    134a:	01 15       	cp	r16, r1
    134c:	11 05       	cpc	r17, r1
    134e:	51 f0       	breq	.+20     	; 0x1364 <strncmp+0x4a>
    1350:	89 13       	cpse	r24, r25
    1352:	08 c0       	rjmp	.+16     	; 0x1364 <strncmp+0x4a>
    1354:	8f ef       	ldi	r24, 0xFF	; 255
    1356:	c8 1a       	sub	r12, r24
    1358:	d8 0a       	sbc	r13, r24
    135a:	e8 0a       	sbc	r14, r24
    135c:	2f 5f       	subi	r18, 0xFF	; 255
    135e:	3f 4f       	sbci	r19, 0xFF	; 255
    1360:	4f 4f       	sbci	r20, 0xFF	; 255
    1362:	e5 cf       	rjmp	.-54     	; 0x132e <strncmp+0x14>
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	f9 01       	movw	r30, r18
    1368:	24 91       	lpm	r18, Z
    136a:	47 fd       	sbrc	r20, 7
    136c:	20 81       	ld	r18, Z
    136e:	82 1b       	sub	r24, r18
    1370:	91 09       	sbc	r25, r1
    1372:	02 c0       	rjmp	.+4      	; 0x1378 <strncmp+0x5e>
    1374:	80 e0       	ldi	r24, 0x00	; 0
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	1f 91       	pop	r17
    137a:	0f 91       	pop	r16
    137c:	ef 90       	pop	r14
    137e:	df 90       	pop	r13
    1380:	cf 90       	pop	r12
    1382:	08 95       	ret

Disassembly of section .text.avrlibc:

00001970 <strlen>:
    1970:	cf 92       	push	r12
    1972:	df 92       	push	r13
    1974:	ef 92       	push	r14
    1976:	6b 01       	movw	r12, r22
    1978:	e8 2e       	mov	r14, r24
    197a:	a8 2f       	mov	r26, r24
    197c:	cb 01       	movw	r24, r22
    197e:	fc 01       	movw	r30, r24
    1980:	24 91       	lpm	r18, Z
    1982:	a7 fd       	sbrc	r26, 7
    1984:	20 81       	ld	r18, Z
    1986:	22 23       	and	r18, r18
    1988:	19 f0       	breq	.+6      	; 0x1990 <strlen+0x20>
    198a:	01 96       	adiw	r24, 0x01	; 1
    198c:	a1 1d       	adc	r26, r1
    198e:	f7 cf       	rjmp	.-18     	; 0x197e <strlen+0xe>
    1990:	8c 19       	sub	r24, r12
    1992:	9d 09       	sbc	r25, r13
    1994:	ef 90       	pop	r14
    1996:	df 90       	pop	r13
    1998:	cf 90       	pop	r12
    199a:	08 95       	ret

Disassembly of section .text.avrlibc:

000019e4 <strcpy>:
    19e4:	9a 01       	movw	r18, r20
    19e6:	46 2f       	mov	r20, r22
    19e8:	dc 01       	movw	r26, r24
    19ea:	f9 01       	movw	r30, r18
    19ec:	54 91       	lpm	r21, Z
    19ee:	47 fd       	sbrc	r20, 7
    19f0:	50 81       	ld	r21, Z
    19f2:	5d 93       	st	X+, r21
    19f4:	55 23       	and	r21, r21
    19f6:	21 f0       	breq	.+8      	; 0x1a00 <strcpy+0x1c>
    19f8:	2f 5f       	subi	r18, 0xFF	; 255
    19fa:	3f 4f       	sbci	r19, 0xFF	; 255
    19fc:	4f 4f       	sbci	r20, 0xFF	; 255
    19fe:	f5 cf       	rjmp	.-22     	; 0x19ea <strcpy+0x6>
    1a00:	08 95       	ret

Disassembly of section .text.avrlibc:

00001846 <strnlen>:
    1846:	cf 92       	push	r12
    1848:	df 92       	push	r13
    184a:	ef 92       	push	r14
    184c:	6b 01       	movw	r12, r22
    184e:	e8 2e       	mov	r14, r24
    1850:	a8 2f       	mov	r26, r24
    1852:	cb 01       	movw	r24, r22
    1854:	41 15       	cp	r20, r1
    1856:	51 05       	cpc	r21, r1
    1858:	31 f4       	brne	.+12     	; 0x1866 <strnlen+0x20>
    185a:	8c 19       	sub	r24, r12
    185c:	9d 09       	sbc	r25, r13
    185e:	ef 90       	pop	r14
    1860:	df 90       	pop	r13
    1862:	cf 90       	pop	r12
    1864:	08 95       	ret
    1866:	fc 01       	movw	r30, r24
    1868:	24 91       	lpm	r18, Z
    186a:	a7 fd       	sbrc	r26, 7
    186c:	20 81       	ld	r18, Z
    186e:	22 23       	and	r18, r18
    1870:	a1 f3       	breq	.-24     	; 0x185a <strnlen+0x14>
    1872:	01 96       	adiw	r24, 0x01	; 1
    1874:	a1 1d       	adc	r26, r1
    1876:	41 50       	subi	r20, 0x01	; 1
    1878:	51 09       	sbc	r21, r1
    187a:	ec cf       	rjmp	.-40     	; 0x1854 <strnlen+0xe>

Disassembly of section .text.avrlibc:

00001154 <fputc>:
    1154:	0f 93       	push	r16
    1156:	1f 93       	push	r17
    1158:	cf 93       	push	r28
    115a:	df 93       	push	r29
    115c:	fb 01       	movw	r30, r22
    115e:	24 81       	ldd	r18, Z+4	; 0x04
    1160:	21 fd       	sbrc	r18, 1
    1162:	03 c0       	rjmp	.+6      	; 0x116a <fputc+0x16>
    1164:	8f ef       	ldi	r24, 0xFF	; 255
    1166:	9f ef       	ldi	r25, 0xFF	; 255
    1168:	2c c0       	rjmp	.+88     	; 0x11c2 <fputc+0x6e>
    116a:	22 ff       	sbrs	r18, 2
    116c:	16 c0       	rjmp	.+44     	; 0x119a <fputc+0x46>
    116e:	47 81       	ldd	r20, Z+7	; 0x07
    1170:	50 85       	ldd	r21, Z+8	; 0x08
    1172:	25 81       	ldd	r18, Z+5	; 0x05
    1174:	36 81       	ldd	r19, Z+6	; 0x06
    1176:	42 17       	cp	r20, r18
    1178:	53 07       	cpc	r21, r19
    117a:	44 f4       	brge	.+16     	; 0x118c <fputc+0x38>
    117c:	a0 81       	ld	r26, Z
    117e:	b1 81       	ldd	r27, Z+1	; 0x01
    1180:	9d 01       	movw	r18, r26
    1182:	2f 5f       	subi	r18, 0xFF	; 255
    1184:	3f 4f       	sbci	r19, 0xFF	; 255
    1186:	31 83       	std	Z+1, r19	; 0x01
    1188:	20 83       	st	Z, r18
    118a:	8c 93       	st	X, r24
    118c:	27 81       	ldd	r18, Z+7	; 0x07
    118e:	30 85       	ldd	r19, Z+8	; 0x08
    1190:	2f 5f       	subi	r18, 0xFF	; 255
    1192:	3f 4f       	sbci	r19, 0xFF	; 255
    1194:	30 87       	std	Z+8, r19	; 0x08
    1196:	27 83       	std	Z+7, r18	; 0x07
    1198:	14 c0       	rjmp	.+40     	; 0x11c2 <fputc+0x6e>
    119a:	8b 01       	movw	r16, r22
    119c:	ec 01       	movw	r28, r24
    119e:	fb 01       	movw	r30, r22
    11a0:	01 84       	ldd	r0, Z+9	; 0x09
    11a2:	f2 85       	ldd	r31, Z+10	; 0x0a
    11a4:	e0 2d       	mov	r30, r0
    11a6:	09 95       	icall
    11a8:	89 2b       	or	r24, r25
    11aa:	e1 f6       	brne	.-72     	; 0x1164 <fputc+0x10>
    11ac:	d8 01       	movw	r26, r16
    11ae:	17 96       	adiw	r26, 0x07	; 7
    11b0:	8d 91       	ld	r24, X+
    11b2:	9c 91       	ld	r25, X
    11b4:	18 97       	sbiw	r26, 0x08	; 8
    11b6:	01 96       	adiw	r24, 0x01	; 1
    11b8:	18 96       	adiw	r26, 0x08	; 8
    11ba:	9c 93       	st	X, r25
    11bc:	8e 93       	st	-X, r24
    11be:	17 97       	sbiw	r26, 0x07	; 7
    11c0:	ce 01       	movw	r24, r28
    11c2:	df 91       	pop	r29
    11c4:	cf 91       	pop	r28
    11c6:	1f 91       	pop	r17
    11c8:	0f 91       	pop	r16
    11ca:	08 95       	ret

Disassembly of section .text.avrlibc:

000016d8 <sprintf>:
    16d8:	af e0       	ldi	r26, 0x0F	; 15
    16da:	b0 e0       	ldi	r27, 0x00	; 0
    16dc:	e2 e7       	ldi	r30, 0x72	; 114
    16de:	fb e0       	ldi	r31, 0x0B	; 11
    16e0:	0c 94 fa 0b 	jmp	0x17f4	; 0x17f4 <__prologue_saves__+0x1c>
    16e4:	0e 89       	ldd	r16, Y+22	; 0x16
    16e6:	1f 89       	ldd	r17, Y+23	; 0x17
    16e8:	86 e0       	ldi	r24, 0x06	; 6
    16ea:	8d 83       	std	Y+5, r24	; 0x05
    16ec:	1a 83       	std	Y+2, r17	; 0x02
    16ee:	09 83       	std	Y+1, r16	; 0x01
    16f0:	8f ef       	ldi	r24, 0xFF	; 255
    16f2:	9f e7       	ldi	r25, 0x7F	; 127
    16f4:	9f 83       	std	Y+7, r25	; 0x07
    16f6:	8e 83       	std	Y+6, r24	; 0x06
    16f8:	9e 01       	movw	r18, r28
    16fa:	25 5e       	subi	r18, 0xE5	; 229
    16fc:	3f 4f       	sbci	r19, 0xFF	; 255
    16fe:	48 8d       	ldd	r20, Y+24	; 0x18
    1700:	59 8d       	ldd	r21, Y+25	; 0x19
    1702:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1704:	ce 01       	movw	r24, r28
    1706:	01 96       	adiw	r24, 0x01	; 1
    1708:	0e 94 95 01 	call	0x32a	; 0x32a <vfprintf>
    170c:	e8 85       	ldd	r30, Y+8	; 0x08
    170e:	f9 85       	ldd	r31, Y+9	; 0x09
    1710:	e0 0f       	add	r30, r16
    1712:	f1 1f       	adc	r31, r17
    1714:	10 82       	st	Z, r1
    1716:	2f 96       	adiw	r28, 0x0f	; 15
    1718:	e4 e0       	ldi	r30, 0x04	; 4
    171a:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__epilogue_restores__+0x1c>

Disassembly of section .text.avrlibc:

00000ec2 <__ultoa_invert>:
 ec2:	fa 01       	movw	r30, r20
 ec4:	aa 27       	eor	r26, r26
 ec6:	28 30       	cpi	r18, 0x08	; 8
 ec8:	51 f1       	breq	.+84     	; 0xf1e <__ultoa_invert+0x5c>
 eca:	20 31       	cpi	r18, 0x10	; 16
 ecc:	81 f1       	breq	.+96     	; 0xf2e <__ultoa_invert+0x6c>
 ece:	e8 94       	clt
 ed0:	6f 93       	push	r22
 ed2:	6e 7f       	andi	r22, 0xFE	; 254
 ed4:	6e 5f       	subi	r22, 0xFE	; 254
 ed6:	7f 4f       	sbci	r23, 0xFF	; 255
 ed8:	8f 4f       	sbci	r24, 0xFF	; 255
 eda:	9f 4f       	sbci	r25, 0xFF	; 255
 edc:	af 4f       	sbci	r26, 0xFF	; 255
 ede:	b1 e0       	ldi	r27, 0x01	; 1
 ee0:	3e d0       	rcall	.+124    	; 0xf5e <__ultoa_invert+0x9c>
 ee2:	b4 e0       	ldi	r27, 0x04	; 4
 ee4:	3c d0       	rcall	.+120    	; 0xf5e <__ultoa_invert+0x9c>
 ee6:	67 0f       	add	r22, r23
 ee8:	78 1f       	adc	r23, r24
 eea:	89 1f       	adc	r24, r25
 eec:	9a 1f       	adc	r25, r26
 eee:	a1 1d       	adc	r26, r1
 ef0:	68 0f       	add	r22, r24
 ef2:	79 1f       	adc	r23, r25
 ef4:	8a 1f       	adc	r24, r26
 ef6:	91 1d       	adc	r25, r1
 ef8:	a1 1d       	adc	r26, r1
 efa:	6a 0f       	add	r22, r26
 efc:	71 1d       	adc	r23, r1
 efe:	81 1d       	adc	r24, r1
 f00:	91 1d       	adc	r25, r1
 f02:	a1 1d       	adc	r26, r1
 f04:	20 d0       	rcall	.+64     	; 0xf46 <__ultoa_invert+0x84>
 f06:	09 f4       	brne	.+2      	; 0xf0a <__ultoa_invert+0x48>
 f08:	68 94       	set
 f0a:	3f 91       	pop	r19
 f0c:	2a e0       	ldi	r18, 0x0A	; 10
 f0e:	26 9f       	mul	r18, r22
 f10:	11 24       	eor	r1, r1
 f12:	30 19       	sub	r19, r0
 f14:	30 5d       	subi	r19, 0xD0	; 208
 f16:	31 93       	st	Z+, r19
 f18:	de f6       	brtc	.-74     	; 0xed0 <__ultoa_invert+0xe>
 f1a:	cf 01       	movw	r24, r30
 f1c:	08 95       	ret
 f1e:	46 2f       	mov	r20, r22
 f20:	47 70       	andi	r20, 0x07	; 7
 f22:	40 5d       	subi	r20, 0xD0	; 208
 f24:	41 93       	st	Z+, r20
 f26:	b3 e0       	ldi	r27, 0x03	; 3
 f28:	0f d0       	rcall	.+30     	; 0xf48 <__ultoa_invert+0x86>
 f2a:	c9 f7       	brne	.-14     	; 0xf1e <__ultoa_invert+0x5c>
 f2c:	f6 cf       	rjmp	.-20     	; 0xf1a <__ultoa_invert+0x58>
 f2e:	46 2f       	mov	r20, r22
 f30:	4f 70       	andi	r20, 0x0F	; 15
 f32:	40 5d       	subi	r20, 0xD0	; 208
 f34:	4a 33       	cpi	r20, 0x3A	; 58
 f36:	18 f0       	brcs	.+6      	; 0xf3e <__ultoa_invert+0x7c>
 f38:	49 5d       	subi	r20, 0xD9	; 217
 f3a:	31 fd       	sbrc	r19, 1
 f3c:	40 52       	subi	r20, 0x20	; 32
 f3e:	41 93       	st	Z+, r20
 f40:	02 d0       	rcall	.+4      	; 0xf46 <__ultoa_invert+0x84>
 f42:	a9 f7       	brne	.-22     	; 0xf2e <__ultoa_invert+0x6c>
 f44:	ea cf       	rjmp	.-44     	; 0xf1a <__ultoa_invert+0x58>
 f46:	b4 e0       	ldi	r27, 0x04	; 4
 f48:	a6 95       	lsr	r26
 f4a:	97 95       	ror	r25
 f4c:	87 95       	ror	r24
 f4e:	77 95       	ror	r23
 f50:	67 95       	ror	r22
 f52:	ba 95       	dec	r27
 f54:	c9 f7       	brne	.-14     	; 0xf48 <__ultoa_invert+0x86>
 f56:	00 97       	sbiw	r24, 0x00	; 0
 f58:	61 05       	cpc	r22, r1
 f5a:	71 05       	cpc	r23, r1
 f5c:	08 95       	ret
 f5e:	9b 01       	movw	r18, r22
 f60:	ac 01       	movw	r20, r24
 f62:	0a 2e       	mov	r0, r26
 f64:	06 94       	lsr	r0
 f66:	57 95       	ror	r21
 f68:	47 95       	ror	r20
 f6a:	37 95       	ror	r19
 f6c:	27 95       	ror	r18
 f6e:	ba 95       	dec	r27
 f70:	c9 f7       	brne	.-14     	; 0xf64 <__ultoa_invert+0xa2>
 f72:	62 0f       	add	r22, r18
 f74:	73 1f       	adc	r23, r19
 f76:	84 1f       	adc	r24, r20
 f78:	95 1f       	adc	r25, r21
 f7a:	a0 1d       	adc	r26, r0
 f7c:	08 95       	ret
