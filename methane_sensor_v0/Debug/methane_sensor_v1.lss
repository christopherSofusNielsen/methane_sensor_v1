
methane_sensor_v1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001fb2  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000322  00800100  00800100  00001fb2  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00001fb2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000308  00000000  00000000  0000200d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003dc1  00000000  00000000  00002315  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000125b  00000000  00000000  000060d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000015a7  00000000  00000000  00007331  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000085c  00000000  00000000  000088d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000030b  00000000  00000000  00009134  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001875  00000000  00000000  0000943f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002a8  00000000  00000000  0000acb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00001f1a  00001f1a  00001fae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000af5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.__vector_3 00000014  00001e4c  00001e4c  00001ee0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_16 0000004e  00001938  00001938  000019cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .bss._cb      00000002  0080063e  0080063e  00001fb2  2**0
                  ALLOC
 17 .text.__vector_13 0000004e  00001986  00001986  00001a1a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .bss._cb      00000002  00800640  00800640  00001fb2  2**0
                  ALLOC
 19 .text.__vector_9 00000098  0000143a  0000143a  000014ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.cnt      00000001  00800642  00800642  00001fb2  2**0
                  ALLOC
 21 .bss.callbacks 0000000a  00800634  00800634  00001fb2  2**0
                  ALLOC
 22 .text.__vector_22 0000004a  00001a22  00001a22  00001ab6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.__vector_20 00000074  000016e4  000016e4  00001778  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .bss.rx_buffer_has_message 00000001  00800643  00800643  00001fb2  2**0
                  ALLOC
 25 .bss.rx_buffer_data_len 00000001  00800644  00800644  00001fb2  2**0
                  ALLOC
 26 .bss.tx_buffer_cursor 00000001  00800645  00800645  00001fb2  2**0
                  ALLOC
 27 .bss.tx_buffer_data_len 00000001  00800646  00800646  00001fb2  2**0
                  ALLOC
 28 .text.copy_buffer 0000002e  00001cd8  00001cd8  00001d6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.uart1_hal_init 0000003c  00001bc6  00001bc6  00001c5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.uart1_hal_send_string 0000008a  00001568  00001568  000015fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.uart1_hal_message_ready 0000000e  00001e72  00001e72  00001f06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.uart1_hal_rx_full 0000000e  00001e80  00001e80  00001f14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.uart1_hal_clear_rx_buffer 0000000a  00001eec  00001eec  00001f80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.uart1_hal_read_message_as_str 00000028  00001d60  00001d60  00001df4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.__vector_30 0000004a  00001a6c  00001a6c  00001b00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.__vector_28 00000070  00001758  00001758  000017ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .bss.rx_buffer_has_message 00000001  00800647  00800647  00001fb2  2**0
                  ALLOC
 38 .bss.rx_buffer_data_len 00000001  00800648  00800648  00001fb2  2**0
                  ALLOC
 39 .bss.rx_buffer 00000096  0080054e  0080054e  00001fb2  2**0
                  ALLOC
 40 .bss.tx_buffer_cursor 00000001  00800649  00800649  00001fb2  2**0
                  ALLOC
 41 .bss.tx_buffer_data_len 00000001  0080064a  0080064a  00001fb2  2**0
                  ALLOC
 42 .bss.tx_buffer 0000012c  00800422  00800422  00001fb2  2**0
                  ALLOC
 43 .text.main    00000018  00001e06  00001e06  00001e9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.parse_cmd 00000018  00001e1e  00001e1e  00001eb2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.validate_cmd 00000056  00001890  00001890  00001924  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .progmemx.data 0000001d  00000214  00000214  000002a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 47 .text.CONF_enter 000000cc  0000108a  0000108a  0000111e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.write_deveui 0000002e  00001d06  00001d06  00001d9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .progmemx.data 00000032  000001e2  000001e2  00000276  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 50 .text.write_PPM_factor 00000058  00001838  00001838  000018cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.handle_read 000000c8  00001156  00001156  000011ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.handle_write 000000ac  0000138e  0000138e  00001422  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .bss.arg      00000050  008005e4  008005e4  00001fb2  2**0
                  ALLOC
 54 .text.count_parameters 00000052  000018e6  000018e6  0000197a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.par_index 00000070  000017c8  000017c8  0000185c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.get_parameter 00000096  000014d2  000014d2  00001566  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.get_decimal 000000b4  000012da  000012da  0000136e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.str2flaot 0000004e  000019d4  000019d4  00001a68  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 0000000e  00001e8e  00001e8e  00001f22  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 000000ce  00000fbc  00000fbc  00001050  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.avrlibc.fplib 00000008  00001ef6  00001ef6  00001f8a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc.fplib 000000de  00000e0a  00000e0a  00000e9e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc.fplib 0000007a  000015f2  000015f2  00001686  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc.fplib 0000000c  00001ed4  00001ed4  00001f68  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.avrlibc.fplib 00000006  00001f0e  00001f0e  00001fa2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc.fplib 0000000e  00001e9c  00001e9c  00001f30  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc.fplib 0000000e  00001eaa  00001eaa  00001f3e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc.fplib 00000022  00001d88  00001d88  00001e1c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.avrlibc.fplib 00000044  00001afc  00001afc  00001b90  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.avrlibc.fplib 0000000e  00001eb8  00001eb8  00001f4c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.avrlibc.fplib 00000008  00001efe  00001efe  00001f92  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.avrlibc.fplib 000000d4  00000ee8  00000ee8  00000f7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .progmemx.data 00000008  00000231  00000231  000002c5  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 74 .text.avrlibc 00000744  0000023a  0000023a  000002ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.libgcc  0000000c  00001ee0  00001ee0  00001f74  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.libgcc.mul 0000001e  00001dca  00001dca  00001e5e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.libgcc.prologue 00000038  00001c02  00001c02  00001c96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.libgcc.prologue 00000036  00001c3a  00001c3a  00001cce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.avrlibc 00000008  00001f06  00001f06  00001f9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.avrlibc 0000000e  00001ec6  00001ec6  00001f5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.avrlibc 000002dc  0000097e  0000097e  00000a12  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.avrlibc 000001b0  00000c5a  00000c5a  00000cee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.avrlibc 00000012  00001e60  00001e60  00001ef4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.avrlibc 00000032  00001ca6  00001ca6  00001d3a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.avrlibc 00000042  00001b84  00001b84  00001c18  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.avrlibc 0000002c  00001d34  00001d34  00001dc8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.avrlibc 0000001e  00001de8  00001de8  00001e7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.avrlibc 00000036  00001c70  00001c70  00001d04  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.avrlibc 00000078  0000166c  0000166c  00001700  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text.avrlibc 00000046  00001ab6  00001ab6  00001b4a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.avrlibc 000000bc  0000121e  0000121e  000012b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.avrlibc 00000006  00001f14  00001f14  00001fa8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.libgcc.mul 00000020  00001daa  00001daa  00001e3e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.libgcc.div 00000044  00001b40  00001b40  00001bd4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.libgcc.mul 00000016  00001e36  00001e36  00001eca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__ctors_end>
   4:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
   8:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
   c:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <__vector_3>
  10:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  14:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  18:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  1c:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  20:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  24:	0c 94 1d 0a 	jmp	0x143a	; 0x143a <__vector_9>
  28:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  2c:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  30:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  34:	0c 94 c3 0c 	jmp	0x1986	; 0x1986 <__vector_13>
  38:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  3c:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  40:	0c 94 9c 0c 	jmp	0x1938	; 0x1938 <__vector_16>
  44:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  48:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  4c:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  50:	0c 94 72 0b 	jmp	0x16e4	; 0x16e4 <__vector_20>
  54:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  58:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <__vector_22>
  5c:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  60:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  64:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  68:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  6c:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  70:	0c 94 ac 0b 	jmp	0x1758	; 0x1758 <__vector_28>
  74:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__bad_interrupt>
  78:	0c 94 36 0d 	jmp	0x1a6c	; 0x1a6c <__vector_30>
  7c:	5a 08       	sbc	r5, r10
  7e:	61 08       	sbc	r6, r1
  80:	6a 08       	sbc	r6, r10
  82:	a9 08       	sbc	r10, r9
  84:	97 08       	sbc	r9, r7
  86:	a0 08       	sbc	r10, r0
  88:	7a 08       	sbc	r7, r10
  8a:	85 08       	sbc	r8, r5
  8c:	90 08       	sbc	r9, r0

0000008e <.dinit>:
  8e:	01 00       	.word	0x0001	; ????
  90:	06 4b       	sbci	r16, 0xB6	; 182
  92:	80 00       	.word	0x0080	; ????

00000094 <__trampolines_end>:
  94:	00 40       	sbci	r16, 0x00	; 0
  96:	7a 10       	cpse	r7, r10
  98:	f3 5a       	subi	r31, 0xA3	; 163
  9a:	00 a0       	ldd	r0, Z+32	; 0x20
  9c:	72 4e       	sbci	r23, 0xE2	; 226
  9e:	18 09       	sbc	r17, r8
  a0:	00 10       	cpse	r0, r0
  a2:	a5 d4       	rcall	.+2378   	; 0x9ee <strtol+0x70>
  a4:	e8 00       	.word	0x00e8	; ????
  a6:	00 e8       	ldi	r16, 0x80	; 128
  a8:	76 48       	sbci	r23, 0x86	; 134
  aa:	17 00       	.word	0x0017	; ????
  ac:	00 e4       	ldi	r16, 0x40	; 64
  ae:	0b 54       	subi	r16, 0x4B	; 75
  b0:	02 00       	.word	0x0002	; ????
  b2:	00 ca       	rjmp	.-3072   	; 0xfffff4b4 <__eeprom_end+0xff7ef4b4>
  b4:	9a 3b       	cpi	r25, 0xBA	; 186
  b6:	00 00       	nop
  b8:	00 e1       	ldi	r16, 0x10	; 16
  ba:	f5 05       	cpc	r31, r5
  bc:	00 00       	nop
  be:	80 96       	adiw	r24, 0x20	; 32
  c0:	98 00       	.word	0x0098	; ????
  c2:	00 00       	nop
  c4:	40 42       	sbci	r20, 0x20	; 32
  c6:	0f 00       	.word	0x000f	; ????
  c8:	00 00       	nop
  ca:	a0 86       	std	Z+8, r10	; 0x08
  cc:	01 00       	.word	0x0001	; ????
  ce:	00 00       	nop
  d0:	10 27       	eor	r17, r16
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	e8 03       	fmulsu	r22, r16
  d8:	00 00       	nop
  da:	00 00       	nop
  dc:	64 00       	.word	0x0064	; ????
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	0a 00       	.word	0x000a	; ????
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	01 00       	.word	0x0001	; ????
  ea:	00 00       	nop
  ec:	00 00       	nop
  ee:	2c 76       	andi	r18, 0x6C	; 108
  f0:	d8 88       	ldd	r13, Y+16	; 0x10
  f2:	dc 67       	ori	r29, 0x7C	; 124
  f4:	4f 08       	sbc	r4, r15
  f6:	23 df       	rcall	.-442    	; 0xffffff3e <__eeprom_end+0xff7eff3e>
  f8:	c1 df       	rcall	.-126    	; 0x7c <__SREG__+0x3d>
  fa:	ae 59       	subi	r26, 0x9E	; 158
  fc:	e1 b1       	in	r30, 0x01	; 1
  fe:	b7 96       	adiw	r30, 0x27	; 39
 100:	e5 e3       	ldi	r30, 0x35	; 53
 102:	e4 53       	subi	r30, 0x34	; 52
 104:	c6 3a       	cpi	r28, 0xA6	; 166
 106:	e6 51       	subi	r30, 0x16	; 22
 108:	99 76       	andi	r25, 0x69	; 105
 10a:	96 e8       	ldi	r25, 0x86	; 134
 10c:	e6 c2       	rjmp	.+1484   	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 10e:	84 26       	eor	r8, r20
 110:	eb 89       	ldd	r30, Y+19	; 0x13
 112:	8c 9b       	sbis	0x11, 4	; 17
 114:	62 ed       	ldi	r22, 0xD2	; 210
 116:	40 7c       	andi	r20, 0xC0	; 192
 118:	6f fc       	.word	0xfc6f	; ????
 11a:	ef bc       	out	0x2f, r14	; 47
 11c:	9c 9f       	mul	r25, r28
 11e:	40 f2       	brcs	.-112    	; 0xb0 <__trampolines_end+0x1c>
 120:	ba a5       	ldd	r27, Y+42	; 0x2a
 122:	6f a5       	ldd	r22, Y+47	; 0x2f
 124:	f4 90       	lpm	r15, Z
 126:	05 5a       	subi	r16, 0xA5	; 165
 128:	2a f7       	brpl	.-54     	; 0xf4 <__trampolines_end+0x60>
 12a:	5c 93       	st	X, r21
 12c:	6b 6c       	ori	r22, 0xCB	; 203
 12e:	f9 67       	ori	r31, 0x79	; 121
 130:	6d c1       	rjmp	.+730    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 132:	1b fc       	.word	0xfc1b	; ????
 134:	e0 e4       	ldi	r30, 0x40	; 64
 136:	0d 47       	sbci	r16, 0x7D	; 125
 138:	fe f5       	brtc	.+126    	; 0x1b8 <__do_copy_data+0x1e>
 13a:	20 e6       	ldi	r18, 0x60	; 96
 13c:	b5 00       	.word	0x00b5	; ????
 13e:	d0 ed       	ldi	r29, 0xD0	; 208
 140:	90 2e       	mov	r9, r16
 142:	03 00       	.word	0x0003	; ????
 144:	94 35       	cpi	r25, 0x54	; 84
 146:	77 05       	cpc	r23, r7
 148:	00 80       	ld	r0, Z
 14a:	84 1e       	adc	r8, r20
 14c:	08 00       	.word	0x0008	; ????
 14e:	00 20       	and	r0, r0
 150:	4e 0a       	sbc	r4, r30
 152:	00 00       	nop
 154:	00 c8       	rjmp	.-4096   	; 0xfffff156 <__eeprom_end+0xff7ef156>
 156:	0c 33       	cpi	r16, 0x3C	; 60
 158:	33 33       	cpi	r19, 0x33	; 51
 15a:	33 0f       	add	r19, r19
 15c:	98 6e       	ori	r25, 0xE8	; 232
 15e:	12 83       	std	Z+2, r17	; 0x02
 160:	11 41       	sbci	r17, 0x11	; 17
 162:	ef 8d       	ldd	r30, Y+31	; 0x1f
 164:	21 14       	cp	r2, r1
 166:	89 3b       	cpi	r24, 0xB9	; 185
 168:	e6 55       	subi	r30, 0x56	; 86
 16a:	16 cf       	rjmp	.-468    	; 0xffffff98 <__eeprom_end+0xff7eff98>
 16c:	fe e6       	ldi	r31, 0x6E	; 110
 16e:	db 18       	sub	r13, r11
 170:	d1 84       	ldd	r13, Z+9	; 0x09
 172:	4b 38       	cpi	r20, 0x8B	; 139
 174:	1b f7       	brvc	.-58     	; 0x13c <__trampolines_end+0xa8>
 176:	7c 1d       	adc	r23, r12
 178:	90 1d       	adc	r25, r0
 17a:	a4 bb       	out	0x14, r26	; 20
 17c:	e4 24       	eor	r14, r4
 17e:	20 32       	cpi	r18, 0x20	; 32
 180:	84 72       	andi	r24, 0x24	; 36
 182:	5e 22       	and	r5, r30
 184:	81 00       	.word	0x0081	; ????
 186:	c9 f1       	breq	.+114    	; 0x1fa <_etext+0x18>
 188:	24 ec       	ldi	r18, 0xC4	; 196
 18a:	a1 e5       	ldi	r26, 0x51	; 81
 18c:	3d 27       	eor	r19, r29

0000018e <__ctors_end>:
 18e:	11 24       	eor	r1, r1
 190:	1f be       	out	0x3f, r1	; 63
 192:	cf ef       	ldi	r28, 0xFF	; 255
 194:	d0 e1       	ldi	r29, 0x10	; 16
 196:	de bf       	out	0x3e, r29	; 62
 198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
 19a:	ee e8       	ldi	r30, 0x8E	; 142
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	40 e0       	ldi	r20, 0x00	; 0
 1a0:	17 c0       	rjmp	.+46     	; 0x1d0 <__do_clear_bss+0x8>
 1a2:	b5 91       	lpm	r27, Z+
 1a4:	a5 91       	lpm	r26, Z+
 1a6:	35 91       	lpm	r19, Z+
 1a8:	25 91       	lpm	r18, Z+
 1aa:	05 91       	lpm	r16, Z+
 1ac:	07 fd       	sbrc	r16, 7
 1ae:	0c c0       	rjmp	.+24     	; 0x1c8 <__do_clear_bss>
 1b0:	95 91       	lpm	r25, Z+
 1b2:	85 91       	lpm	r24, Z+
 1b4:	ef 01       	movw	r28, r30
 1b6:	f9 2f       	mov	r31, r25
 1b8:	e8 2f       	mov	r30, r24
 1ba:	05 90       	lpm	r0, Z+
 1bc:	0d 92       	st	X+, r0
 1be:	a2 17       	cp	r26, r18
 1c0:	b3 07       	cpc	r27, r19
 1c2:	d9 f7       	brne	.-10     	; 0x1ba <__do_copy_data+0x20>
 1c4:	fe 01       	movw	r30, r28
 1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <__do_clear_bss+0x8>

000001c8 <__do_clear_bss>:
 1c8:	1d 92       	st	X+, r1
 1ca:	a2 17       	cp	r26, r18
 1cc:	b3 07       	cpc	r27, r19
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <__do_clear_bss>
 1d0:	e3 39       	cpi	r30, 0x93	; 147
 1d2:	f4 07       	cpc	r31, r20
 1d4:	31 f7       	brne	.-52     	; 0x1a2 <__do_copy_data+0x8>
 1d6:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <main>
 1da:	0c 94 ef 00 	jmp	0x1de	; 0x1de <_exit>

000001de <_exit>:
 1de:	f8 94       	cli

000001e0 <__stop_program>:
 1e0:	ff cf       	rjmp	.-2      	; 0x1e0 <__stop_program>

Disassembly of section .text:

00001f1a <__bad_interrupt>:
    1f1a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.__vector_3:

00001e4c <__vector_3>:
	sleep_cpu();
	sleep_disable();
	clear_bit(EIMSK, 2);
}

ISR(INT2_vect){
    1e4c:	1f 92       	push	r1
    1e4e:	0f 92       	push	r0
    1e50:	0f b6       	in	r0, 0x3f	; 63
    1e52:	0f 92       	push	r0
    1e54:	11 24       	eor	r1, r1
	
}
    1e56:	0f 90       	pop	r0
    1e58:	0f be       	out	0x3f, r0	; 63
    1e5a:	0f 90       	pop	r0
    1e5c:	1f 90       	pop	r1
    1e5e:	18 95       	reti

Disassembly of section .text.__vector_16:

00001938 <__vector_16>:

void TC0_HAL_stop(){
	TCCR0B=0x00; 
}

ISR(TIMER0_COMPA_vect){
    1938:	1f 92       	push	r1
    193a:	0f 92       	push	r0
    193c:	0f b6       	in	r0, 0x3f	; 63
    193e:	0f 92       	push	r0
    1940:	11 24       	eor	r1, r1
    1942:	2f 93       	push	r18
    1944:	3f 93       	push	r19
    1946:	4f 93       	push	r20
    1948:	5f 93       	push	r21
    194a:	6f 93       	push	r22
    194c:	7f 93       	push	r23
    194e:	8f 93       	push	r24
    1950:	9f 93       	push	r25
    1952:	af 93       	push	r26
    1954:	bf 93       	push	r27
    1956:	ef 93       	push	r30
    1958:	ff 93       	push	r31
	_cb();
    195a:	e0 91 3e 06 	lds	r30, 0x063E	; 0x80063e <_cb>
    195e:	f0 91 3f 06 	lds	r31, 0x063F	; 0x80063f <_cb+0x1>
    1962:	09 95       	icall
}
    1964:	ff 91       	pop	r31
    1966:	ef 91       	pop	r30
    1968:	bf 91       	pop	r27
    196a:	af 91       	pop	r26
    196c:	9f 91       	pop	r25
    196e:	8f 91       	pop	r24
    1970:	7f 91       	pop	r23
    1972:	6f 91       	pop	r22
    1974:	5f 91       	pop	r21
    1976:	4f 91       	pop	r20
    1978:	3f 91       	pop	r19
    197a:	2f 91       	pop	r18
    197c:	0f 90       	pop	r0
    197e:	0f be       	out	0x3f, r0	; 63
    1980:	0f 90       	pop	r0
    1982:	1f 90       	pop	r1
    1984:	18 95       	reti

Disassembly of section .text.__vector_13:

00001986 <__vector_13>:

void TC1_HAL_stop(){
	clear_byte(TCCR1B, 0b00000111);
}

ISR(TIMER1_COMPA_vect){
    1986:	1f 92       	push	r1
    1988:	0f 92       	push	r0
    198a:	0f b6       	in	r0, 0x3f	; 63
    198c:	0f 92       	push	r0
    198e:	11 24       	eor	r1, r1
    1990:	2f 93       	push	r18
    1992:	3f 93       	push	r19
    1994:	4f 93       	push	r20
    1996:	5f 93       	push	r21
    1998:	6f 93       	push	r22
    199a:	7f 93       	push	r23
    199c:	8f 93       	push	r24
    199e:	9f 93       	push	r25
    19a0:	af 93       	push	r26
    19a2:	bf 93       	push	r27
    19a4:	ef 93       	push	r30
    19a6:	ff 93       	push	r31
	_cb();
    19a8:	e0 91 40 06 	lds	r30, 0x0640	; 0x800640 <_cb>
    19ac:	f0 91 41 06 	lds	r31, 0x0641	; 0x800641 <_cb+0x1>
    19b0:	09 95       	icall
    19b2:	ff 91       	pop	r31
    19b4:	ef 91       	pop	r30
    19b6:	bf 91       	pop	r27
    19b8:	af 91       	pop	r26
    19ba:	9f 91       	pop	r25
    19bc:	8f 91       	pop	r24
    19be:	7f 91       	pop	r23
    19c0:	6f 91       	pop	r22
    19c2:	5f 91       	pop	r21
    19c4:	4f 91       	pop	r20
    19c6:	3f 91       	pop	r19
    19c8:	2f 91       	pop	r18
    19ca:	0f 90       	pop	r0
    19cc:	0f be       	out	0x3f, r0	; 63
    19ce:	0f 90       	pop	r0
    19d0:	1f 90       	pop	r1
    19d2:	18 95       	reti

Disassembly of section .text.__vector_9:

0000143a <__vector_9>:
	if(cbCounter==0){
		stop_timer();		
	}
}

ISR(TIMER2_COMPA_vect){
    143a:	1f 92       	push	r1
    143c:	0f 92       	push	r0
    143e:	0f b6       	in	r0, 0x3f	; 63
    1440:	0f 92       	push	r0
    1442:	11 24       	eor	r1, r1
    1444:	2f 93       	push	r18
    1446:	3f 93       	push	r19
    1448:	4f 93       	push	r20
    144a:	5f 93       	push	r21
    144c:	6f 93       	push	r22
    144e:	7f 93       	push	r23
    1450:	8f 93       	push	r24
    1452:	9f 93       	push	r25
    1454:	af 93       	push	r26
    1456:	bf 93       	push	r27
    1458:	cf 93       	push	r28
    145a:	ef 93       	push	r30
    145c:	ff 93       	push	r31
	cnt++;
    145e:	90 91 42 06 	lds	r25, 0x0642	; 0x800642 <cnt>
    1462:	9f 5f       	subi	r25, 0xFF	; 255
    1464:	90 93 42 06 	sts	0x0642, r25	; 0x800642 <cnt>
	
	if(cnt % 31==0){
    1468:	89 e0       	ldi	r24, 0x09	; 9
    146a:	98 9f       	mul	r25, r24
    146c:	21 2d       	mov	r18, r1
    146e:	11 24       	eor	r1, r1
    1470:	89 2f       	mov	r24, r25
    1472:	82 1b       	sub	r24, r18
    1474:	86 95       	lsr	r24
    1476:	82 0f       	add	r24, r18
    1478:	82 95       	swap	r24
    147a:	8f 70       	andi	r24, 0x0F	; 15
    147c:	2f e1       	ldi	r18, 0x1F	; 31
    147e:	82 9f       	mul	r24, r18
    1480:	90 19       	sub	r25, r0
    1482:	11 24       	eor	r1, r1
    1484:	91 11       	cpse	r25, r1
    1486:	13 c0       	rjmp	.+38     	; 0x14ae <__vector_9+0x74>
		cnt=0;
    1488:	10 92 42 06 	sts	0x0642, r1	; 0x800642 <cnt>
		for (uint8_t i=0; i<MAX_CALLBACKS; i++)
    148c:	c0 e0       	ldi	r28, 0x00	; 0
    148e:	0d c0       	rjmp	.+26     	; 0x14aa <__vector_9+0x70>
		{
			if(callbacks[i]!=NULL){
    1490:	ec 2f       	mov	r30, r28
    1492:	f0 e0       	ldi	r31, 0x00	; 0
    1494:	ee 0f       	add	r30, r30
    1496:	ff 1f       	adc	r31, r31
    1498:	ec 5c       	subi	r30, 0xCC	; 204
    149a:	f9 4f       	sbci	r31, 0xF9	; 249
    149c:	01 90       	ld	r0, Z+
    149e:	f0 81       	ld	r31, Z
    14a0:	e0 2d       	mov	r30, r0
    14a2:	30 97       	sbiw	r30, 0x00	; 0
    14a4:	09 f0       	breq	.+2      	; 0x14a8 <__vector_9+0x6e>
				callbacks[i]();
    14a6:	09 95       	icall
ISR(TIMER2_COMPA_vect){
	cnt++;
	
	if(cnt % 31==0){
		cnt=0;
		for (uint8_t i=0; i<MAX_CALLBACKS; i++)
    14a8:	cf 5f       	subi	r28, 0xFF	; 255
    14aa:	c5 30       	cpi	r28, 0x05	; 5
    14ac:	88 f3       	brcs	.-30     	; 0x1490 <__vector_9+0x56>
			if(callbacks[i]!=NULL){
				callbacks[i]();
			}
		}
	}
}
    14ae:	ff 91       	pop	r31
    14b0:	ef 91       	pop	r30
    14b2:	cf 91       	pop	r28
    14b4:	bf 91       	pop	r27
    14b6:	af 91       	pop	r26
    14b8:	9f 91       	pop	r25
    14ba:	8f 91       	pop	r24
    14bc:	7f 91       	pop	r23
    14be:	6f 91       	pop	r22
    14c0:	5f 91       	pop	r21
    14c2:	4f 91       	pop	r20
    14c4:	3f 91       	pop	r19
    14c6:	2f 91       	pop	r18
    14c8:	0f 90       	pop	r0
    14ca:	0f be       	out	0x3f, r0	; 63
    14cc:	0f 90       	pop	r0
    14ce:	1f 90       	pop	r1
    14d0:	18 95       	reti

Disassembly of section .text.__vector_22:

00001a22 <__vector_22>:


/************************************************************************/
/* Write data complete vect                                             */
/************************************************************************/
ISR(USART0_TX_vect){
    1a22:	1f 92       	push	r1
    1a24:	0f 92       	push	r0
    1a26:	0f b6       	in	r0, 0x3f	; 63
    1a28:	0f 92       	push	r0
    1a2a:	11 24       	eor	r1, r1
    1a2c:	8f 93       	push	r24
    1a2e:	ef 93       	push	r30
    1a30:	ff 93       	push	r31
	if(tx_buffer_cursor<tx_buffer_data_len){
    1a32:	e0 91 45 06 	lds	r30, 0x0645	; 0x800645 <tx_buffer_cursor>
    1a36:	80 91 46 06 	lds	r24, 0x0646	; 0x800646 <tx_buffer_data_len>
    1a3a:	e8 17       	cp	r30, r24
    1a3c:	58 f4       	brcc	.+22     	; 0x1a54 <__vector_22+0x32>
		UDR0=tx_buffer[tx_buffer_cursor++];
    1a3e:	81 e0       	ldi	r24, 0x01	; 1
    1a40:	8e 0f       	add	r24, r30
    1a42:	80 93 45 06 	sts	0x0645, r24	; 0x800645 <tx_buffer_cursor>
    1a46:	f0 e0       	ldi	r31, 0x00	; 0
    1a48:	ec 59       	subi	r30, 0x9C	; 156
    1a4a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a4c:	80 81       	ld	r24, Z
    1a4e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
    1a52:	04 c0       	rjmp	.+8      	; 0x1a5c <__vector_22+0x3a>
	}else{
		tx_buffer_cursor=0;
    1a54:	10 92 45 06 	sts	0x0645, r1	; 0x800645 <tx_buffer_cursor>
		tx_buffer_data_len=0;
    1a58:	10 92 46 06 	sts	0x0646, r1	; 0x800646 <tx_buffer_data_len>
	}
}
    1a5c:	ff 91       	pop	r31
    1a5e:	ef 91       	pop	r30
    1a60:	8f 91       	pop	r24
    1a62:	0f 90       	pop	r0
    1a64:	0f be       	out	0x3f, r0	; 63
    1a66:	0f 90       	pop	r0
    1a68:	1f 90       	pop	r1
    1a6a:	18 95       	reti

Disassembly of section .text.__vector_20:

000016e4 <__vector_20>:
	set_bit(UCSR0B, 3); //Enable Tx
	
	uint8_t data[1];
	data[0]=followUpByte;
	uart0_hal_send_message(data, 1);
}
    16e4:	1f 92       	push	r1
    16e6:	0f 92       	push	r0
    16e8:	0f b6       	in	r0, 0x3f	; 63
    16ea:	0f 92       	push	r0
    16ec:	11 24       	eor	r1, r1
    16ee:	2f 93       	push	r18
    16f0:	8f 93       	push	r24
    16f2:	9f 93       	push	r25
    16f4:	ef 93       	push	r30
    16f6:	ff 93       	push	r31
    16f8:	80 91 43 06 	lds	r24, 0x0643	; 0x800643 <rx_buffer_has_message>
    16fc:	81 11       	cpse	r24, r1
    16fe:	0e c0       	rjmp	.+28     	; 0x171c <__vector_20+0x38>
    1700:	e0 91 44 06 	lds	r30, 0x0644	; 0x800644 <rx_buffer_data_len>
    1704:	e4 36       	cpi	r30, 0x64	; 100
    1706:	50 f4       	brcc	.+20     	; 0x171c <__vector_20+0x38>
    1708:	81 e0       	ldi	r24, 0x01	; 1
    170a:	8e 0f       	add	r24, r30
    170c:	80 93 44 06 	sts	0x0644, r24	; 0x800644 <rx_buffer_data_len>
    1710:	f0 e0       	ldi	r31, 0x00	; 0
    1712:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f00c6>
    1716:	e0 50       	subi	r30, 0x00	; 0
    1718:	ff 4f       	sbci	r31, 0xFF	; 255
    171a:	80 83       	st	Z, r24
    171c:	80 91 44 06 	lds	r24, 0x0644	; 0x800644 <rx_buffer_data_len>
    1720:	83 30       	cpi	r24, 0x03	; 3
    1722:	80 f0       	brcs	.+32     	; 0x1744 <__vector_20+0x60>
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	fc 01       	movw	r30, r24
    1728:	e1 50       	subi	r30, 0x01	; 1
    172a:	ff 4f       	sbci	r31, 0xFF	; 255
    172c:	20 81       	ld	r18, Z
    172e:	2a 30       	cpi	r18, 0x0A	; 10
    1730:	49 f4       	brne	.+18     	; 0x1744 <__vector_20+0x60>
    1732:	fc 01       	movw	r30, r24
    1734:	e2 50       	subi	r30, 0x02	; 2
    1736:	ff 4f       	sbci	r31, 0xFF	; 255
    1738:	80 81       	ld	r24, Z
    173a:	8d 30       	cpi	r24, 0x0D	; 13
    173c:	19 f4       	brne	.+6      	; 0x1744 <__vector_20+0x60>
    173e:	81 e0       	ldi	r24, 0x01	; 1
    1740:	80 93 43 06 	sts	0x0643, r24	; 0x800643 <rx_buffer_has_message>
    1744:	ff 91       	pop	r31
    1746:	ef 91       	pop	r30
    1748:	9f 91       	pop	r25
    174a:	8f 91       	pop	r24
    174c:	2f 91       	pop	r18
    174e:	0f 90       	pop	r0
    1750:	0f be       	out	0x3f, r0	; 63
    1752:	0f 90       	pop	r0
    1754:	1f 90       	pop	r1
    1756:	18 95       	reti

Disassembly of section .text.copy_buffer:

00001cd8 <copy_buffer>:
		tx_buffer[i]=msg[i];
	}
	
	tx_buffer_data_len=length;
	tx_buffer_cursor=1;
	UDR1=tx_buffer[0];
    1cd8:	bc 01       	movw	r22, r24
    1cda:	90 e0       	ldi	r25, 0x00	; 0
    1cdc:	09 c0       	rjmp	.+18     	; 0x1cf0 <copy_buffer+0x18>
    1cde:	fb 01       	movw	r30, r22
    1ce0:	e9 0f       	add	r30, r25
    1ce2:	f1 1d       	adc	r31, r1
    1ce4:	da 01       	movw	r26, r20
    1ce6:	a2 5b       	subi	r26, 0xB2	; 178
    1ce8:	ba 4f       	sbci	r27, 0xFA	; 250
    1cea:	2c 91       	ld	r18, X
    1cec:	20 83       	st	Z, r18
    1cee:	9f 5f       	subi	r25, 0xFF	; 255
    1cf0:	49 2f       	mov	r20, r25
    1cf2:	50 e0       	ldi	r21, 0x00	; 0
    1cf4:	20 91 48 06 	lds	r18, 0x0648	; 0x800648 <rx_buffer_data_len>
    1cf8:	30 e0       	ldi	r19, 0x00	; 0
    1cfa:	22 50       	subi	r18, 0x02	; 2
    1cfc:	31 09       	sbc	r19, r1
    1cfe:	42 17       	cp	r20, r18
    1d00:	53 07       	cpc	r21, r19
    1d02:	6c f3       	brlt	.-38     	; 0x1cde <copy_buffer+0x6>
    1d04:	08 95       	ret

Disassembly of section .text.uart1_hal_init:

00001bc6 <uart1_hal_init>:
    1bc6:	e9 ec       	ldi	r30, 0xC9	; 201
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	80 81       	ld	r24, Z
    1bcc:	80 61       	ori	r24, 0x10	; 16
    1bce:	80 83       	st	Z, r24
    1bd0:	80 81       	ld	r24, Z
    1bd2:	88 60       	ori	r24, 0x08	; 8
    1bd4:	80 83       	st	Z, r24
    1bd6:	80 81       	ld	r24, Z
    1bd8:	80 68       	ori	r24, 0x80	; 128
    1bda:	80 83       	st	Z, r24
    1bdc:	80 81       	ld	r24, Z
    1bde:	80 64       	ori	r24, 0x40	; 64
    1be0:	80 83       	st	Z, r24
    1be2:	e8 ec       	ldi	r30, 0xC8	; 200
    1be4:	f0 e0       	ldi	r31, 0x00	; 0
    1be6:	80 81       	ld	r24, Z
    1be8:	82 60       	ori	r24, 0x02	; 2
    1bea:	80 83       	st	Z, r24
    1bec:	86 e0       	ldi	r24, 0x06	; 6
    1bee:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7f00ca>
    1bf2:	80 e1       	ldi	r24, 0x10	; 16
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f00cd>
    1bfa:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f00cc>
    1bfe:	78 94       	sei
    1c00:	08 95       	ret

Disassembly of section .text.uart1_hal_send_string:

00001568 <uart1_hal_send_string>:
    1568:	6f 92       	push	r6
    156a:	7f 92       	push	r7
    156c:	8f 92       	push	r8
    156e:	cf 92       	push	r12
    1570:	df 92       	push	r13
    1572:	ef 92       	push	r14
    1574:	3b 01       	movw	r6, r22
    1576:	88 2e       	mov	r8, r24
    1578:	80 91 4a 06 	lds	r24, 0x064A	; 0x80064a <tx_buffer_data_len>
    157c:	81 11       	cpse	r24, r1
    157e:	fc cf       	rjmp	.-8      	; 0x1578 <uart1_hal_send_string+0x10>
    1580:	88 2d       	mov	r24, r8
    1582:	b3 01       	movw	r22, r6
    1584:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <strlen>
    1588:	bc 01       	movw	r22, r24
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	12 c0       	rjmp	.+36     	; 0x15b2 <uart1_hal_send_string+0x4a>
    158e:	29 2f       	mov	r18, r25
    1590:	30 e0       	ldi	r19, 0x00	; 0
    1592:	e8 2c       	mov	r14, r8
    1594:	63 01       	movw	r12, r6
    1596:	c4 0e       	add	r12, r20
    1598:	d5 1e       	adc	r13, r21
    159a:	e1 1c       	adc	r14, r1
    159c:	57 fd       	sbrc	r21, 7
    159e:	ea 94       	dec	r14
    15a0:	f6 01       	movw	r30, r12
    15a2:	44 91       	lpm	r20, Z
    15a4:	e7 fc       	sbrc	r14, 7
    15a6:	40 81       	ld	r20, Z
    15a8:	f9 01       	movw	r30, r18
    15aa:	ee 5d       	subi	r30, 0xDE	; 222
    15ac:	fb 4f       	sbci	r31, 0xFB	; 251
    15ae:	40 83       	st	Z, r20
    15b0:	9f 5f       	subi	r25, 0xFF	; 255
    15b2:	49 2f       	mov	r20, r25
    15b4:	50 e0       	ldi	r21, 0x00	; 0
    15b6:	46 17       	cp	r20, r22
    15b8:	57 07       	cpc	r21, r23
    15ba:	48 f3       	brcs	.-46     	; 0x158e <uart1_hal_send_string+0x26>
    15bc:	fb 01       	movw	r30, r22
    15be:	ee 5d       	subi	r30, 0xDE	; 222
    15c0:	fb 4f       	sbci	r31, 0xFB	; 251
    15c2:	8d e0       	ldi	r24, 0x0D	; 13
    15c4:	80 83       	st	Z, r24
    15c6:	fb 01       	movw	r30, r22
    15c8:	ed 5d       	subi	r30, 0xDD	; 221
    15ca:	fb 4f       	sbci	r31, 0xFB	; 251
    15cc:	8a e0       	ldi	r24, 0x0A	; 10
    15ce:	80 83       	st	Z, r24
    15d0:	6e 5f       	subi	r22, 0xFE	; 254
    15d2:	60 93 4a 06 	sts	0x064A, r22	; 0x80064a <tx_buffer_data_len>
    15d6:	81 e0       	ldi	r24, 0x01	; 1
    15d8:	80 93 49 06 	sts	0x0649, r24	; 0x800649 <tx_buffer_cursor>
    15dc:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <_end>
    15e0:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    15e4:	ef 90       	pop	r14
    15e6:	df 90       	pop	r13
    15e8:	cf 90       	pop	r12
    15ea:	8f 90       	pop	r8
    15ec:	7f 90       	pop	r7
    15ee:	6f 90       	pop	r6
    15f0:	08 95       	ret

Disassembly of section .text.uart1_hal_message_ready:

00001e72 <uart1_hal_message_ready>:
}

bool uart1_hal_message_ready(){
	return rx_buffer_has_message>0;
    1e72:	90 91 47 06 	lds	r25, 0x0647	; 0x800647 <rx_buffer_has_message>
    1e76:	81 e0       	ldi	r24, 0x01	; 1
    1e78:	91 11       	cpse	r25, r1
    1e7a:	01 c0       	rjmp	.+2      	; 0x1e7e <uart1_hal_message_ready+0xc>
    1e7c:	80 e0       	ldi	r24, 0x00	; 0
}
    1e7e:	08 95       	ret

Disassembly of section .text.uart1_hal_rx_full:

00001e80 <uart1_hal_rx_full>:

bool uart1_hal_rx_full(){
	return rx_buffer_data_len>=UART1_RX_BUFF_LENGTH-1;
    1e80:	90 91 48 06 	lds	r25, 0x0648	; 0x800648 <rx_buffer_data_len>
    1e84:	81 e0       	ldi	r24, 0x01	; 1
    1e86:	95 39       	cpi	r25, 0x95	; 149
    1e88:	08 f4       	brcc	.+2      	; 0x1e8c <uart1_hal_rx_full+0xc>
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
}
    1e8c:	08 95       	ret

Disassembly of section .text.uart1_hal_clear_rx_buffer:

00001eec <uart1_hal_clear_rx_buffer>:
	uart1_hal_clear_rx_buffer();
	return len;
}

void uart1_hal_clear_rx_buffer(){
	rx_buffer_has_message=0;
    1eec:	10 92 47 06 	sts	0x0647, r1	; 0x800647 <rx_buffer_has_message>
	rx_buffer_data_len=0;
    1ef0:	10 92 48 06 	sts	0x0648, r1	; 0x800648 <rx_buffer_data_len>
    1ef4:	08 95       	ret

Disassembly of section .text.uart1_hal_read_message_as_str:

00001d60 <uart1_hal_read_message_as_str>:
		tx_buffer[i]=msg[i];
	}
	
	tx_buffer_data_len=length;
	tx_buffer_cursor=1;
	UDR1=tx_buffer[0];
    1d60:	0f 93       	push	r16
    1d62:	1f 93       	push	r17
    1d64:	cf 93       	push	r28
    1d66:	8c 01       	movw	r16, r24
    1d68:	0e 94 6c 0e 	call	0x1cd8	; 0x1cd8 <copy_buffer>
    1d6c:	c0 91 48 06 	lds	r28, 0x0648	; 0x800648 <rx_buffer_data_len>
    1d70:	c2 50       	subi	r28, 0x02	; 2
    1d72:	f8 01       	movw	r30, r16
    1d74:	ec 0f       	add	r30, r28
    1d76:	f1 1d       	adc	r31, r1
    1d78:	10 82       	st	Z, r1
    1d7a:	0e 94 76 0f 	call	0x1eec	; 0x1eec <uart1_hal_clear_rx_buffer>
    1d7e:	8c 2f       	mov	r24, r28
    1d80:	cf 91       	pop	r28
    1d82:	1f 91       	pop	r17
    1d84:	0f 91       	pop	r16
    1d86:	08 95       	ret

Disassembly of section .text.__vector_30:

00001a6c <__vector_30>:
    1a6c:	1f 92       	push	r1
    1a6e:	0f 92       	push	r0
    1a70:	0f b6       	in	r0, 0x3f	; 63
    1a72:	0f 92       	push	r0
    1a74:	11 24       	eor	r1, r1
    1a76:	8f 93       	push	r24
    1a78:	ef 93       	push	r30
    1a7a:	ff 93       	push	r31
    1a7c:	e0 91 49 06 	lds	r30, 0x0649	; 0x800649 <tx_buffer_cursor>
    1a80:	80 91 4a 06 	lds	r24, 0x064A	; 0x80064a <tx_buffer_data_len>
    1a84:	e8 17       	cp	r30, r24
    1a86:	58 f4       	brcc	.+22     	; 0x1a9e <__vector_30+0x32>
    1a88:	81 e0       	ldi	r24, 0x01	; 1
    1a8a:	8e 0f       	add	r24, r30
    1a8c:	80 93 49 06 	sts	0x0649, r24	; 0x800649 <tx_buffer_cursor>
    1a90:	f0 e0       	ldi	r31, 0x00	; 0
    1a92:	ee 5d       	subi	r30, 0xDE	; 222
    1a94:	fb 4f       	sbci	r31, 0xFB	; 251
    1a96:	80 81       	ld	r24, Z
    1a98:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    1a9c:	04 c0       	rjmp	.+8      	; 0x1aa6 <__vector_30+0x3a>
    1a9e:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <tx_buffer_cursor>
    1aa2:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <tx_buffer_data_len>
    1aa6:	ff 91       	pop	r31
    1aa8:	ef 91       	pop	r30
    1aaa:	8f 91       	pop	r24
    1aac:	0f 90       	pop	r0
    1aae:	0f be       	out	0x3f, r0	; 63
    1ab0:	0f 90       	pop	r0
    1ab2:	1f 90       	pop	r1
    1ab4:	18 95       	reti

Disassembly of section .text.__vector_28:

00001758 <__vector_28>:
    1758:	1f 92       	push	r1
    175a:	0f 92       	push	r0
    175c:	0f b6       	in	r0, 0x3f	; 63
    175e:	0f 92       	push	r0
    1760:	11 24       	eor	r1, r1
    1762:	2f 93       	push	r18
    1764:	8f 93       	push	r24
    1766:	9f 93       	push	r25
    1768:	ef 93       	push	r30
    176a:	ff 93       	push	r31
    176c:	80 91 47 06 	lds	r24, 0x0647	; 0x800647 <rx_buffer_has_message>
    1770:	81 11       	cpse	r24, r1
    1772:	0e c0       	rjmp	.+28     	; 0x1790 <__vector_28+0x38>
    1774:	e0 91 48 06 	lds	r30, 0x0648	; 0x800648 <rx_buffer_data_len>
    1778:	e6 39       	cpi	r30, 0x96	; 150
    177a:	50 f4       	brcc	.+20     	; 0x1790 <__vector_28+0x38>
    177c:	81 e0       	ldi	r24, 0x01	; 1
    177e:	8e 0f       	add	r24, r30
    1780:	80 93 48 06 	sts	0x0648, r24	; 0x800648 <rx_buffer_data_len>
    1784:	f0 e0       	ldi	r31, 0x00	; 0
    1786:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f00ce>
    178a:	e2 5b       	subi	r30, 0xB2	; 178
    178c:	fa 4f       	sbci	r31, 0xFA	; 250
    178e:	80 83       	st	Z, r24
    1790:	80 91 48 06 	lds	r24, 0x0648	; 0x800648 <rx_buffer_data_len>
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	fc 01       	movw	r30, r24
    1798:	e3 5b       	subi	r30, 0xB3	; 179
    179a:	fa 4f       	sbci	r31, 0xFA	; 250
    179c:	20 81       	ld	r18, Z
    179e:	2a 30       	cpi	r18, 0x0A	; 10
    17a0:	49 f4       	brne	.+18     	; 0x17b4 <__vector_28+0x5c>
    17a2:	fc 01       	movw	r30, r24
    17a4:	e4 5b       	subi	r30, 0xB4	; 180
    17a6:	fa 4f       	sbci	r31, 0xFA	; 250
    17a8:	80 81       	ld	r24, Z
    17aa:	8d 30       	cpi	r24, 0x0D	; 13
    17ac:	19 f4       	brne	.+6      	; 0x17b4 <__vector_28+0x5c>
    17ae:	81 e0       	ldi	r24, 0x01	; 1
    17b0:	80 93 47 06 	sts	0x0647, r24	; 0x800647 <rx_buffer_has_message>
    17b4:	ff 91       	pop	r31
    17b6:	ef 91       	pop	r30
    17b8:	9f 91       	pop	r25
    17ba:	8f 91       	pop	r24
    17bc:	2f 91       	pop	r18
    17be:	0f 90       	pop	r0
    17c0:	0f be       	out	0x3f, r0	; 63
    17c2:	0f 90       	pop	r0
    17c4:	1f 90       	pop	r1
    17c6:	18 95       	reti

Disassembly of section .text.main:

00001e06 <main>:
	//test_runner();
	
	while(1)
    {
		//MAINPG_start();
		CONF_enter();
    1e06:	0e 94 45 08 	call	0x108a	; 0x108a <CONF_enter>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1e0a:	2f ef       	ldi	r18, 0xFF	; 255
    1e0c:	8d e3       	ldi	r24, 0x3D	; 61
    1e0e:	99 e4       	ldi	r25, 0x49	; 73
    1e10:	21 50       	subi	r18, 0x01	; 1
    1e12:	80 40       	sbci	r24, 0x00	; 0
    1e14:	90 40       	sbci	r25, 0x00	; 0
    1e16:	e1 f7       	brne	.-8      	; 0x1e10 <main+0xa>
    1e18:	00 c0       	rjmp	.+0      	; 0x1e1a <main+0x14>
    1e1a:	00 00       	nop
    1e1c:	f4 cf       	rjmp	.-24     	; 0x1e06 <main>

Disassembly of section .text.parse_cmd:

00001e1e <parse_cmd>:
		}
	}
}

static CONF_STATES parse_cmd(char msg[]){
	if(msg[0]=='r') return CONF_READ;
    1e1e:	fc 01       	movw	r30, r24
    1e20:	80 81       	ld	r24, Z
    1e22:	82 37       	cpi	r24, 0x72	; 114
    1e24:	21 f0       	breq	.+8      	; 0x1e2e <parse_cmd+0x10>
	if(msg[0]=='w') return CONF_WRTIE;
    1e26:	87 37       	cpi	r24, 0x77	; 119
    1e28:	21 f4       	brne	.+8      	; 0x1e32 <parse_cmd+0x14>
    1e2a:	87 e0       	ldi	r24, 0x07	; 7
    1e2c:	08 95       	ret
		}
	}
}

static CONF_STATES parse_cmd(char msg[]){
	if(msg[0]=='r') return CONF_READ;
    1e2e:	86 e0       	ldi	r24, 0x06	; 6
    1e30:	08 95       	ret
	if(msg[0]=='w') return CONF_WRTIE;
	return CONF_NOT_VALID;
    1e32:	84 e0       	ldi	r24, 0x04	; 4
}
    1e34:	08 95       	ret

Disassembly of section .text.validate_cmd:

00001890 <validate_cmd>:

static bool validate_cmd(char msg[]){
    1890:	cf 93       	push	r28
    1892:	df 93       	push	r29
    1894:	ec 01       	movw	r28, r24
	uint16_t len=strlen(msg);
    1896:	bc 01       	movw	r22, r24
    1898:	80 e8       	ldi	r24, 0x80	; 128
    189a:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <strlen>
    189e:	bc 01       	movw	r22, r24
	bool lastCharWasSpace=false;
	
	if(msg[len-1]==' ') return false;
    18a0:	fc 01       	movw	r30, r24
    18a2:	31 97       	sbiw	r30, 0x01	; 1
    18a4:	ec 0f       	add	r30, r28
    18a6:	fd 1f       	adc	r31, r29
    18a8:	80 81       	ld	r24, Z
    18aa:	80 32       	cpi	r24, 0x20	; 32
    18ac:	b1 f0       	breq	.+44     	; 0x18da <validate_cmd+0x4a>
    18ae:	20 e0       	ldi	r18, 0x00	; 0
    18b0:	30 e0       	ldi	r19, 0x00	; 0
    18b2:	40 e0       	ldi	r20, 0x00	; 0
    18b4:	0d c0       	rjmp	.+26     	; 0x18d0 <validate_cmd+0x40>
	
	//Check for multiple space in row
	for (uint16_t i=0; i<len; i++)
	{
		if(msg[i]==' '){
    18b6:	fe 01       	movw	r30, r28
    18b8:	e2 0f       	add	r30, r18
    18ba:	f3 1f       	adc	r31, r19
    18bc:	90 81       	ld	r25, Z
    18be:	90 32       	cpi	r25, 0x20	; 32
    18c0:	21 f4       	brne	.+8      	; 0x18ca <validate_cmd+0x3a>
			if(lastCharWasSpace) return false;
    18c2:	41 11       	cpse	r20, r1
    18c4:	0c c0       	rjmp	.+24     	; 0x18de <validate_cmd+0x4e>
			lastCharWasSpace=true;
    18c6:	41 e0       	ldi	r20, 0x01	; 1
    18c8:	01 c0       	rjmp	.+2      	; 0x18cc <validate_cmd+0x3c>
		}else{
			lastCharWasSpace=false;
    18ca:	40 e0       	ldi	r20, 0x00	; 0
	bool lastCharWasSpace=false;
	
	if(msg[len-1]==' ') return false;
	
	//Check for multiple space in row
	for (uint16_t i=0; i<len; i++)
    18cc:	2f 5f       	subi	r18, 0xFF	; 255
    18ce:	3f 4f       	sbci	r19, 0xFF	; 255
    18d0:	26 17       	cp	r18, r22
    18d2:	37 07       	cpc	r19, r23
    18d4:	80 f3       	brcs	.-32     	; 0x18b6 <validate_cmd+0x26>
			lastCharWasSpace=true;
		}else{
			lastCharWasSpace=false;
		}
	}
	return true;
    18d6:	81 e0       	ldi	r24, 0x01	; 1
    18d8:	03 c0       	rjmp	.+6      	; 0x18e0 <validate_cmd+0x50>

static bool validate_cmd(char msg[]){
	uint16_t len=strlen(msg);
	bool lastCharWasSpace=false;
	
	if(msg[len-1]==' ') return false;
    18da:	80 e0       	ldi	r24, 0x00	; 0
    18dc:	01 c0       	rjmp	.+2      	; 0x18e0 <validate_cmd+0x50>
	
	//Check for multiple space in row
	for (uint16_t i=0; i<len; i++)
	{
		if(msg[i]==' '){
			if(lastCharWasSpace) return false;
    18de:	80 e0       	ldi	r24, 0x00	; 0
		}else{
			lastCharWasSpace=false;
		}
	}
	return true;
}
    18e0:	df 91       	pop	r29
    18e2:	cf 91       	pop	r28
    18e4:	08 95       	ret

Disassembly of section .text.CONF_enter:

0000108a <CONF_enter>:
char cnf_reply[200];

static CONF_STATES parse_cmd(char msg[]);
static bool validate_cmd(char msg[]);

void CONF_enter(){
    108a:	cf 93       	push	r28
	uart1_hal_init();
    108c:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <uart1_hal_init>
	CONF_STATES state=CONF_INTRO;
    1090:	c0 e0       	ldi	r28, 0x00	; 0
    1092:	07 c0       	rjmp	.+14     	; 0x10a2 <CONF_enter+0x18>
				state=CONF_WAIT_FOR_CMD;
				if(uart1_hal_message_ready()){
					state=CONF_PARSE;
				}
				if(uart1_hal_rx_full()){
					state=CONF_NOT_VALID;
    1094:	c4 e0       	ldi	r28, 0x04	; 4
    1096:	05 c0       	rjmp	.+10     	; 0x10a2 <CONF_enter+0x18>
			case CONF_PARSE:
				uart1_hal_read_message_as_str(cnf_rx_cmd);
				if(validate_cmd(cnf_rx_cmd)){
					state=parse_cmd(cnf_rx_cmd);
				}else{
					state=CONF_FORMAT_ERR;
    1098:	c5 e0       	ldi	r28, 0x05	; 5
    109a:	03 c0       	rjmp	.+6      	; 0x10a2 <CONF_enter+0x18>
			
			case CONF_READ:
				if(handle_read(cnf_rx_cmd, cnf_reply)){
					state=CONF_REPLY;
				}else{
					state=CONF_NOT_VALID;
    109c:	c4 e0       	ldi	r28, 0x04	; 4
    109e:	01 c0       	rjmp	.+2      	; 0x10a2 <CONF_enter+0x18>
			
			case CONF_WRTIE:
				if(handle_write(cnf_rx_cmd, cnf_reply)){
					state=CONF_REPLY;
				}else{
					state=CONF_NOT_VALID;
    10a0:	c4 e0       	ldi	r28, 0x04	; 4
void CONF_enter(){
	uart1_hal_init();
	CONF_STATES state=CONF_INTRO;
	
	while(1){
		switch(state){
    10a2:	ec 2f       	mov	r30, r28
    10a4:	f0 e0       	ldi	r31, 0x00	; 0
    10a6:	e9 30       	cpi	r30, 0x09	; 9
    10a8:	f1 05       	cpc	r31, r1
    10aa:	d8 f7       	brcc	.-10     	; 0x10a2 <CONF_enter+0x18>
    10ac:	e2 5c       	subi	r30, 0xC2	; 194
    10ae:	ff 4f       	sbci	r31, 0xFF	; 255
    10b0:	0c 94 70 0f 	jmp	0x1ee0	; 0x1ee0 <__tablejump2__>
			case CONF_INTRO:
				uart1_hal_send_string("Hello");
    10b4:	64 e1       	ldi	r22, 0x14	; 20
    10b6:	72 e0       	ldi	r23, 0x02	; 2
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	0e 94 b4 0a 	call	0x1568	; 0x1568 <uart1_hal_send_string>
				state=CONF_WAIT_FOR_CMD;
    10be:	c1 e0       	ldi	r28, 0x01	; 1
			break;
    10c0:	f0 cf       	rjmp	.-32     	; 0x10a2 <CONF_enter+0x18>
			
			case CONF_WAIT_FOR_CMD:
				state=CONF_WAIT_FOR_CMD;
				if(uart1_hal_message_ready()){
    10c2:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <uart1_hal_message_ready>
    10c6:	81 11       	cpse	r24, r1
					state=CONF_PARSE;
    10c8:	c2 e0       	ldi	r28, 0x02	; 2
				}
				if(uart1_hal_rx_full()){
    10ca:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <uart1_hal_rx_full>
    10ce:	81 11       	cpse	r24, r1
    10d0:	e1 cf       	rjmp	.-62     	; 0x1094 <CONF_enter+0xa>
    10d2:	e7 cf       	rjmp	.-50     	; 0x10a2 <CONF_enter+0x18>
					state=CONF_NOT_VALID;
				}
			break;
			
			case CONF_PARSE:
				uart1_hal_read_message_as_str(cnf_rx_cmd);
    10d4:	88 e5       	ldi	r24, 0x58	; 88
    10d6:	93 e0       	ldi	r25, 0x03	; 3
    10d8:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <uart1_hal_read_message_as_str>
				if(validate_cmd(cnf_rx_cmd)){
    10dc:	88 e5       	ldi	r24, 0x58	; 88
    10de:	93 e0       	ldi	r25, 0x03	; 3
    10e0:	0e 94 48 0c 	call	0x1890	; 0x1890 <validate_cmd>
    10e4:	88 23       	and	r24, r24
    10e6:	c1 f2       	breq	.-80     	; 0x1098 <CONF_enter+0xe>
					state=parse_cmd(cnf_rx_cmd);
    10e8:	88 e5       	ldi	r24, 0x58	; 88
    10ea:	93 e0       	ldi	r25, 0x03	; 3
    10ec:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <parse_cmd>
    10f0:	c8 2f       	mov	r28, r24
    10f2:	d7 cf       	rjmp	.-82     	; 0x10a2 <CONF_enter+0x18>
					state=CONF_FORMAT_ERR;
				}
			break;
			
			case CONF_READ:
				if(handle_read(cnf_rx_cmd, cnf_reply)){
    10f4:	68 e5       	ldi	r22, 0x58	; 88
    10f6:	73 e0       	ldi	r23, 0x03	; 3
    10f8:	80 e8       	ldi	r24, 0x80	; 128
    10fa:	40 e9       	ldi	r20, 0x90	; 144
    10fc:	52 e0       	ldi	r21, 0x02	; 2
    10fe:	0e 94 ab 08 	call	0x1156	; 0x1156 <handle_read>
    1102:	88 23       	and	r24, r24
    1104:	59 f2       	breq	.-106    	; 0x109c <CONF_enter+0x12>
					state=CONF_REPLY;
    1106:	c8 e0       	ldi	r28, 0x08	; 8
    1108:	cc cf       	rjmp	.-104    	; 0x10a2 <CONF_enter+0x18>
					state=CONF_NOT_VALID;
				}
			break;
			
			case CONF_WRTIE:
				if(handle_write(cnf_rx_cmd, cnf_reply)){
    110a:	68 e5       	ldi	r22, 0x58	; 88
    110c:	73 e0       	ldi	r23, 0x03	; 3
    110e:	80 e8       	ldi	r24, 0x80	; 128
    1110:	40 e9       	ldi	r20, 0x90	; 144
    1112:	52 e0       	ldi	r21, 0x02	; 2
    1114:	0e 94 c7 09 	call	0x138e	; 0x138e <handle_write>
    1118:	88 23       	and	r24, r24
    111a:	11 f2       	breq	.-124    	; 0x10a0 <CONF_enter+0x16>
					state=CONF_REPLY;
    111c:	c8 e0       	ldi	r28, 0x08	; 8
    111e:	c1 cf       	rjmp	.-126    	; 0x10a2 <CONF_enter+0x18>
					state=CONF_NOT_VALID;
				}
			break;
			
			case CONF_REPLY:
				uart1_hal_send_string(cnf_reply);
    1120:	60 e9       	ldi	r22, 0x90	; 144
    1122:	72 e0       	ldi	r23, 0x02	; 2
    1124:	80 e8       	ldi	r24, 0x80	; 128
    1126:	0e 94 b4 0a 	call	0x1568	; 0x1568 <uart1_hal_send_string>
				state=CONF_WAIT_FOR_CMD;
    112a:	c1 e0       	ldi	r28, 0x01	; 1
			break;
    112c:	ba cf       	rjmp	.-140    	; 0x10a2 <CONF_enter+0x18>
			
			case CONF_NOT_VALID:
				uart1_hal_send_string("Not valid");
    112e:	6a e1       	ldi	r22, 0x1A	; 26
    1130:	72 e0       	ldi	r23, 0x02	; 2
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	0e 94 b4 0a 	call	0x1568	; 0x1568 <uart1_hal_send_string>
				uart1_hal_clear_rx_buffer();
    1138:	0e 94 76 0f 	call	0x1eec	; 0x1eec <uart1_hal_clear_rx_buffer>
				state=CONF_WAIT_FOR_CMD;
    113c:	c1 e0       	ldi	r28, 0x01	; 1
			break;
    113e:	b1 cf       	rjmp	.-158    	; 0x10a2 <CONF_enter+0x18>
			
			case CONF_FORMAT_ERR:
				uart1_hal_send_string("Wrong format");
    1140:	64 e2       	ldi	r22, 0x24	; 36
    1142:	72 e0       	ldi	r23, 0x02	; 2
    1144:	80 e0       	ldi	r24, 0x00	; 0
    1146:	0e 94 b4 0a 	call	0x1568	; 0x1568 <uart1_hal_send_string>
				uart1_hal_clear_rx_buffer();
    114a:	0e 94 76 0f 	call	0x1eec	; 0x1eec <uart1_hal_clear_rx_buffer>
				state=CONF_WAIT_FOR_CMD;
    114e:	c1 e0       	ldi	r28, 0x01	; 1
			break;
    1150:	a8 cf       	rjmp	.-176    	; 0x10a2 <CONF_enter+0x18>
			
			case CONF_EXIT:
				return;
		}
	}
}
    1152:	cf 91       	pop	r28
    1154:	08 95       	ret

Disassembly of section .text.write_deveui:

00001d06 <write_deveui>:
		return write_PPM_factor(cmd, res);
	}
	return true;
}

static bool write_deveui(const char cmd[], char res[]){
    1d06:	0f 93       	push	r16
    1d08:	1f 93       	push	r17
    1d0a:	cf 93       	push	r28
    1d0c:	8a 01       	movw	r16, r20
	if(!get_parameter(cmd, arg, 2)) return false;
    1d0e:	22 e0       	ldi	r18, 0x02	; 2
    1d10:	44 ee       	ldi	r20, 0xE4	; 228
    1d12:	55 e0       	ldi	r21, 0x05	; 5
    1d14:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <get_parameter>
    1d18:	c8 2f       	mov	r28, r24
    1d1a:	88 23       	and	r24, r24
    1d1c:	31 f0       	breq	.+12     	; 0x1d2a <write_deveui+0x24>
	
	strcpy(res, arg);
    1d1e:	44 ee       	ldi	r20, 0xE4	; 228
    1d20:	55 e0       	ldi	r21, 0x05	; 5
    1d22:	60 e8       	ldi	r22, 0x80	; 128
    1d24:	c8 01       	movw	r24, r16
    1d26:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <strcpy>
	
	return true;
}
    1d2a:	8c 2f       	mov	r24, r28
    1d2c:	cf 91       	pop	r28
    1d2e:	1f 91       	pop	r17
    1d30:	0f 91       	pop	r16
    1d32:	08 95       	ret

Disassembly of section .text.write_PPM_factor:

00001838 <write_PPM_factor>:

static bool write_PPM_factor(const char cmd[], char res[]){
    1838:	1f 93       	push	r17
    183a:	cf 93       	push	r28
    183c:	df 93       	push	r29
    183e:	d4 2f       	mov	r29, r20
    1840:	15 2f       	mov	r17, r21
	if(!get_parameter(cmd, arg, 2)) return false;
    1842:	22 e0       	ldi	r18, 0x02	; 2
    1844:	44 ee       	ldi	r20, 0xE4	; 228
    1846:	55 e0       	ldi	r21, 0x05	; 5
    1848:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <get_parameter>
    184c:	c8 2f       	mov	r28, r24
    184e:	88 23       	and	r24, r24
    1850:	d1 f0       	breq	.+52     	; 0x1886 <write_PPM_factor+0x4e>
	
	float val=str2flaot(arg);
    1852:	84 ee       	ldi	r24, 0xE4	; 228
    1854:	95 e0       	ldi	r25, 0x05	; 5
    1856:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <str2flaot>

	
	sprintf(res, "%.2f", val);
    185a:	9f 93       	push	r25
    185c:	8f 93       	push	r24
    185e:	7f 93       	push	r23
    1860:	6f 93       	push	r22
    1862:	82 ee       	ldi	r24, 0xE2	; 226
    1864:	91 e0       	ldi	r25, 0x01	; 1
    1866:	a0 e0       	ldi	r26, 0x00	; 0
    1868:	af 93       	push	r26
    186a:	9f 93       	push	r25
    186c:	8f 93       	push	r24
    186e:	1f 93       	push	r17
    1870:	df 93       	push	r29
    1872:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <sprintf>
	
	
	return true;
    1876:	8d b7       	in	r24, 0x3d	; 61
    1878:	9e b7       	in	r25, 0x3e	; 62
    187a:	09 96       	adiw	r24, 0x09	; 9
    187c:	0f b6       	in	r0, 0x3f	; 63
    187e:	f8 94       	cli
    1880:	9e bf       	out	0x3e, r25	; 62
    1882:	0f be       	out	0x3f, r0	; 63
    1884:	8d bf       	out	0x3d, r24	; 61
}
    1886:	8c 2f       	mov	r24, r28
    1888:	df 91       	pop	r29
    188a:	cf 91       	pop	r28
    188c:	1f 91       	pop	r17
    188e:	08 95       	ret

Disassembly of section .text.handle_read:

00001156 <handle_read>:
static char arg[80];

static bool write_deveui(const char cmd[], char res[]);
static bool write_PPM_factor(const char cmd[], char res[]);

bool handle_read(const char cmd[], char res[]){
    1156:	af 92       	push	r10
    1158:	bf 92       	push	r11
    115a:	cf 92       	push	r12
    115c:	df 92       	push	r13
    115e:	ef 92       	push	r14
    1160:	1f 93       	push	r17
    1162:	cf 93       	push	r28
    1164:	df 93       	push	r29
    1166:	cd b7       	in	r28, 0x3d	; 61
    1168:	de b7       	in	r29, 0x3e	; 62
    116a:	64 97       	sbiw	r28, 0x14	; 20
    116c:	0f b6       	in	r0, 0x3f	; 63
    116e:	f8 94       	cli
    1170:	de bf       	out	0x3e, r29	; 62
    1172:	0f be       	out	0x3f, r0	; 63
    1174:	cd bf       	out	0x3d, r28	; 61
    1176:	5a 01       	movw	r10, r20
	char par[20];
	if(!get_parameter(cmd, par, 1)) return false;
    1178:	21 e0       	ldi	r18, 0x01	; 1
    117a:	ae 01       	movw	r20, r28
    117c:	4f 5f       	subi	r20, 0xFF	; 255
    117e:	5f 4f       	sbci	r21, 0xFF	; 255
    1180:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <get_parameter>
    1184:	18 2f       	mov	r17, r24
    1186:	88 23       	and	r24, r24
    1188:	d1 f1       	breq	.+116    	; 0x11fe <handle_read+0xa8>
	
	if (strcmp(par, "deveui")==0)
    118a:	ce 01       	movw	r24, r28
    118c:	01 96       	adiw	r24, 0x01	; 1
    118e:	6c 01       	movw	r12, r24
    1190:	20 e8       	ldi	r18, 0x80	; 128
    1192:	e2 2e       	mov	r14, r18
    1194:	27 ee       	ldi	r18, 0xE7	; 231
    1196:	31 e0       	ldi	r19, 0x01	; 1
    1198:	40 e0       	ldi	r20, 0x00	; 0
    119a:	8e 2d       	mov	r24, r14
    119c:	b6 01       	movw	r22, r12
    119e:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <strcmp>
    11a2:	89 2b       	or	r24, r25
    11a4:	49 f4       	brne	.+18     	; 0x11b8 <handle_read+0x62>
	{
		strcpy(res, "DEVEUI");
    11a6:	27 e0       	ldi	r18, 0x07	; 7
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	4e ee       	ldi	r20, 0xEE	; 238
    11ac:	51 e0       	ldi	r21, 0x01	; 1
    11ae:	60 e0       	ldi	r22, 0x00	; 0
    11b0:	c5 01       	movw	r24, r10
    11b2:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <memcpy>
    11b6:	23 c0       	rjmp	.+70     	; 0x11fe <handle_read+0xa8>
	}else if (strcmp(par, "hweui")==0)
    11b8:	25 ef       	ldi	r18, 0xF5	; 245
    11ba:	31 e0       	ldi	r19, 0x01	; 1
    11bc:	40 e0       	ldi	r20, 0x00	; 0
    11be:	8e 2d       	mov	r24, r14
    11c0:	b6 01       	movw	r22, r12
    11c2:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <strcmp>
    11c6:	89 2b       	or	r24, r25
    11c8:	49 f4       	brne	.+18     	; 0x11dc <handle_read+0x86>
	{
		strcpy(res, "HWEUI");
    11ca:	26 e0       	ldi	r18, 0x06	; 6
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	4b ef       	ldi	r20, 0xFB	; 251
    11d0:	51 e0       	ldi	r21, 0x01	; 1
    11d2:	60 e0       	ldi	r22, 0x00	; 0
    11d4:	c5 01       	movw	r24, r10
    11d6:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <memcpy>
    11da:	11 c0       	rjmp	.+34     	; 0x11fe <handle_read+0xa8>
	}else if (strcmp(par, "appeui")==0){
    11dc:	21 e0       	ldi	r18, 0x01	; 1
    11de:	32 e0       	ldi	r19, 0x02	; 2
    11e0:	40 e0       	ldi	r20, 0x00	; 0
    11e2:	8e 2d       	mov	r24, r14
    11e4:	b6 01       	movw	r22, r12
    11e6:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <strcmp>
    11ea:	89 2b       	or	r24, r25
    11ec:	41 f4       	brne	.+16     	; 0x11fe <handle_read+0xa8>
		strcpy(res, "APPEUI");
    11ee:	27 e0       	ldi	r18, 0x07	; 7
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	48 e0       	ldi	r20, 0x08	; 8
    11f4:	52 e0       	ldi	r21, 0x02	; 2
    11f6:	60 e0       	ldi	r22, 0x00	; 0
    11f8:	c5 01       	movw	r24, r10
    11fa:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <memcpy>
	}
	
	return true;
}
    11fe:	81 2f       	mov	r24, r17
    1200:	64 96       	adiw	r28, 0x14	; 20
    1202:	0f b6       	in	r0, 0x3f	; 63
    1204:	f8 94       	cli
    1206:	de bf       	out	0x3e, r29	; 62
    1208:	0f be       	out	0x3f, r0	; 63
    120a:	cd bf       	out	0x3d, r28	; 61
    120c:	df 91       	pop	r29
    120e:	cf 91       	pop	r28
    1210:	1f 91       	pop	r17
    1212:	ef 90       	pop	r14
    1214:	df 90       	pop	r13
    1216:	cf 90       	pop	r12
    1218:	bf 90       	pop	r11
    121a:	af 90       	pop	r10
    121c:	08 95       	ret

Disassembly of section .text.handle_write:

0000138e <handle_write>:

bool handle_write(const char cmd[], char res[]){
    138e:	6f 92       	push	r6
    1390:	7f 92       	push	r7
    1392:	8f 92       	push	r8
    1394:	af 92       	push	r10
    1396:	bf 92       	push	r11
    1398:	cf 92       	push	r12
    139a:	df 92       	push	r13
    139c:	ef 92       	push	r14
    139e:	1f 93       	push	r17
    13a0:	cf 93       	push	r28
    13a2:	df 93       	push	r29
    13a4:	cd b7       	in	r28, 0x3d	; 61
    13a6:	de b7       	in	r29, 0x3e	; 62
    13a8:	64 97       	sbiw	r28, 0x14	; 20
    13aa:	0f b6       	in	r0, 0x3f	; 63
    13ac:	f8 94       	cli
    13ae:	de bf       	out	0x3e, r29	; 62
    13b0:	0f be       	out	0x3f, r0	; 63
    13b2:	cd bf       	out	0x3d, r28	; 61
    13b4:	3b 01       	movw	r6, r22
    13b6:	88 2e       	mov	r8, r24
    13b8:	5a 01       	movw	r10, r20
	char par[20];
	if(!get_parameter(cmd, par, 1)) return false;
    13ba:	21 e0       	ldi	r18, 0x01	; 1
    13bc:	ae 01       	movw	r20, r28
    13be:	4f 5f       	subi	r20, 0xFF	; 255
    13c0:	5f 4f       	sbci	r21, 0xFF	; 255
    13c2:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <get_parameter>
    13c6:	18 2f       	mov	r17, r24
    13c8:	88 23       	and	r24, r24
    13ca:	21 f1       	breq	.+72     	; 0x1414 <handle_write+0x86>
	
	if (strcmp(par, "deveui")==0)
    13cc:	ce 01       	movw	r24, r28
    13ce:	01 96       	adiw	r24, 0x01	; 1
    13d0:	6c 01       	movw	r12, r24
    13d2:	20 e8       	ldi	r18, 0x80	; 128
    13d4:	e2 2e       	mov	r14, r18
    13d6:	27 ee       	ldi	r18, 0xE7	; 231
    13d8:	31 e0       	ldi	r19, 0x01	; 1
    13da:	40 e0       	ldi	r20, 0x00	; 0
    13dc:	8e 2d       	mov	r24, r14
    13de:	b6 01       	movw	r22, r12
    13e0:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <strcmp>
    13e4:	89 2b       	or	r24, r25
    13e6:	39 f4       	brne	.+14     	; 0x13f6 <handle_write+0x68>
	{
		return write_deveui(cmd, res);
    13e8:	a5 01       	movw	r20, r10
    13ea:	88 2d       	mov	r24, r8
    13ec:	b3 01       	movw	r22, r6
    13ee:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <write_deveui>
    13f2:	18 2f       	mov	r17, r24
    13f4:	0f c0       	rjmp	.+30     	; 0x1414 <handle_write+0x86>
	}else if(strcmp(par, "ppmx")==0){
    13f6:	2f e0       	ldi	r18, 0x0F	; 15
    13f8:	32 e0       	ldi	r19, 0x02	; 2
    13fa:	40 e0       	ldi	r20, 0x00	; 0
    13fc:	8e 2d       	mov	r24, r14
    13fe:	b6 01       	movw	r22, r12
    1400:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <strcmp>
    1404:	89 2b       	or	r24, r25
    1406:	31 f4       	brne	.+12     	; 0x1414 <handle_write+0x86>
		return write_PPM_factor(cmd, res);
    1408:	a5 01       	movw	r20, r10
    140a:	88 2d       	mov	r24, r8
    140c:	b3 01       	movw	r22, r6
    140e:	0e 94 1c 0c 	call	0x1838	; 0x1838 <write_PPM_factor>
    1412:	18 2f       	mov	r17, r24
	}
	return true;
}
    1414:	81 2f       	mov	r24, r17
    1416:	64 96       	adiw	r28, 0x14	; 20
    1418:	0f b6       	in	r0, 0x3f	; 63
    141a:	f8 94       	cli
    141c:	de bf       	out	0x3e, r29	; 62
    141e:	0f be       	out	0x3f, r0	; 63
    1420:	cd bf       	out	0x3d, r28	; 61
    1422:	df 91       	pop	r29
    1424:	cf 91       	pop	r28
    1426:	1f 91       	pop	r17
    1428:	ef 90       	pop	r14
    142a:	df 90       	pop	r13
    142c:	cf 90       	pop	r12
    142e:	bf 90       	pop	r11
    1430:	af 90       	pop	r10
    1432:	8f 90       	pop	r8
    1434:	7f 90       	pop	r7
    1436:	6f 90       	pop	r6
    1438:	08 95       	ret

Disassembly of section .text.count_parameters:

000018e6 <count_parameters>:
	par[parLen]='\0';
	
	return true;
}

uint8_t count_parameters(const char src[]){
    18e6:	6f 92       	push	r6
    18e8:	7f 92       	push	r7
    18ea:	8f 92       	push	r8
    18ec:	cf 92       	push	r12
    18ee:	df 92       	push	r13
    18f0:	ef 92       	push	r14
    18f2:	3b 01       	movw	r6, r22
    18f4:	88 2e       	mov	r8, r24
	uint16_t len=strlen(src);
    18f6:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <strlen>
    18fa:	bc 01       	movw	r22, r24
	uint8_t cnt=0;
	
	for (uint16_t i=0; i<len; i++)
    18fc:	20 e0       	ldi	r18, 0x00	; 0
    18fe:	30 e0       	ldi	r19, 0x00	; 0
	return true;
}

uint8_t count_parameters(const char src[]){
	uint16_t len=strlen(src);
	uint8_t cnt=0;
    1900:	80 e0       	ldi	r24, 0x00	; 0
	
	for (uint16_t i=0; i<len; i++)
    1902:	10 c0       	rjmp	.+32     	; 0x1924 <count_parameters+0x3e>
	{
		if(src[i]==' '){
    1904:	e8 2c       	mov	r14, r8
    1906:	63 01       	movw	r12, r6
    1908:	c2 0e       	add	r12, r18
    190a:	d3 1e       	adc	r13, r19
    190c:	e1 1c       	adc	r14, r1
    190e:	37 fd       	sbrc	r19, 7
    1910:	ea 94       	dec	r14
    1912:	f6 01       	movw	r30, r12
    1914:	94 91       	lpm	r25, Z
    1916:	e7 fc       	sbrc	r14, 7
    1918:	90 81       	ld	r25, Z
    191a:	90 32       	cpi	r25, 0x20	; 32
    191c:	09 f4       	brne	.+2      	; 0x1920 <count_parameters+0x3a>
			cnt++;
    191e:	8f 5f       	subi	r24, 0xFF	; 255

uint8_t count_parameters(const char src[]){
	uint16_t len=strlen(src);
	uint8_t cnt=0;
	
	for (uint16_t i=0; i<len; i++)
    1920:	2f 5f       	subi	r18, 0xFF	; 255
    1922:	3f 4f       	sbci	r19, 0xFF	; 255
    1924:	26 17       	cp	r18, r22
    1926:	37 07       	cpc	r19, r23
    1928:	68 f3       	brcs	.-38     	; 0x1904 <count_parameters+0x1e>
		if(src[i]==' '){
			cnt++;
		}
	}
	return cnt;
}
    192a:	ef 90       	pop	r14
    192c:	df 90       	pop	r13
    192e:	cf 90       	pop	r12
    1930:	8f 90       	pop	r8
    1932:	7f 90       	pop	r7
    1934:	6f 90       	pop	r6
    1936:	08 95       	ret

Disassembly of section .text.par_index:

000017c8 <par_index>:

uint16_t par_index(const char src[], uint8_t parNo){
    17c8:	cf 92       	push	r12
    17ca:	df 92       	push	r13
    17cc:	ef 92       	push	r14
    17ce:	0f 93       	push	r16
    17d0:	1f 93       	push	r17
    17d2:	cf 93       	push	r28
    17d4:	df 93       	push	r29
	uint8_t cnt=0;
	
	if(parNo==0) return 0;
    17d6:	44 23       	and	r20, r20
    17d8:	29 f1       	breq	.+74     	; 0x1824 <par_index+0x5c>
    17da:	04 2f       	mov	r16, r20
    17dc:	6b 01       	movw	r12, r22
    17de:	e8 2e       	mov	r14, r24
    17e0:	c0 e0       	ldi	r28, 0x00	; 0
    17e2:	d0 e0       	ldi	r29, 0x00	; 0
    17e4:	10 e0       	ldi	r17, 0x00	; 0
    17e6:	14 c0       	rjmp	.+40     	; 0x1810 <par_index+0x48>
	
	for (uint16_t i=0; i<strlen(src); i++)
	{
		if(src[i]==' '){
    17e8:	ae 2d       	mov	r26, r14
    17ea:	c6 01       	movw	r24, r12
    17ec:	8c 0f       	add	r24, r28
    17ee:	9d 1f       	adc	r25, r29
    17f0:	a1 1d       	adc	r26, r1
    17f2:	d7 fd       	sbrc	r29, 7
    17f4:	aa 95       	dec	r26
    17f6:	fc 01       	movw	r30, r24
    17f8:	84 91       	lpm	r24, Z
    17fa:	a7 fd       	sbrc	r26, 7
    17fc:	80 81       	ld	r24, Z
    17fe:	80 32       	cpi	r24, 0x20	; 32
    1800:	31 f4       	brne	.+12     	; 0x180e <par_index+0x46>
			cnt++;
    1802:	1f 5f       	subi	r17, 0xFF	; 255
			if(cnt==parNo){
    1804:	01 13       	cpse	r16, r17
    1806:	03 c0       	rjmp	.+6      	; 0x180e <par_index+0x46>
				return i+1;
    1808:	ce 01       	movw	r24, r28
    180a:	01 96       	adiw	r24, 0x01	; 1
    180c:	0d c0       	rjmp	.+26     	; 0x1828 <par_index+0x60>
uint16_t par_index(const char src[], uint8_t parNo){
	uint8_t cnt=0;
	
	if(parNo==0) return 0;
	
	for (uint16_t i=0; i<strlen(src); i++)
    180e:	21 96       	adiw	r28, 0x01	; 1
    1810:	8e 2d       	mov	r24, r14
    1812:	b6 01       	movw	r22, r12
    1814:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <strlen>
    1818:	c8 17       	cp	r28, r24
    181a:	d9 07       	cpc	r29, r25
    181c:	28 f3       	brcs	.-54     	; 0x17e8 <par_index+0x20>
			if(cnt==parNo){
				return i+1;
			}
		}
	}
	return 0;
    181e:	80 e0       	ldi	r24, 0x00	; 0
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	02 c0       	rjmp	.+4      	; 0x1828 <par_index+0x60>
}

uint16_t par_index(const char src[], uint8_t parNo){
	uint8_t cnt=0;
	
	if(parNo==0) return 0;
    1824:	80 e0       	ldi	r24, 0x00	; 0
    1826:	90 e0       	ldi	r25, 0x00	; 0
				return i+1;
			}
		}
	}
	return 0;
    1828:	df 91       	pop	r29
    182a:	cf 91       	pop	r28
    182c:	1f 91       	pop	r17
    182e:	0f 91       	pop	r16
    1830:	ef 90       	pop	r14
    1832:	df 90       	pop	r13
    1834:	cf 90       	pop	r12
    1836:	08 95       	ret

Disassembly of section .text.get_parameter:

000014d2 <get_parameter>:

#include <xc.h>
#include <stdbool.h>
#include <string.h>

bool get_parameter(const char src[], char par[], uint8_t parNo){
    14d2:	8f 92       	push	r8
    14d4:	9f 92       	push	r9
    14d6:	af 92       	push	r10
    14d8:	cf 92       	push	r12
    14da:	df 92       	push	r13
    14dc:	ef 92       	push	r14
    14de:	ff 92       	push	r15
    14e0:	0f 93       	push	r16
    14e2:	1f 93       	push	r17
    14e4:	cf 93       	push	r28
    14e6:	df 93       	push	r29
    14e8:	6b 01       	movw	r12, r22
    14ea:	e8 2e       	mov	r14, r24
    14ec:	ea 01       	movw	r28, r20
    14ee:	f2 2e       	mov	r15, r18
	uint8_t pars=count_parameters(src);
    14f0:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <count_parameters>
	if(pars<parNo) return false;
    14f4:	8f 15       	cp	r24, r15
    14f6:	58 f1       	brcs	.+86     	; 0x154e <get_parameter+0x7c>
	
	uint16_t len=strlen(src);
    14f8:	8e 2d       	mov	r24, r14
    14fa:	b6 01       	movw	r22, r12
    14fc:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <strlen>
    1500:	8c 01       	movw	r16, r24
	uint16_t startIndex=par_index(src, parNo);
    1502:	4f 2d       	mov	r20, r15
    1504:	8e 2d       	mov	r24, r14
    1506:	b6 01       	movw	r22, r12
    1508:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <par_index>
	uint8_t parLen=0;
    150c:	90 e0       	ldi	r25, 0x00	; 0
	
	for (uint8_t i=startIndex; i<len; i++)
    150e:	15 c0       	rjmp	.+42     	; 0x153a <get_parameter+0x68>
	{
		if(src[i]==' ') break;
    1510:	46 01       	movw	r8, r12
    1512:	ae 2c       	mov	r10, r14
    1514:	82 0e       	add	r8, r18
    1516:	93 1e       	adc	r9, r19
    1518:	a1 1c       	adc	r10, r1
    151a:	37 fd       	sbrc	r19, 7
    151c:	aa 94       	dec	r10
    151e:	4a 2d       	mov	r20, r10
    1520:	94 01       	movw	r18, r8
    1522:	f4 01       	movw	r30, r8
    1524:	24 91       	lpm	r18, Z
    1526:	47 fd       	sbrc	r20, 7
    1528:	20 81       	ld	r18, Z
    152a:	20 32       	cpi	r18, 0x20	; 32
    152c:	59 f0       	breq	.+22     	; 0x1544 <get_parameter+0x72>
		par[parLen++]=src[i];
    152e:	fe 01       	movw	r30, r28
    1530:	e9 0f       	add	r30, r25
    1532:	f1 1d       	adc	r31, r1
    1534:	20 83       	st	Z, r18
	
	uint16_t len=strlen(src);
	uint16_t startIndex=par_index(src, parNo);
	uint8_t parLen=0;
	
	for (uint8_t i=startIndex; i<len; i++)
    1536:	8f 5f       	subi	r24, 0xFF	; 255
	{
		if(src[i]==' ') break;
		par[parLen++]=src[i];
    1538:	9f 5f       	subi	r25, 0xFF	; 255
	
	uint16_t len=strlen(src);
	uint16_t startIndex=par_index(src, parNo);
	uint8_t parLen=0;
	
	for (uint8_t i=startIndex; i<len; i++)
    153a:	28 2f       	mov	r18, r24
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	20 17       	cp	r18, r16
    1540:	31 07       	cpc	r19, r17
    1542:	30 f3       	brcs	.-52     	; 0x1510 <get_parameter+0x3e>
	{
		if(src[i]==' ') break;
		par[parLen++]=src[i];
	}
	par[parLen]='\0';
    1544:	c9 0f       	add	r28, r25
    1546:	d1 1d       	adc	r29, r1
    1548:	18 82       	st	Y, r1
	
	return true;
    154a:	81 e0       	ldi	r24, 0x01	; 1
    154c:	01 c0       	rjmp	.+2      	; 0x1550 <get_parameter+0x7e>
#include <stdbool.h>
#include <string.h>

bool get_parameter(const char src[], char par[], uint8_t parNo){
	uint8_t pars=count_parameters(src);
	if(pars<parNo) return false;
    154e:	80 e0       	ldi	r24, 0x00	; 0
		par[parLen++]=src[i];
	}
	par[parLen]='\0';
	
	return true;
}
    1550:	df 91       	pop	r29
    1552:	cf 91       	pop	r28
    1554:	1f 91       	pop	r17
    1556:	0f 91       	pop	r16
    1558:	ff 90       	pop	r15
    155a:	ef 90       	pop	r14
    155c:	df 90       	pop	r13
    155e:	cf 90       	pop	r12
    1560:	af 90       	pop	r10
    1562:	9f 90       	pop	r9
    1564:	8f 90       	pop	r8
    1566:	08 95       	ret

Disassembly of section .text.get_decimal:

000012da <get_decimal>:
	return intVal+deci;
	
	
}

static float get_decimal(char str[]){
    12da:	cf 92       	push	r12
    12dc:	df 92       	push	r13
    12de:	ef 92       	push	r14
    12e0:	ff 92       	push	r15
    12e2:	0f 93       	push	r16
    12e4:	1f 93       	push	r17
    12e6:	cf 93       	push	r28
    12e8:	df 93       	push	r29
    12ea:	6c 01       	movw	r12, r24
	uint8_t index=0;
	
	for (uint8_t i=0; i<strlen(str)-1; i++)
    12ec:	10 e0       	ldi	r17, 0x00	; 0
    12ee:	08 c0       	rjmp	.+16     	; 0x1300 <get_decimal+0x26>
	{
		if(str[i]=='.'){
    12f0:	cc 0d       	add	r28, r12
    12f2:	dd 1d       	adc	r29, r13
    12f4:	88 81       	ld	r24, Y
    12f6:	8e 32       	cpi	r24, 0x2E	; 46
    12f8:	11 f4       	brne	.+4      	; 0x12fe <get_decimal+0x24>
			index=i+1;
    12fa:	1f 5f       	subi	r17, 0xFF	; 255
			break;
    12fc:	0c c0       	rjmp	.+24     	; 0x1316 <get_decimal+0x3c>
}

static float get_decimal(char str[]){
	uint8_t index=0;
	
	for (uint8_t i=0; i<strlen(str)-1; i++)
    12fe:	1f 5f       	subi	r17, 0xFF	; 255
    1300:	c1 2f       	mov	r28, r17
    1302:	d0 e0       	ldi	r29, 0x00	; 0
    1304:	b6 01       	movw	r22, r12
    1306:	80 e8       	ldi	r24, 0x80	; 128
    1308:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <strlen>
    130c:	01 97       	sbiw	r24, 0x01	; 1
    130e:	c8 17       	cp	r28, r24
    1310:	d9 07       	cpc	r29, r25
    1312:	70 f3       	brcs	.-36     	; 0x12f0 <get_decimal+0x16>
	
	
}

static float get_decimal(char str[]){
	uint8_t index=0;
    1314:	10 e0       	ldi	r17, 0x00	; 0
			index=i+1;
			break;
		}
	}
	
	if(index==0) return 0.0000;
    1316:	11 23       	and	r17, r17
    1318:	71 f1       	breq	.+92     	; 0x1376 <get_decimal+0x9c>
	uint8_t len=strlen(&str[index]);
    131a:	c1 0e       	add	r12, r17
    131c:	d1 1c       	adc	r13, r1
    131e:	80 e8       	ldi	r24, 0x80	; 128
    1320:	e8 2e       	mov	r14, r24
    1322:	8e 2d       	mov	r24, r14
    1324:	b6 01       	movw	r22, r12
    1326:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <strlen>
    132a:	c8 2f       	mov	r28, r24
	uint16_t val=atoi(&str[index]);
    132c:	8e 2d       	mov	r24, r14
    132e:	b6 01       	movw	r22, r12
    1330:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <atoi>
    1334:	8c 01       	movw	r16, r24
	float divisor=1;
    1336:	0f 2e       	mov	r0, r31
    1338:	c1 2c       	mov	r12, r1
    133a:	d1 2c       	mov	r13, r1
    133c:	f0 e8       	ldi	r31, 0x80	; 128
    133e:	ef 2e       	mov	r14, r31
    1340:	ff e3       	ldi	r31, 0x3F	; 63
    1342:	ff 2e       	mov	r15, r31
    1344:	f0 2d       	mov	r31, r0
	
	while(len>0){
    1346:	0b c0       	rjmp	.+22     	; 0x135e <get_decimal+0x84>
		divisor*=10;
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	40 e2       	ldi	r20, 0x20	; 32
    134e:	51 e4       	ldi	r21, 0x41	; 65
    1350:	c7 01       	movw	r24, r14
    1352:	b6 01       	movw	r22, r12
    1354:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__mulsf3>
    1358:	6b 01       	movw	r12, r22
    135a:	7c 01       	movw	r14, r24
		len--;
    135c:	c1 50       	subi	r28, 0x01	; 1
	if(index==0) return 0.0000;
	uint8_t len=strlen(&str[index]);
	uint16_t val=atoi(&str[index]);
	float divisor=1;
	
	while(len>0){
    135e:	c1 11       	cpse	r28, r1
    1360:	f3 cf       	rjmp	.-26     	; 0x1348 <get_decimal+0x6e>
		divisor*=10;
		len--;
	}
	
	return ((float) val)/divisor;
    1362:	b8 01       	movw	r22, r16
    1364:	80 e0       	ldi	r24, 0x00	; 0
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__floatunsisf>
    136c:	a7 01       	movw	r20, r14
    136e:	96 01       	movw	r18, r12
    1370:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__divsf3>
    1374:	03 c0       	rjmp	.+6      	; 0x137c <get_decimal+0xa2>
			index=i+1;
			break;
		}
	}
	
	if(index==0) return 0.0000;
    1376:	60 e0       	ldi	r22, 0x00	; 0
    1378:	70 e0       	ldi	r23, 0x00	; 0
    137a:	cb 01       	movw	r24, r22
		divisor*=10;
		len--;
	}
	
	return ((float) val)/divisor;
    137c:	df 91       	pop	r29
    137e:	cf 91       	pop	r28
    1380:	1f 91       	pop	r17
    1382:	0f 91       	pop	r16
    1384:	ff 90       	pop	r15
    1386:	ef 90       	pop	r14
    1388:	df 90       	pop	r13
    138a:	cf 90       	pop	r12
    138c:	08 95       	ret

Disassembly of section .text.str2flaot:

000019d4 <str2flaot>:
#include <stdlib.h>
#include <string.h>

static float get_decimal(char str[]);

float str2flaot(char str[]){
    19d4:	cf 92       	push	r12
    19d6:	df 92       	push	r13
    19d8:	ef 92       	push	r14
    19da:	ff 92       	push	r15
    19dc:	0f 93       	push	r16
    19de:	1f 93       	push	r17
    19e0:	cf 93       	push	r28
    19e2:	df 93       	push	r29
    19e4:	8c 01       	movw	r16, r24
	
	uint16_t intVal=atoi(str);
    19e6:	bc 01       	movw	r22, r24
    19e8:	80 e8       	ldi	r24, 0x80	; 128
    19ea:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <atoi>
    19ee:	ec 01       	movw	r28, r24
	float deci=get_decimal(str);
    19f0:	c8 01       	movw	r24, r16
    19f2:	0e 94 6d 09 	call	0x12da	; 0x12da <get_decimal>
    19f6:	6b 01       	movw	r12, r22
    19f8:	7c 01       	movw	r14, r24
	return intVal+deci;
    19fa:	be 01       	movw	r22, r28
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__floatunsisf>
    1a04:	9b 01       	movw	r18, r22
    1a06:	ac 01       	movw	r20, r24
    1a08:	c7 01       	movw	r24, r14
    1a0a:	b6 01       	movw	r22, r12
    1a0c:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <__addsf3>
	
	
}
    1a10:	df 91       	pop	r29
    1a12:	cf 91       	pop	r28
    1a14:	1f 91       	pop	r17
    1a16:	0f 91       	pop	r16
    1a18:	ff 90       	pop	r15
    1a1a:	ef 90       	pop	r14
    1a1c:	df 90       	pop	r13
    1a1e:	cf 90       	pop	r12
    1a20:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001e8e <__subsf3>:
    1e8e:	50 58       	subi	r21, 0x80	; 128

00001e90 <__addsf3>:
    1e90:	bb 27       	eor	r27, r27
    1e92:	aa 27       	eor	r26, r26
    1e94:	0e 94 de 07 	call	0xfbc	; 0xfbc <__addsf3x>
    1e98:	0c 94 c4 0e 	jmp	0x1d88	; 0x1d88 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000fbc <__addsf3x>:
     fbc:	11 c0       	rjmp	.+34     	; 0xfe0 <__addsf3x+0x24>
     fbe:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__fp_pscA>
     fc2:	38 f0       	brcs	.+14     	; 0xfd2 <__addsf3x+0x16>
     fc4:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <__fp_pscB>
     fc8:	20 f0       	brcs	.+8      	; 0xfd2 <__addsf3x+0x16>
     fca:	39 f4       	brne	.+14     	; 0xfda <__addsf3x+0x1e>
     fcc:	9f 3f       	cpi	r25, 0xFF	; 255
     fce:	19 f4       	brne	.+6      	; 0xfd6 <__addsf3x+0x1a>
     fd0:	26 f4       	brtc	.+8      	; 0xfda <__addsf3x+0x1e>
     fd2:	0c 94 87 0f 	jmp	0x1f0e	; 0x1f0e <__fp_nan>
     fd6:	0e f4       	brtc	.+2      	; 0xfda <__addsf3x+0x1e>
     fd8:	e0 95       	com	r30
     fda:	e7 fb       	bst	r30, 7
     fdc:	0c 94 6a 0f 	jmp	0x1ed4	; 0x1ed4 <__fp_inf>
     fe0:	e9 2f       	mov	r30, r25
     fe2:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <__fp_split3>
     fe6:	58 f3       	brcs	.-42     	; 0xfbe <__addsf3x+0x2>
     fe8:	ba 17       	cp	r27, r26
     fea:	62 07       	cpc	r22, r18
     fec:	73 07       	cpc	r23, r19
     fee:	84 07       	cpc	r24, r20
     ff0:	95 07       	cpc	r25, r21
     ff2:	20 f0       	brcs	.+8      	; 0xffc <__addsf3x+0x40>
     ff4:	79 f4       	brne	.+30     	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
     ff6:	a6 f5       	brtc	.+104    	; 0x1060 <__DATA_REGION_LENGTH__+0x60>
     ff8:	0c 94 5c 0f 	jmp	0x1eb8	; 0x1eb8 <__fp_zero>
     ffc:	0e f4       	brtc	.+2      	; 0x1000 <__DATA_REGION_LENGTH__>
     ffe:	e0 95       	com	r30
    1000:	0b 2e       	mov	r0, r27
    1002:	ba 2f       	mov	r27, r26
    1004:	a0 2d       	mov	r26, r0
    1006:	0b 01       	movw	r0, r22
    1008:	b9 01       	movw	r22, r18
    100a:	90 01       	movw	r18, r0
    100c:	0c 01       	movw	r0, r24
    100e:	ca 01       	movw	r24, r20
    1010:	a0 01       	movw	r20, r0
    1012:	11 24       	eor	r1, r1
    1014:	ff 27       	eor	r31, r31
    1016:	59 1b       	sub	r21, r25
    1018:	99 f0       	breq	.+38     	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    101a:	59 3f       	cpi	r21, 0xF9	; 249
    101c:	50 f4       	brcc	.+20     	; 0x1032 <__DATA_REGION_LENGTH__+0x32>
    101e:	50 3e       	cpi	r21, 0xE0	; 224
    1020:	68 f1       	brcs	.+90     	; 0x107c <__DATA_REGION_LENGTH__+0x7c>
    1022:	1a 16       	cp	r1, r26
    1024:	f0 40       	sbci	r31, 0x00	; 0
    1026:	a2 2f       	mov	r26, r18
    1028:	23 2f       	mov	r18, r19
    102a:	34 2f       	mov	r19, r20
    102c:	44 27       	eor	r20, r20
    102e:	58 5f       	subi	r21, 0xF8	; 248
    1030:	f3 cf       	rjmp	.-26     	; 0x1018 <__DATA_REGION_LENGTH__+0x18>
    1032:	46 95       	lsr	r20
    1034:	37 95       	ror	r19
    1036:	27 95       	ror	r18
    1038:	a7 95       	ror	r26
    103a:	f0 40       	sbci	r31, 0x00	; 0
    103c:	53 95       	inc	r21
    103e:	c9 f7       	brne	.-14     	; 0x1032 <__DATA_REGION_LENGTH__+0x32>
    1040:	7e f4       	brtc	.+30     	; 0x1060 <__DATA_REGION_LENGTH__+0x60>
    1042:	1f 16       	cp	r1, r31
    1044:	ba 0b       	sbc	r27, r26
    1046:	62 0b       	sbc	r22, r18
    1048:	73 0b       	sbc	r23, r19
    104a:	84 0b       	sbc	r24, r20
    104c:	ba f0       	brmi	.+46     	; 0x107c <__DATA_REGION_LENGTH__+0x7c>
    104e:	91 50       	subi	r25, 0x01	; 1
    1050:	a1 f0       	breq	.+40     	; 0x107a <__DATA_REGION_LENGTH__+0x7a>
    1052:	ff 0f       	add	r31, r31
    1054:	bb 1f       	adc	r27, r27
    1056:	66 1f       	adc	r22, r22
    1058:	77 1f       	adc	r23, r23
    105a:	88 1f       	adc	r24, r24
    105c:	c2 f7       	brpl	.-16     	; 0x104e <__DATA_REGION_LENGTH__+0x4e>
    105e:	0e c0       	rjmp	.+28     	; 0x107c <__DATA_REGION_LENGTH__+0x7c>
    1060:	ba 0f       	add	r27, r26
    1062:	62 1f       	adc	r22, r18
    1064:	73 1f       	adc	r23, r19
    1066:	84 1f       	adc	r24, r20
    1068:	48 f4       	brcc	.+18     	; 0x107c <__DATA_REGION_LENGTH__+0x7c>
    106a:	87 95       	ror	r24
    106c:	77 95       	ror	r23
    106e:	67 95       	ror	r22
    1070:	b7 95       	ror	r27
    1072:	f7 95       	ror	r31
    1074:	9e 3f       	cpi	r25, 0xFE	; 254
    1076:	08 f0       	brcs	.+2      	; 0x107a <__DATA_REGION_LENGTH__+0x7a>
    1078:	b0 cf       	rjmp	.-160    	; 0xfda <__addsf3x+0x1e>
    107a:	93 95       	inc	r25
    107c:	88 0f       	add	r24, r24
    107e:	08 f0       	brcs	.+2      	; 0x1082 <__DATA_REGION_LENGTH__+0x82>
    1080:	99 27       	eor	r25, r25
    1082:	ee 0f       	add	r30, r30
    1084:	97 95       	ror	r25
    1086:	87 95       	ror	r24
    1088:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001ef6 <__divsf3>:
    1ef6:	0e 94 05 07 	call	0xe0a	; 0xe0a <__divsf3x>
    1efa:	0c 94 c4 0e 	jmp	0x1d88	; 0x1d88 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000e0a <__divsf3x>:
 e0a:	10 c0       	rjmp	.+32     	; 0xe2c <__divsf3x+0x22>
 e0c:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <__fp_pscB>
 e10:	58 f0       	brcs	.+22     	; 0xe28 <__divsf3x+0x1e>
 e12:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__fp_pscA>
 e16:	40 f0       	brcs	.+16     	; 0xe28 <__divsf3x+0x1e>
 e18:	29 f4       	brne	.+10     	; 0xe24 <__divsf3x+0x1a>
 e1a:	5f 3f       	cpi	r21, 0xFF	; 255
 e1c:	29 f0       	breq	.+10     	; 0xe28 <__divsf3x+0x1e>
 e1e:	0c 94 6a 0f 	jmp	0x1ed4	; 0x1ed4 <__fp_inf>
 e22:	51 11       	cpse	r21, r1
 e24:	0c 94 5d 0f 	jmp	0x1eba	; 0x1eba <__fp_szero>
 e28:	0c 94 87 0f 	jmp	0x1f0e	; 0x1f0e <__fp_nan>
 e2c:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <__fp_split3>
 e30:	68 f3       	brcs	.-38     	; 0xe0c <__divsf3x+0x2>

00000e32 <__divsf3_pse>:
 e32:	99 23       	and	r25, r25
 e34:	b1 f3       	breq	.-20     	; 0xe22 <__divsf3x+0x18>
 e36:	55 23       	and	r21, r21
 e38:	91 f3       	breq	.-28     	; 0xe1e <__divsf3x+0x14>
 e3a:	95 1b       	sub	r25, r21
 e3c:	55 0b       	sbc	r21, r21
 e3e:	bb 27       	eor	r27, r27
 e40:	aa 27       	eor	r26, r26
 e42:	62 17       	cp	r22, r18
 e44:	73 07       	cpc	r23, r19
 e46:	84 07       	cpc	r24, r20
 e48:	38 f0       	brcs	.+14     	; 0xe58 <__divsf3_pse+0x26>
 e4a:	9f 5f       	subi	r25, 0xFF	; 255
 e4c:	5f 4f       	sbci	r21, 0xFF	; 255
 e4e:	22 0f       	add	r18, r18
 e50:	33 1f       	adc	r19, r19
 e52:	44 1f       	adc	r20, r20
 e54:	aa 1f       	adc	r26, r26
 e56:	a9 f3       	breq	.-22     	; 0xe42 <__divsf3_pse+0x10>
 e58:	35 d0       	rcall	.+106    	; 0xec4 <__divsf3_pse+0x92>
 e5a:	0e 2e       	mov	r0, r30
 e5c:	3a f0       	brmi	.+14     	; 0xe6c <__divsf3_pse+0x3a>
 e5e:	e0 e8       	ldi	r30, 0x80	; 128
 e60:	32 d0       	rcall	.+100    	; 0xec6 <__divsf3_pse+0x94>
 e62:	91 50       	subi	r25, 0x01	; 1
 e64:	50 40       	sbci	r21, 0x00	; 0
 e66:	e6 95       	lsr	r30
 e68:	00 1c       	adc	r0, r0
 e6a:	ca f7       	brpl	.-14     	; 0xe5e <__divsf3_pse+0x2c>
 e6c:	2b d0       	rcall	.+86     	; 0xec4 <__divsf3_pse+0x92>
 e6e:	fe 2f       	mov	r31, r30
 e70:	29 d0       	rcall	.+82     	; 0xec4 <__divsf3_pse+0x92>
 e72:	66 0f       	add	r22, r22
 e74:	77 1f       	adc	r23, r23
 e76:	88 1f       	adc	r24, r24
 e78:	bb 1f       	adc	r27, r27
 e7a:	26 17       	cp	r18, r22
 e7c:	37 07       	cpc	r19, r23
 e7e:	48 07       	cpc	r20, r24
 e80:	ab 07       	cpc	r26, r27
 e82:	b0 e8       	ldi	r27, 0x80	; 128
 e84:	09 f0       	breq	.+2      	; 0xe88 <__divsf3_pse+0x56>
 e86:	bb 0b       	sbc	r27, r27
 e88:	80 2d       	mov	r24, r0
 e8a:	bf 01       	movw	r22, r30
 e8c:	ff 27       	eor	r31, r31
 e8e:	93 58       	subi	r25, 0x83	; 131
 e90:	5f 4f       	sbci	r21, 0xFF	; 255
 e92:	3a f0       	brmi	.+14     	; 0xea2 <__divsf3_pse+0x70>
 e94:	9e 3f       	cpi	r25, 0xFE	; 254
 e96:	51 05       	cpc	r21, r1
 e98:	78 f0       	brcs	.+30     	; 0xeb8 <__divsf3_pse+0x86>
 e9a:	0c 94 6a 0f 	jmp	0x1ed4	; 0x1ed4 <__fp_inf>
 e9e:	0c 94 5d 0f 	jmp	0x1eba	; 0x1eba <__fp_szero>
 ea2:	5f 3f       	cpi	r21, 0xFF	; 255
 ea4:	e4 f3       	brlt	.-8      	; 0xe9e <__divsf3_pse+0x6c>
 ea6:	98 3e       	cpi	r25, 0xE8	; 232
 ea8:	d4 f3       	brlt	.-12     	; 0xe9e <__divsf3_pse+0x6c>
 eaa:	86 95       	lsr	r24
 eac:	77 95       	ror	r23
 eae:	67 95       	ror	r22
 eb0:	b7 95       	ror	r27
 eb2:	f7 95       	ror	r31
 eb4:	9f 5f       	subi	r25, 0xFF	; 255
 eb6:	c9 f7       	brne	.-14     	; 0xeaa <__divsf3_pse+0x78>
 eb8:	88 0f       	add	r24, r24
 eba:	91 1d       	adc	r25, r1
 ebc:	96 95       	lsr	r25
 ebe:	87 95       	ror	r24
 ec0:	97 f9       	bld	r25, 7
 ec2:	08 95       	ret
 ec4:	e1 e0       	ldi	r30, 0x01	; 1
 ec6:	66 0f       	add	r22, r22
 ec8:	77 1f       	adc	r23, r23
 eca:	88 1f       	adc	r24, r24
 ecc:	bb 1f       	adc	r27, r27
 ece:	62 17       	cp	r22, r18
 ed0:	73 07       	cpc	r23, r19
 ed2:	84 07       	cpc	r24, r20
 ed4:	ba 07       	cpc	r27, r26
 ed6:	20 f0       	brcs	.+8      	; 0xee0 <__divsf3_pse+0xae>
 ed8:	62 1b       	sub	r22, r18
 eda:	73 0b       	sbc	r23, r19
 edc:	84 0b       	sbc	r24, r20
 ede:	ba 0b       	sbc	r27, r26
 ee0:	ee 1f       	adc	r30, r30
 ee2:	88 f7       	brcc	.-30     	; 0xec6 <__divsf3_pse+0x94>
 ee4:	e0 95       	com	r30
 ee6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015f2 <__floatunsisf>:
    15f2:	e8 94       	clt
    15f4:	09 c0       	rjmp	.+18     	; 0x1608 <__floatsisf+0x12>

000015f6 <__floatsisf>:
    15f6:	97 fb       	bst	r25, 7
    15f8:	3e f4       	brtc	.+14     	; 0x1608 <__floatsisf+0x12>
    15fa:	90 95       	com	r25
    15fc:	80 95       	com	r24
    15fe:	70 95       	com	r23
    1600:	61 95       	neg	r22
    1602:	7f 4f       	sbci	r23, 0xFF	; 255
    1604:	8f 4f       	sbci	r24, 0xFF	; 255
    1606:	9f 4f       	sbci	r25, 0xFF	; 255
    1608:	99 23       	and	r25, r25
    160a:	a9 f0       	breq	.+42     	; 0x1636 <__floatsisf+0x40>
    160c:	f9 2f       	mov	r31, r25
    160e:	96 e9       	ldi	r25, 0x96	; 150
    1610:	bb 27       	eor	r27, r27
    1612:	93 95       	inc	r25
    1614:	f6 95       	lsr	r31
    1616:	87 95       	ror	r24
    1618:	77 95       	ror	r23
    161a:	67 95       	ror	r22
    161c:	b7 95       	ror	r27
    161e:	f1 11       	cpse	r31, r1
    1620:	f8 cf       	rjmp	.-16     	; 0x1612 <__floatsisf+0x1c>
    1622:	fa f4       	brpl	.+62     	; 0x1662 <__floatsisf+0x6c>
    1624:	bb 0f       	add	r27, r27
    1626:	11 f4       	brne	.+4      	; 0x162c <__floatsisf+0x36>
    1628:	60 ff       	sbrs	r22, 0
    162a:	1b c0       	rjmp	.+54     	; 0x1662 <__floatsisf+0x6c>
    162c:	6f 5f       	subi	r22, 0xFF	; 255
    162e:	7f 4f       	sbci	r23, 0xFF	; 255
    1630:	8f 4f       	sbci	r24, 0xFF	; 255
    1632:	9f 4f       	sbci	r25, 0xFF	; 255
    1634:	16 c0       	rjmp	.+44     	; 0x1662 <__floatsisf+0x6c>
    1636:	88 23       	and	r24, r24
    1638:	11 f0       	breq	.+4      	; 0x163e <__floatsisf+0x48>
    163a:	96 e9       	ldi	r25, 0x96	; 150
    163c:	11 c0       	rjmp	.+34     	; 0x1660 <__floatsisf+0x6a>
    163e:	77 23       	and	r23, r23
    1640:	21 f0       	breq	.+8      	; 0x164a <__floatsisf+0x54>
    1642:	9e e8       	ldi	r25, 0x8E	; 142
    1644:	87 2f       	mov	r24, r23
    1646:	76 2f       	mov	r23, r22
    1648:	05 c0       	rjmp	.+10     	; 0x1654 <__floatsisf+0x5e>
    164a:	66 23       	and	r22, r22
    164c:	71 f0       	breq	.+28     	; 0x166a <__floatsisf+0x74>
    164e:	96 e8       	ldi	r25, 0x86	; 134
    1650:	86 2f       	mov	r24, r22
    1652:	70 e0       	ldi	r23, 0x00	; 0
    1654:	60 e0       	ldi	r22, 0x00	; 0
    1656:	2a f0       	brmi	.+10     	; 0x1662 <__floatsisf+0x6c>
    1658:	9a 95       	dec	r25
    165a:	66 0f       	add	r22, r22
    165c:	77 1f       	adc	r23, r23
    165e:	88 1f       	adc	r24, r24
    1660:	da f7       	brpl	.-10     	; 0x1658 <__floatsisf+0x62>
    1662:	88 0f       	add	r24, r24
    1664:	96 95       	lsr	r25
    1666:	87 95       	ror	r24
    1668:	97 f9       	bld	r25, 7
    166a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001ed4 <__fp_inf>:
    1ed4:	97 f9       	bld	r25, 7
    1ed6:	9f 67       	ori	r25, 0x7F	; 127
    1ed8:	80 e8       	ldi	r24, 0x80	; 128
    1eda:	70 e0       	ldi	r23, 0x00	; 0
    1edc:	60 e0       	ldi	r22, 0x00	; 0
    1ede:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f0e <__fp_nan>:
    1f0e:	9f ef       	ldi	r25, 0xFF	; 255
    1f10:	80 ec       	ldi	r24, 0xC0	; 192
    1f12:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001e9c <__fp_pscA>:
    1e9c:	00 24       	eor	r0, r0
    1e9e:	0a 94       	dec	r0
    1ea0:	16 16       	cp	r1, r22
    1ea2:	17 06       	cpc	r1, r23
    1ea4:	18 06       	cpc	r1, r24
    1ea6:	09 06       	cpc	r0, r25
    1ea8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001eaa <__fp_pscB>:
    1eaa:	00 24       	eor	r0, r0
    1eac:	0a 94       	dec	r0
    1eae:	12 16       	cp	r1, r18
    1eb0:	13 06       	cpc	r1, r19
    1eb2:	14 06       	cpc	r1, r20
    1eb4:	05 06       	cpc	r0, r21
    1eb6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001d88 <__fp_round>:
    1d88:	09 2e       	mov	r0, r25
    1d8a:	03 94       	inc	r0
    1d8c:	00 0c       	add	r0, r0
    1d8e:	11 f4       	brne	.+4      	; 0x1d94 <__fp_round+0xc>
    1d90:	88 23       	and	r24, r24
    1d92:	52 f0       	brmi	.+20     	; 0x1da8 <__fp_round+0x20>
    1d94:	bb 0f       	add	r27, r27
    1d96:	40 f4       	brcc	.+16     	; 0x1da8 <__fp_round+0x20>
    1d98:	bf 2b       	or	r27, r31
    1d9a:	11 f4       	brne	.+4      	; 0x1da0 <__fp_round+0x18>
    1d9c:	60 ff       	sbrs	r22, 0
    1d9e:	04 c0       	rjmp	.+8      	; 0x1da8 <__fp_round+0x20>
    1da0:	6f 5f       	subi	r22, 0xFF	; 255
    1da2:	7f 4f       	sbci	r23, 0xFF	; 255
    1da4:	8f 4f       	sbci	r24, 0xFF	; 255
    1da6:	9f 4f       	sbci	r25, 0xFF	; 255
    1da8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001afc <__fp_split3>:
    1afc:	57 fd       	sbrc	r21, 7
    1afe:	90 58       	subi	r25, 0x80	; 128
    1b00:	44 0f       	add	r20, r20
    1b02:	55 1f       	adc	r21, r21
    1b04:	59 f0       	breq	.+22     	; 0x1b1c <__fp_splitA+0x10>
    1b06:	5f 3f       	cpi	r21, 0xFF	; 255
    1b08:	71 f0       	breq	.+28     	; 0x1b26 <__fp_splitA+0x1a>
    1b0a:	47 95       	ror	r20

00001b0c <__fp_splitA>:
    1b0c:	88 0f       	add	r24, r24
    1b0e:	97 fb       	bst	r25, 7
    1b10:	99 1f       	adc	r25, r25
    1b12:	61 f0       	breq	.+24     	; 0x1b2c <__fp_splitA+0x20>
    1b14:	9f 3f       	cpi	r25, 0xFF	; 255
    1b16:	79 f0       	breq	.+30     	; 0x1b36 <__fp_splitA+0x2a>
    1b18:	87 95       	ror	r24
    1b1a:	08 95       	ret
    1b1c:	12 16       	cp	r1, r18
    1b1e:	13 06       	cpc	r1, r19
    1b20:	14 06       	cpc	r1, r20
    1b22:	55 1f       	adc	r21, r21
    1b24:	f2 cf       	rjmp	.-28     	; 0x1b0a <__fp_split3+0xe>
    1b26:	46 95       	lsr	r20
    1b28:	f1 df       	rcall	.-30     	; 0x1b0c <__fp_splitA>
    1b2a:	08 c0       	rjmp	.+16     	; 0x1b3c <__fp_splitA+0x30>
    1b2c:	16 16       	cp	r1, r22
    1b2e:	17 06       	cpc	r1, r23
    1b30:	18 06       	cpc	r1, r24
    1b32:	99 1f       	adc	r25, r25
    1b34:	f1 cf       	rjmp	.-30     	; 0x1b18 <__fp_splitA+0xc>
    1b36:	86 95       	lsr	r24
    1b38:	71 05       	cpc	r23, r1
    1b3a:	61 05       	cpc	r22, r1
    1b3c:	08 94       	sec
    1b3e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001eb8 <__fp_zero>:
    1eb8:	e8 94       	clt

00001eba <__fp_szero>:
    1eba:	bb 27       	eor	r27, r27
    1ebc:	66 27       	eor	r22, r22
    1ebe:	77 27       	eor	r23, r23
    1ec0:	cb 01       	movw	r24, r22
    1ec2:	97 f9       	bld	r25, 7
    1ec4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001efe <__mulsf3>:
    1efe:	0e 94 74 07 	call	0xee8	; 0xee8 <__mulsf3x>
    1f02:	0c 94 c4 0e 	jmp	0x1d88	; 0x1d88 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000ee8 <__mulsf3x>:
 ee8:	0f c0       	rjmp	.+30     	; 0xf08 <__mulsf3x+0x20>
 eea:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__fp_pscA>
 eee:	38 f0       	brcs	.+14     	; 0xefe <__mulsf3x+0x16>
 ef0:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <__fp_pscB>
 ef4:	20 f0       	brcs	.+8      	; 0xefe <__mulsf3x+0x16>
 ef6:	95 23       	and	r25, r21
 ef8:	11 f0       	breq	.+4      	; 0xefe <__mulsf3x+0x16>
 efa:	0c 94 6a 0f 	jmp	0x1ed4	; 0x1ed4 <__fp_inf>
 efe:	0c 94 87 0f 	jmp	0x1f0e	; 0x1f0e <__fp_nan>
 f02:	11 24       	eor	r1, r1
 f04:	0c 94 5d 0f 	jmp	0x1eba	; 0x1eba <__fp_szero>
 f08:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <__fp_split3>
 f0c:	70 f3       	brcs	.-36     	; 0xeea <__mulsf3x+0x2>

00000f0e <__mulsf3_pse>:
 f0e:	95 9f       	mul	r25, r21
 f10:	c1 f3       	breq	.-16     	; 0xf02 <__mulsf3x+0x1a>
 f12:	95 0f       	add	r25, r21
 f14:	50 e0       	ldi	r21, 0x00	; 0
 f16:	55 1f       	adc	r21, r21
 f18:	62 9f       	mul	r22, r18
 f1a:	f0 01       	movw	r30, r0
 f1c:	72 9f       	mul	r23, r18
 f1e:	bb 27       	eor	r27, r27
 f20:	f0 0d       	add	r31, r0
 f22:	b1 1d       	adc	r27, r1
 f24:	63 9f       	mul	r22, r19
 f26:	aa 27       	eor	r26, r26
 f28:	f0 0d       	add	r31, r0
 f2a:	b1 1d       	adc	r27, r1
 f2c:	aa 1f       	adc	r26, r26
 f2e:	64 9f       	mul	r22, r20
 f30:	66 27       	eor	r22, r22
 f32:	b0 0d       	add	r27, r0
 f34:	a1 1d       	adc	r26, r1
 f36:	66 1f       	adc	r22, r22
 f38:	82 9f       	mul	r24, r18
 f3a:	22 27       	eor	r18, r18
 f3c:	b0 0d       	add	r27, r0
 f3e:	a1 1d       	adc	r26, r1
 f40:	62 1f       	adc	r22, r18
 f42:	73 9f       	mul	r23, r19
 f44:	b0 0d       	add	r27, r0
 f46:	a1 1d       	adc	r26, r1
 f48:	62 1f       	adc	r22, r18
 f4a:	83 9f       	mul	r24, r19
 f4c:	a0 0d       	add	r26, r0
 f4e:	61 1d       	adc	r22, r1
 f50:	22 1f       	adc	r18, r18
 f52:	74 9f       	mul	r23, r20
 f54:	33 27       	eor	r19, r19
 f56:	a0 0d       	add	r26, r0
 f58:	61 1d       	adc	r22, r1
 f5a:	23 1f       	adc	r18, r19
 f5c:	84 9f       	mul	r24, r20
 f5e:	60 0d       	add	r22, r0
 f60:	21 1d       	adc	r18, r1
 f62:	82 2f       	mov	r24, r18
 f64:	76 2f       	mov	r23, r22
 f66:	6a 2f       	mov	r22, r26
 f68:	11 24       	eor	r1, r1
 f6a:	9f 57       	subi	r25, 0x7F	; 127
 f6c:	50 40       	sbci	r21, 0x00	; 0
 f6e:	9a f0       	brmi	.+38     	; 0xf96 <__mulsf3_pse+0x88>
 f70:	f1 f0       	breq	.+60     	; 0xfae <__mulsf3_pse+0xa0>
 f72:	88 23       	and	r24, r24
 f74:	4a f0       	brmi	.+18     	; 0xf88 <__mulsf3_pse+0x7a>
 f76:	ee 0f       	add	r30, r30
 f78:	ff 1f       	adc	r31, r31
 f7a:	bb 1f       	adc	r27, r27
 f7c:	66 1f       	adc	r22, r22
 f7e:	77 1f       	adc	r23, r23
 f80:	88 1f       	adc	r24, r24
 f82:	91 50       	subi	r25, 0x01	; 1
 f84:	50 40       	sbci	r21, 0x00	; 0
 f86:	a9 f7       	brne	.-22     	; 0xf72 <__mulsf3_pse+0x64>
 f88:	9e 3f       	cpi	r25, 0xFE	; 254
 f8a:	51 05       	cpc	r21, r1
 f8c:	80 f0       	brcs	.+32     	; 0xfae <__mulsf3_pse+0xa0>
 f8e:	0c 94 6a 0f 	jmp	0x1ed4	; 0x1ed4 <__fp_inf>
 f92:	0c 94 5d 0f 	jmp	0x1eba	; 0x1eba <__fp_szero>
 f96:	5f 3f       	cpi	r21, 0xFF	; 255
 f98:	e4 f3       	brlt	.-8      	; 0xf92 <__mulsf3_pse+0x84>
 f9a:	98 3e       	cpi	r25, 0xE8	; 232
 f9c:	d4 f3       	brlt	.-12     	; 0xf92 <__mulsf3_pse+0x84>
 f9e:	86 95       	lsr	r24
 fa0:	77 95       	ror	r23
 fa2:	67 95       	ror	r22
 fa4:	b7 95       	ror	r27
 fa6:	f7 95       	ror	r31
 fa8:	e7 95       	ror	r30
 faa:	9f 5f       	subi	r25, 0xFF	; 255
 fac:	c1 f7       	brne	.-16     	; 0xf9e <__mulsf3_pse+0x90>
 fae:	fe 2b       	or	r31, r30
 fb0:	88 0f       	add	r24, r24
 fb2:	91 1d       	adc	r25, r1
 fb4:	96 95       	lsr	r25
 fb6:	87 95       	ror	r24
 fb8:	97 f9       	bld	r25, 7
 fba:	08 95       	ret

Disassembly of section .text.avrlibc:

0000023a <vfprintf>:
 23a:	a4 e1       	ldi	r26, 0x14	; 20
 23c:	b0 e0       	ldi	r27, 0x00	; 0
 23e:	e3 e2       	ldi	r30, 0x23	; 35
 240:	f1 e0       	ldi	r31, 0x01	; 1
 242:	0c 94 01 0e 	jmp	0x1c02	; 0x1c02 <__prologue_saves__>
 246:	6c 01       	movw	r12, r24
 248:	1a 01       	movw	r2, r20
 24a:	46 2e       	mov	r4, r22
 24c:	59 01       	movw	r10, r18
 24e:	fc 01       	movw	r30, r24
 250:	10 86       	std	Z+8, r1	; 0x08
 252:	17 82       	std	Z+7, r1	; 0x07
 254:	84 81       	ldd	r24, Z+4	; 0x04
 256:	81 ff       	sbrs	r24, 1
 258:	62 c3       	rjmp	.+1732   	; 0x91e <__EEPROM_REGION_LENGTH__+0x11e>
 25a:	ce 01       	movw	r24, r28
 25c:	01 96       	adiw	r24, 0x01	; 1
 25e:	9d 87       	std	Y+13, r25	; 0x0d
 260:	8c 87       	std	Y+12, r24	; 0x0c
 262:	a0 e8       	ldi	r26, 0x80	; 128
 264:	8a 8b       	std	Y+18, r24	; 0x12
 266:	9b 8b       	std	Y+19, r25	; 0x13
 268:	ac 8b       	std	Y+20, r26	; 0x14
 26a:	f1 01       	movw	r30, r2
 26c:	84 91       	lpm	r24, Z
 26e:	47 fc       	sbrc	r4, 7
 270:	80 81       	ld	r24, Z
 272:	88 23       	and	r24, r24
 274:	09 f4       	brne	.+2      	; 0x278 <vfprintf+0x3e>
 276:	4f c3       	rjmp	.+1694   	; 0x916 <__EEPROM_REGION_LENGTH__+0x116>
 278:	44 2d       	mov	r20, r4
 27a:	91 01       	movw	r18, r2
 27c:	2f 5f       	subi	r18, 0xFF	; 255
 27e:	3f 4f       	sbci	r19, 0xFF	; 255
 280:	4f 4f       	sbci	r20, 0xFF	; 255
 282:	85 32       	cpi	r24, 0x25	; 37
 284:	19 f0       	breq	.+6      	; 0x28c <vfprintf+0x52>
 286:	19 01       	movw	r2, r18
 288:	44 2e       	mov	r4, r20
 28a:	0a c0       	rjmp	.+20     	; 0x2a0 <vfprintf+0x66>
 28c:	f9 01       	movw	r30, r18
 28e:	84 91       	lpm	r24, Z
 290:	47 fd       	sbrc	r20, 7
 292:	80 81       	ld	r24, Z
 294:	92 e0       	ldi	r25, 0x02	; 2
 296:	29 0e       	add	r2, r25
 298:	31 1c       	adc	r3, r1
 29a:	41 1c       	adc	r4, r1
 29c:	85 32       	cpi	r24, 0x25	; 37
 29e:	49 f4       	brne	.+18     	; 0x2b2 <vfprintf+0x78>
 2a0:	b6 01       	movw	r22, r12
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 2a8:	bf 86       	std	Y+15, r11	; 0x0f
 2aa:	ae 86       	std	Y+14, r10	; 0x0e
 2ac:	ae 84       	ldd	r10, Y+14	; 0x0e
 2ae:	bf 84       	ldd	r11, Y+15	; 0x0f
 2b0:	dc cf       	rjmp	.-72     	; 0x26a <vfprintf+0x30>
 2b2:	10 e0       	ldi	r17, 0x00	; 0
 2b4:	f1 2c       	mov	r15, r1
 2b6:	00 e0       	ldi	r16, 0x00	; 0
 2b8:	00 32       	cpi	r16, 0x20	; 32
 2ba:	a0 f4       	brcc	.+40     	; 0x2e4 <vfprintf+0xaa>
 2bc:	8b 32       	cpi	r24, 0x2B	; 43
 2be:	69 f0       	breq	.+26     	; 0x2da <vfprintf+0xa0>
 2c0:	30 f4       	brcc	.+12     	; 0x2ce <vfprintf+0x94>
 2c2:	80 32       	cpi	r24, 0x20	; 32
 2c4:	59 f0       	breq	.+22     	; 0x2dc <vfprintf+0xa2>
 2c6:	83 32       	cpi	r24, 0x23	; 35
 2c8:	69 f4       	brne	.+26     	; 0x2e4 <vfprintf+0xaa>
 2ca:	00 61       	ori	r16, 0x10	; 16
 2cc:	2c c0       	rjmp	.+88     	; 0x326 <vfprintf+0xec>
 2ce:	8d 32       	cpi	r24, 0x2D	; 45
 2d0:	39 f0       	breq	.+14     	; 0x2e0 <vfprintf+0xa6>
 2d2:	80 33       	cpi	r24, 0x30	; 48
 2d4:	39 f4       	brne	.+14     	; 0x2e4 <vfprintf+0xaa>
 2d6:	01 60       	ori	r16, 0x01	; 1
 2d8:	26 c0       	rjmp	.+76     	; 0x326 <vfprintf+0xec>
 2da:	02 60       	ori	r16, 0x02	; 2
 2dc:	04 60       	ori	r16, 0x04	; 4
 2de:	23 c0       	rjmp	.+70     	; 0x326 <vfprintf+0xec>
 2e0:	08 60       	ori	r16, 0x08	; 8
 2e2:	21 c0       	rjmp	.+66     	; 0x326 <vfprintf+0xec>
 2e4:	07 fd       	sbrc	r16, 7
 2e6:	29 c0       	rjmp	.+82     	; 0x33a <vfprintf+0x100>
 2e8:	90 ed       	ldi	r25, 0xD0	; 208
 2ea:	98 0f       	add	r25, r24
 2ec:	9a 30       	cpi	r25, 0x0A	; 10
 2ee:	78 f4       	brcc	.+30     	; 0x30e <vfprintf+0xd4>
 2f0:	06 ff       	sbrs	r16, 6
 2f2:	06 c0       	rjmp	.+12     	; 0x300 <vfprintf+0xc6>
 2f4:	aa e0       	ldi	r26, 0x0A	; 10
 2f6:	1a 9f       	mul	r17, r26
 2f8:	90 0d       	add	r25, r0
 2fa:	11 24       	eor	r1, r1
 2fc:	19 2f       	mov	r17, r25
 2fe:	13 c0       	rjmp	.+38     	; 0x326 <vfprintf+0xec>
 300:	ea e0       	ldi	r30, 0x0A	; 10
 302:	fe 9e       	mul	r15, r30
 304:	90 0d       	add	r25, r0
 306:	11 24       	eor	r1, r1
 308:	f9 2e       	mov	r15, r25
 30a:	00 62       	ori	r16, 0x20	; 32
 30c:	0c c0       	rjmp	.+24     	; 0x326 <vfprintf+0xec>
 30e:	8e 32       	cpi	r24, 0x2E	; 46
 310:	21 f4       	brne	.+8      	; 0x31a <vfprintf+0xe0>
 312:	06 fd       	sbrc	r16, 6
 314:	00 c3       	rjmp	.+1536   	; 0x916 <__EEPROM_REGION_LENGTH__+0x116>
 316:	00 64       	ori	r16, 0x40	; 64
 318:	06 c0       	rjmp	.+12     	; 0x326 <vfprintf+0xec>
 31a:	8c 36       	cpi	r24, 0x6C	; 108
 31c:	11 f4       	brne	.+4      	; 0x322 <vfprintf+0xe8>
 31e:	00 68       	ori	r16, 0x80	; 128
 320:	02 c0       	rjmp	.+4      	; 0x326 <vfprintf+0xec>
 322:	88 36       	cpi	r24, 0x68	; 104
 324:	51 f4       	brne	.+20     	; 0x33a <vfprintf+0x100>
 326:	f1 01       	movw	r30, r2
 328:	84 91       	lpm	r24, Z
 32a:	47 fc       	sbrc	r4, 7
 32c:	80 81       	ld	r24, Z
 32e:	ff ef       	ldi	r31, 0xFF	; 255
 330:	2f 1a       	sub	r2, r31
 332:	3f 0a       	sbc	r3, r31
 334:	4f 0a       	sbc	r4, r31
 336:	81 11       	cpse	r24, r1
 338:	bf cf       	rjmp	.-130    	; 0x2b8 <vfprintf+0x7e>
 33a:	9b eb       	ldi	r25, 0xBB	; 187
 33c:	98 0f       	add	r25, r24
 33e:	93 30       	cpi	r25, 0x03	; 3
 340:	18 f4       	brcc	.+6      	; 0x348 <vfprintf+0x10e>
 342:	00 61       	ori	r16, 0x10	; 16
 344:	80 5e       	subi	r24, 0xE0	; 224
 346:	06 c0       	rjmp	.+12     	; 0x354 <vfprintf+0x11a>
 348:	9b e9       	ldi	r25, 0x9B	; 155
 34a:	98 0f       	add	r25, r24
 34c:	93 30       	cpi	r25, 0x03	; 3
 34e:	08 f0       	brcs	.+2      	; 0x352 <vfprintf+0x118>
 350:	66 c1       	rjmp	.+716    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 352:	0f 7e       	andi	r16, 0xEF	; 239
 354:	06 ff       	sbrs	r16, 6
 356:	16 e0       	ldi	r17, 0x06	; 6
 358:	0f 73       	andi	r16, 0x3F	; 63
 35a:	70 2e       	mov	r7, r16
 35c:	85 36       	cpi	r24, 0x65	; 101
 35e:	21 f4       	brne	.+8      	; 0x368 <vfprintf+0x12e>
 360:	20 2f       	mov	r18, r16
 362:	20 64       	ori	r18, 0x40	; 64
 364:	72 2e       	mov	r7, r18
 366:	08 c0       	rjmp	.+16     	; 0x378 <vfprintf+0x13e>
 368:	86 36       	cpi	r24, 0x66	; 102
 36a:	21 f4       	brne	.+8      	; 0x374 <vfprintf+0x13a>
 36c:	80 2f       	mov	r24, r16
 36e:	80 68       	ori	r24, 0x80	; 128
 370:	78 2e       	mov	r7, r24
 372:	02 c0       	rjmp	.+4      	; 0x378 <vfprintf+0x13e>
 374:	11 11       	cpse	r17, r1
 376:	11 50       	subi	r17, 0x01	; 1
 378:	77 fe       	sbrs	r7, 7
 37a:	07 c0       	rjmp	.+14     	; 0x38a <vfprintf+0x150>
 37c:	1c 33       	cpi	r17, 0x3C	; 60
 37e:	50 f4       	brcc	.+20     	; 0x394 <vfprintf+0x15a>
 380:	ee 24       	eor	r14, r14
 382:	e3 94       	inc	r14
 384:	e1 0e       	add	r14, r17
 386:	27 e0       	ldi	r18, 0x07	; 7
 388:	0b c0       	rjmp	.+22     	; 0x3a0 <vfprintf+0x166>
 38a:	18 30       	cpi	r17, 0x08	; 8
 38c:	38 f0       	brcs	.+14     	; 0x39c <vfprintf+0x162>
 38e:	27 e0       	ldi	r18, 0x07	; 7
 390:	17 e0       	ldi	r17, 0x07	; 7
 392:	05 c0       	rjmp	.+10     	; 0x39e <vfprintf+0x164>
 394:	27 e0       	ldi	r18, 0x07	; 7
 396:	6c e3       	ldi	r22, 0x3C	; 60
 398:	e6 2e       	mov	r14, r22
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <vfprintf+0x166>
 39c:	21 2f       	mov	r18, r17
 39e:	e1 2c       	mov	r14, r1
 3a0:	f5 01       	movw	r30, r10
 3a2:	34 96       	adiw	r30, 0x04	; 4
 3a4:	ff 87       	std	Y+15, r31	; 0x0f
 3a6:	ee 87       	std	Y+14, r30	; 0x0e
 3a8:	f5 01       	movw	r30, r10
 3aa:	60 81       	ld	r22, Z
 3ac:	71 81       	ldd	r23, Z+1	; 0x01
 3ae:	82 81       	ldd	r24, Z+2	; 0x02
 3b0:	93 81       	ldd	r25, Z+3	; 0x03
 3b2:	0e 2d       	mov	r16, r14
 3b4:	ae 01       	movw	r20, r28
 3b6:	4f 5f       	subi	r20, 0xFF	; 255
 3b8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ba:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__ftoa_engine>
 3be:	5c 01       	movw	r10, r24
 3c0:	59 80       	ldd	r5, Y+1	; 0x01
 3c2:	50 fe       	sbrs	r5, 0
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <vfprintf+0x190>
 3c6:	53 fe       	sbrs	r5, 3
 3c8:	06 c0       	rjmp	.+12     	; 0x3d6 <vfprintf+0x19c>
 3ca:	71 fc       	sbrc	r7, 1
 3cc:	06 c0       	rjmp	.+12     	; 0x3da <vfprintf+0x1a0>
 3ce:	72 fe       	sbrs	r7, 2
 3d0:	06 c0       	rjmp	.+12     	; 0x3de <vfprintf+0x1a4>
 3d2:	00 e2       	ldi	r16, 0x20	; 32
 3d4:	05 c0       	rjmp	.+10     	; 0x3e0 <vfprintf+0x1a6>
 3d6:	0d e2       	ldi	r16, 0x2D	; 45
 3d8:	03 c0       	rjmp	.+6      	; 0x3e0 <vfprintf+0x1a6>
 3da:	0b e2       	ldi	r16, 0x2B	; 43
 3dc:	01 c0       	rjmp	.+2      	; 0x3e0 <vfprintf+0x1a6>
 3de:	00 e0       	ldi	r16, 0x00	; 0
 3e0:	85 2d       	mov	r24, r5
 3e2:	8c 70       	andi	r24, 0x0C	; 12
 3e4:	19 f0       	breq	.+6      	; 0x3ec <vfprintf+0x1b2>
 3e6:	01 11       	cpse	r16, r1
 3e8:	73 c2       	rjmp	.+1254   	; 0x8d0 <__EEPROM_REGION_LENGTH__+0xd0>
 3ea:	be c2       	rjmp	.+1404   	; 0x968 <__EEPROM_REGION_LENGTH__+0x168>
 3ec:	77 fe       	sbrs	r7, 7
 3ee:	0f c0       	rjmp	.+30     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f0:	ea 0c       	add	r14, r10
 3f2:	54 fe       	sbrs	r5, 4
 3f4:	04 c0       	rjmp	.+8      	; 0x3fe <vfprintf+0x1c4>
 3f6:	8a 81       	ldd	r24, Y+2	; 0x02
 3f8:	81 33       	cpi	r24, 0x31	; 49
 3fa:	09 f4       	brne	.+2      	; 0x3fe <vfprintf+0x1c4>
 3fc:	ea 94       	dec	r14
 3fe:	1e 14       	cp	r1, r14
 400:	74 f5       	brge	.+92     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 402:	28 e0       	ldi	r18, 0x08	; 8
 404:	2e 15       	cp	r18, r14
 406:	78 f5       	brcc	.+94     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 408:	38 e0       	ldi	r19, 0x08	; 8
 40a:	e3 2e       	mov	r14, r19
 40c:	2c c0       	rjmp	.+88     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 40e:	76 fc       	sbrc	r7, 6
 410:	2a c0       	rjmp	.+84     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 412:	81 2f       	mov	r24, r17
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	8a 15       	cp	r24, r10
 418:	9b 05       	cpc	r25, r11
 41a:	9c f0       	brlt	.+38     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 41c:	8c ef       	ldi	r24, 0xFC	; 252
 41e:	a8 16       	cp	r10, r24
 420:	8f ef       	ldi	r24, 0xFF	; 255
 422:	b8 06       	cpc	r11, r24
 424:	74 f0       	brlt	.+28     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 426:	97 2d       	mov	r25, r7
 428:	90 68       	ori	r25, 0x80	; 128
 42a:	79 2e       	mov	r7, r25
 42c:	0a c0       	rjmp	.+20     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 42e:	e2 e0       	ldi	r30, 0x02	; 2
 430:	f0 e0       	ldi	r31, 0x00	; 0
 432:	ec 0f       	add	r30, r28
 434:	fd 1f       	adc	r31, r29
 436:	e1 0f       	add	r30, r17
 438:	f1 1d       	adc	r31, r1
 43a:	80 81       	ld	r24, Z
 43c:	80 33       	cpi	r24, 0x30	; 48
 43e:	19 f4       	brne	.+6      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 440:	11 50       	subi	r17, 0x01	; 1
 442:	11 11       	cpse	r17, r1
 444:	f4 cf       	rjmp	.-24     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 446:	77 fe       	sbrs	r7, 7
 448:	0e c0       	rjmp	.+28     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 44a:	ee 24       	eor	r14, r14
 44c:	e3 94       	inc	r14
 44e:	e1 0e       	add	r14, r17
 450:	81 2f       	mov	r24, r17
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	a8 16       	cp	r10, r24
 456:	b9 06       	cpc	r11, r25
 458:	2c f4       	brge	.+10     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 45a:	1a 19       	sub	r17, r10
 45c:	04 c0       	rjmp	.+8      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 45e:	ee 24       	eor	r14, r14
 460:	e3 94       	inc	r14
 462:	01 c0       	rjmp	.+2      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 464:	10 e0       	ldi	r17, 0x00	; 0
 466:	77 fe       	sbrs	r7, 7
 468:	06 c0       	rjmp	.+12     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46a:	1a 14       	cp	r1, r10
 46c:	1b 04       	cpc	r1, r11
 46e:	34 f4       	brge	.+12     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 470:	c5 01       	movw	r24, r10
 472:	01 96       	adiw	r24, 0x01	; 1
 474:	05 c0       	rjmp	.+10     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 476:	85 e0       	ldi	r24, 0x05	; 5
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	02 c0       	rjmp	.+4      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	01 11       	cpse	r16, r1
 482:	01 96       	adiw	r24, 0x01	; 1
 484:	11 23       	and	r17, r17
 486:	31 f0       	breq	.+12     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 488:	21 2f       	mov	r18, r17
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	2f 5f       	subi	r18, 0xFF	; 255
 48e:	3f 4f       	sbci	r19, 0xFF	; 255
 490:	82 0f       	add	r24, r18
 492:	93 1f       	adc	r25, r19
 494:	2f 2d       	mov	r18, r15
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	82 17       	cp	r24, r18
 49a:	93 07       	cpc	r25, r19
 49c:	14 f4       	brge	.+4      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 49e:	f8 1a       	sub	r15, r24
 4a0:	01 c0       	rjmp	.+2      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4a2:	f1 2c       	mov	r15, r1
 4a4:	87 2d       	mov	r24, r7
 4a6:	89 70       	andi	r24, 0x09	; 9
 4a8:	49 f4       	brne	.+18     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4aa:	ff 20       	and	r15, r15
 4ac:	39 f0       	breq	.+14     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4ae:	b6 01       	movw	r22, r12
 4b0:	80 e2       	ldi	r24, 0x20	; 32
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 4b8:	fa 94       	dec	r15
 4ba:	f7 cf       	rjmp	.-18     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4bc:	00 23       	and	r16, r16
 4be:	29 f0       	breq	.+10     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c0:	b6 01       	movw	r22, r12
 4c2:	80 2f       	mov	r24, r16
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 4ca:	73 fc       	sbrc	r7, 3
 4cc:	09 c0       	rjmp	.+18     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4ce:	ff 20       	and	r15, r15
 4d0:	39 f0       	breq	.+14     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d2:	b6 01       	movw	r22, r12
 4d4:	80 e3       	ldi	r24, 0x30	; 48
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 4dc:	fa 94       	dec	r15
 4de:	f7 cf       	rjmp	.-18     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4e0:	77 fe       	sbrs	r7, 7
 4e2:	49 c0       	rjmp	.+146    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 4e4:	35 01       	movw	r6, r10
 4e6:	b7 fe       	sbrs	r11, 7
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ea:	61 2c       	mov	r6, r1
 4ec:	71 2c       	mov	r7, r1
 4ee:	c5 01       	movw	r24, r10
 4f0:	86 19       	sub	r24, r6
 4f2:	97 09       	sbc	r25, r7
 4f4:	88 24       	eor	r8, r8
 4f6:	83 94       	inc	r8
 4f8:	91 2c       	mov	r9, r1
 4fa:	8c 0e       	add	r8, r28
 4fc:	9d 1e       	adc	r9, r29
 4fe:	88 0e       	add	r8, r24
 500:	99 1e       	adc	r9, r25
 502:	f5 01       	movw	r30, r10
 504:	ee 19       	sub	r30, r14
 506:	f1 09       	sbc	r31, r1
 508:	f9 8b       	std	Y+17, r31	; 0x11
 50a:	e8 8b       	std	Y+16, r30	; 0x10
 50c:	01 2f       	mov	r16, r17
 50e:	10 e0       	ldi	r17, 0x00	; 0
 510:	11 95       	neg	r17
 512:	01 95       	neg	r16
 514:	11 09       	sbc	r17, r1
 516:	ff ef       	ldi	r31, 0xFF	; 255
 518:	6f 16       	cp	r6, r31
 51a:	7f 06       	cpc	r7, r31
 51c:	29 f4       	brne	.+10     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 51e:	b6 01       	movw	r22, r12
 520:	8e e2       	ldi	r24, 0x2E	; 46
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 528:	a6 14       	cp	r10, r6
 52a:	b7 04       	cpc	r11, r7
 52c:	44 f0       	brlt	.+16     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 52e:	88 89       	ldd	r24, Y+16	; 0x10
 530:	99 89       	ldd	r25, Y+17	; 0x11
 532:	86 15       	cp	r24, r6
 534:	97 05       	cpc	r25, r7
 536:	1c f4       	brge	.+6      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 538:	f4 01       	movw	r30, r8
 53a:	81 81       	ldd	r24, Z+1	; 0x01
 53c:	01 c0       	rjmp	.+2      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53e:	80 e3       	ldi	r24, 0x30	; 48
 540:	f1 e0       	ldi	r31, 0x01	; 1
 542:	6f 1a       	sub	r6, r31
 544:	71 08       	sbc	r7, r1
 546:	2f ef       	ldi	r18, 0xFF	; 255
 548:	82 1a       	sub	r8, r18
 54a:	92 0a       	sbc	r9, r18
 54c:	60 16       	cp	r6, r16
 54e:	71 06       	cpc	r7, r17
 550:	2c f0       	brlt	.+10     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 552:	b6 01       	movw	r22, r12
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 55a:	dd cf       	rjmp	.-70     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 55c:	a6 14       	cp	r10, r6
 55e:	b7 04       	cpc	r11, r7
 560:	39 f4       	brne	.+14     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 562:	9a 81       	ldd	r25, Y+2	; 0x02
 564:	96 33       	cpi	r25, 0x36	; 54
 566:	18 f4       	brcc	.+6      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 568:	95 33       	cpi	r25, 0x35	; 53
 56a:	11 f4       	brne	.+4      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56c:	54 fe       	sbrs	r5, 4
 56e:	81 e3       	ldi	r24, 0x31	; 49
 570:	b6 01       	movw	r22, r12
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	51 c0       	rjmp	.+162    	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 576:	8a 81       	ldd	r24, Y+2	; 0x02
 578:	81 33       	cpi	r24, 0x31	; 49
 57a:	19 f0       	breq	.+6      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 57c:	95 2d       	mov	r25, r5
 57e:	9f 7e       	andi	r25, 0xEF	; 239
 580:	59 2e       	mov	r5, r25
 582:	b6 01       	movw	r22, r12
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 58a:	11 11       	cpse	r17, r1
 58c:	05 c0       	rjmp	.+10     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 58e:	74 fc       	sbrc	r7, 4
 590:	1c c0       	rjmp	.+56     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 592:	85 e6       	ldi	r24, 0x65	; 101
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	1b c0       	rjmp	.+54     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 598:	b6 01       	movw	r22, r12
 59a:	8e e2       	ldi	r24, 0x2E	; 46
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 5a2:	02 e0       	ldi	r16, 0x02	; 2
 5a4:	01 0f       	add	r16, r17
 5a6:	82 e0       	ldi	r24, 0x02	; 2
 5a8:	11 e0       	ldi	r17, 0x01	; 1
 5aa:	18 0f       	add	r17, r24
 5ac:	e1 e0       	ldi	r30, 0x01	; 1
 5ae:	f0 e0       	ldi	r31, 0x00	; 0
 5b0:	ec 0f       	add	r30, r28
 5b2:	fd 1f       	adc	r31, r29
 5b4:	e8 0f       	add	r30, r24
 5b6:	f1 1d       	adc	r31, r1
 5b8:	80 81       	ld	r24, Z
 5ba:	b6 01       	movw	r22, r12
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 5c2:	81 2f       	mov	r24, r17
 5c4:	10 13       	cpse	r17, r16
 5c6:	f0 cf       	rjmp	.-32     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5c8:	e2 cf       	rjmp	.-60     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 5ca:	85 e4       	ldi	r24, 0x45	; 69
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	b6 01       	movw	r22, r12
 5d0:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 5d4:	b7 fc       	sbrc	r11, 7
 5d6:	05 c0       	rjmp	.+10     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5d8:	a1 14       	cp	r10, r1
 5da:	b1 04       	cpc	r11, r1
 5dc:	39 f4       	brne	.+14     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5de:	54 fe       	sbrs	r5, 4
 5e0:	05 c0       	rjmp	.+10     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e2:	b1 94       	neg	r11
 5e4:	a1 94       	neg	r10
 5e6:	b1 08       	sbc	r11, r1
 5e8:	8d e2       	ldi	r24, 0x2D	; 45
 5ea:	01 c0       	rjmp	.+2      	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5ec:	8b e2       	ldi	r24, 0x2B	; 43
 5ee:	b6 01       	movw	r22, r12
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 5f6:	80 e3       	ldi	r24, 0x30	; 48
 5f8:	ea e0       	ldi	r30, 0x0A	; 10
 5fa:	ae 16       	cp	r10, r30
 5fc:	b1 04       	cpc	r11, r1
 5fe:	2c f0       	brlt	.+10     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 600:	8f 5f       	subi	r24, 0xFF	; 255
 602:	aa e0       	ldi	r26, 0x0A	; 10
 604:	aa 1a       	sub	r10, r26
 606:	b1 08       	sbc	r11, r1
 608:	f7 cf       	rjmp	.-18     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 60a:	b6 01       	movw	r22, r12
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 612:	b6 01       	movw	r22, r12
 614:	c5 01       	movw	r24, r10
 616:	c0 96       	adiw	r24, 0x30	; 48
 618:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 61c:	72 c1       	rjmp	.+740    	; 0x902 <__EEPROM_REGION_LENGTH__+0x102>
 61e:	83 36       	cpi	r24, 0x63	; 99
 620:	31 f0       	breq	.+12     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 622:	83 37       	cpi	r24, 0x73	; 115
 624:	91 f0       	breq	.+36     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 626:	83 35       	cpi	r24, 0x53	; 83
 628:	09 f0       	breq	.+2      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 62a:	5d c0       	rjmp	.+186    	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 62c:	24 c0       	rjmp	.+72     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 62e:	c5 01       	movw	r24, r10
 630:	02 96       	adiw	r24, 0x02	; 2
 632:	9f 87       	std	Y+15, r25	; 0x0f
 634:	8e 87       	std	Y+14, r24	; 0x0e
 636:	f5 01       	movw	r30, r10
 638:	80 81       	ld	r24, Z
 63a:	89 83       	std	Y+1, r24	; 0x01
 63c:	6a 88       	ldd	r6, Y+18	; 0x12
 63e:	7b 88       	ldd	r7, Y+19	; 0x13
 640:	8c 88       	ldd	r8, Y+20	; 0x14
 642:	aa 24       	eor	r10, r10
 644:	a3 94       	inc	r10
 646:	b1 2c       	mov	r11, r1
 648:	14 c0       	rjmp	.+40     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 64a:	c5 01       	movw	r24, r10
 64c:	03 96       	adiw	r24, 0x03	; 3
 64e:	9f 87       	std	Y+15, r25	; 0x0f
 650:	8e 87       	std	Y+14, r24	; 0x0e
 652:	f5 01       	movw	r30, r10
 654:	60 80       	ld	r6, Z
 656:	71 80       	ldd	r7, Z+1	; 0x01
 658:	82 80       	ldd	r8, Z+2	; 0x02
 65a:	06 ff       	sbrs	r16, 6
 65c:	03 c0       	rjmp	.+6      	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 65e:	41 2f       	mov	r20, r17
 660:	50 e0       	ldi	r21, 0x00	; 0
 662:	02 c0       	rjmp	.+4      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 664:	4f ef       	ldi	r20, 0xFF	; 255
 666:	5f ef       	ldi	r21, 0xFF	; 255
 668:	88 2d       	mov	r24, r8
 66a:	b3 01       	movw	r22, r6
 66c:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <strnlen>
 670:	5c 01       	movw	r10, r24
 672:	0f 77       	andi	r16, 0x7F	; 127
 674:	15 c0       	rjmp	.+42     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 676:	c5 01       	movw	r24, r10
 678:	03 96       	adiw	r24, 0x03	; 3
 67a:	9f 87       	std	Y+15, r25	; 0x0f
 67c:	8e 87       	std	Y+14, r24	; 0x0e
 67e:	f5 01       	movw	r30, r10
 680:	60 80       	ld	r6, Z
 682:	71 80       	ldd	r7, Z+1	; 0x01
 684:	82 80       	ldd	r8, Z+2	; 0x02
 686:	06 ff       	sbrs	r16, 6
 688:	03 c0       	rjmp	.+6      	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 68a:	41 2f       	mov	r20, r17
 68c:	50 e0       	ldi	r21, 0x00	; 0
 68e:	02 c0       	rjmp	.+4      	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 690:	4f ef       	ldi	r20, 0xFF	; 255
 692:	5f ef       	ldi	r21, 0xFF	; 255
 694:	88 2d       	mov	r24, r8
 696:	b3 01       	movw	r22, r6
 698:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <strnlen>
 69c:	5c 01       	movw	r10, r24
 69e:	00 68       	ori	r16, 0x80	; 128
 6a0:	03 fd       	sbrc	r16, 3
 6a2:	1d c0       	rjmp	.+58     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6a4:	8f 2d       	mov	r24, r15
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	a8 16       	cp	r10, r24
 6aa:	b9 06       	cpc	r11, r25
 6ac:	c0 f4       	brcc	.+48     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6ae:	b6 01       	movw	r22, r12
 6b0:	80 e2       	ldi	r24, 0x20	; 32
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 6b8:	fa 94       	dec	r15
 6ba:	f4 cf       	rjmp	.-24     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 6bc:	f3 01       	movw	r30, r6
 6be:	84 91       	lpm	r24, Z
 6c0:	87 fc       	sbrc	r8, 7
 6c2:	80 81       	ld	r24, Z
 6c4:	ff ef       	ldi	r31, 0xFF	; 255
 6c6:	6f 1a       	sub	r6, r31
 6c8:	7f 0a       	sbc	r7, r31
 6ca:	8f 0a       	sbc	r8, r31
 6cc:	b6 01       	movw	r22, r12
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 6d4:	f1 10       	cpse	r15, r1
 6d6:	fa 94       	dec	r15
 6d8:	21 e0       	ldi	r18, 0x01	; 1
 6da:	a2 1a       	sub	r10, r18
 6dc:	b1 08       	sbc	r11, r1
 6de:	a1 14       	cp	r10, r1
 6e0:	b1 04       	cpc	r11, r1
 6e2:	61 f7       	brne	.-40     	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 6e4:	0e c1       	rjmp	.+540    	; 0x902 <__EEPROM_REGION_LENGTH__+0x102>
 6e6:	84 36       	cpi	r24, 0x64	; 100
 6e8:	11 f0       	breq	.+4      	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6ea:	89 36       	cpi	r24, 0x69	; 105
 6ec:	79 f5       	brne	.+94     	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 6ee:	c5 01       	movw	r24, r10
 6f0:	07 ff       	sbrs	r16, 7
 6f2:	09 c0       	rjmp	.+18     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 6f4:	04 96       	adiw	r24, 0x04	; 4
 6f6:	9f 87       	std	Y+15, r25	; 0x0f
 6f8:	8e 87       	std	Y+14, r24	; 0x0e
 6fa:	f5 01       	movw	r30, r10
 6fc:	60 81       	ld	r22, Z
 6fe:	71 81       	ldd	r23, Z+1	; 0x01
 700:	82 81       	ldd	r24, Z+2	; 0x02
 702:	93 81       	ldd	r25, Z+3	; 0x03
 704:	0a c0       	rjmp	.+20     	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 706:	02 96       	adiw	r24, 0x02	; 2
 708:	9f 87       	std	Y+15, r25	; 0x0f
 70a:	8e 87       	std	Y+14, r24	; 0x0e
 70c:	f5 01       	movw	r30, r10
 70e:	60 81       	ld	r22, Z
 710:	71 81       	ldd	r23, Z+1	; 0x01
 712:	07 2e       	mov	r0, r23
 714:	00 0c       	add	r0, r0
 716:	88 0b       	sbc	r24, r24
 718:	99 0b       	sbc	r25, r25
 71a:	0f 76       	andi	r16, 0x6F	; 111
 71c:	e0 2e       	mov	r14, r16
 71e:	97 ff       	sbrs	r25, 7
 720:	0a c0       	rjmp	.+20     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 722:	90 95       	com	r25
 724:	80 95       	com	r24
 726:	70 95       	com	r23
 728:	61 95       	neg	r22
 72a:	7f 4f       	sbci	r23, 0xFF	; 255
 72c:	8f 4f       	sbci	r24, 0xFF	; 255
 72e:	9f 4f       	sbci	r25, 0xFF	; 255
 730:	f0 2f       	mov	r31, r16
 732:	f0 68       	ori	r31, 0x80	; 128
 734:	ef 2e       	mov	r14, r31
 736:	2a e0       	ldi	r18, 0x0A	; 10
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	ae 01       	movw	r20, r28
 73c:	4f 5f       	subi	r20, 0xFF	; 255
 73e:	5f 4f       	sbci	r21, 0xFF	; 255
 740:	0e 94 0f 09 	call	0x121e	; 0x121e <__ultoa_invert>
 744:	a8 2e       	mov	r10, r24
 746:	2c 85       	ldd	r18, Y+12	; 0x0c
 748:	a2 1a       	sub	r10, r18
 74a:	4b c0       	rjmp	.+150    	; 0x7e2 <__LOCK_REGION_LENGTH__+0x3e2>
 74c:	85 37       	cpi	r24, 0x75	; 117
 74e:	29 f4       	brne	.+10     	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 750:	0f 7e       	andi	r16, 0xEF	; 239
 752:	e0 2e       	mov	r14, r16
 754:	2a e0       	ldi	r18, 0x0A	; 10
 756:	30 e0       	ldi	r19, 0x00	; 0
 758:	25 c0       	rjmp	.+74     	; 0x7a4 <__LOCK_REGION_LENGTH__+0x3a4>
 75a:	90 2f       	mov	r25, r16
 75c:	99 7f       	andi	r25, 0xF9	; 249
 75e:	e9 2e       	mov	r14, r25
 760:	8f 36       	cpi	r24, 0x6F	; 111
 762:	c1 f0       	breq	.+48     	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 764:	18 f4       	brcc	.+6      	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 766:	88 35       	cpi	r24, 0x58	; 88
 768:	79 f0       	breq	.+30     	; 0x788 <__LOCK_REGION_LENGTH__+0x388>
 76a:	d5 c0       	rjmp	.+426    	; 0x916 <__EEPROM_REGION_LENGTH__+0x116>
 76c:	80 37       	cpi	r24, 0x70	; 112
 76e:	19 f0       	breq	.+6      	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
 770:	88 37       	cpi	r24, 0x78	; 120
 772:	21 f0       	breq	.+8      	; 0x77c <__LOCK_REGION_LENGTH__+0x37c>
 774:	d0 c0       	rjmp	.+416    	; 0x916 <__EEPROM_REGION_LENGTH__+0x116>
 776:	a9 2f       	mov	r26, r25
 778:	a0 61       	ori	r26, 0x10	; 16
 77a:	ea 2e       	mov	r14, r26
 77c:	e4 fe       	sbrs	r14, 4
 77e:	0d c0       	rjmp	.+26     	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
 780:	ee 2d       	mov	r30, r14
 782:	e4 60       	ori	r30, 0x04	; 4
 784:	ee 2e       	mov	r14, r30
 786:	09 c0       	rjmp	.+18     	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
 788:	04 ff       	sbrs	r16, 4
 78a:	0a c0       	rjmp	.+20     	; 0x7a0 <__LOCK_REGION_LENGTH__+0x3a0>
 78c:	f9 2f       	mov	r31, r25
 78e:	f6 60       	ori	r31, 0x06	; 6
 790:	ef 2e       	mov	r14, r31
 792:	06 c0       	rjmp	.+12     	; 0x7a0 <__LOCK_REGION_LENGTH__+0x3a0>
 794:	28 e0       	ldi	r18, 0x08	; 8
 796:	30 e0       	ldi	r19, 0x00	; 0
 798:	05 c0       	rjmp	.+10     	; 0x7a4 <__LOCK_REGION_LENGTH__+0x3a4>
 79a:	20 e1       	ldi	r18, 0x10	; 16
 79c:	30 e0       	ldi	r19, 0x00	; 0
 79e:	02 c0       	rjmp	.+4      	; 0x7a4 <__LOCK_REGION_LENGTH__+0x3a4>
 7a0:	20 e1       	ldi	r18, 0x10	; 16
 7a2:	32 e0       	ldi	r19, 0x02	; 2
 7a4:	c5 01       	movw	r24, r10
 7a6:	e7 fe       	sbrs	r14, 7
 7a8:	09 c0       	rjmp	.+18     	; 0x7bc <__LOCK_REGION_LENGTH__+0x3bc>
 7aa:	04 96       	adiw	r24, 0x04	; 4
 7ac:	9f 87       	std	Y+15, r25	; 0x0f
 7ae:	8e 87       	std	Y+14, r24	; 0x0e
 7b0:	f5 01       	movw	r30, r10
 7b2:	60 81       	ld	r22, Z
 7b4:	71 81       	ldd	r23, Z+1	; 0x01
 7b6:	82 81       	ldd	r24, Z+2	; 0x02
 7b8:	93 81       	ldd	r25, Z+3	; 0x03
 7ba:	08 c0       	rjmp	.+16     	; 0x7cc <__LOCK_REGION_LENGTH__+0x3cc>
 7bc:	02 96       	adiw	r24, 0x02	; 2
 7be:	9f 87       	std	Y+15, r25	; 0x0f
 7c0:	8e 87       	std	Y+14, r24	; 0x0e
 7c2:	f5 01       	movw	r30, r10
 7c4:	60 81       	ld	r22, Z
 7c6:	71 81       	ldd	r23, Z+1	; 0x01
 7c8:	80 e0       	ldi	r24, 0x00	; 0
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	ae 01       	movw	r20, r28
 7ce:	4f 5f       	subi	r20, 0xFF	; 255
 7d0:	5f 4f       	sbci	r21, 0xFF	; 255
 7d2:	0e 94 0f 09 	call	0x121e	; 0x121e <__ultoa_invert>
 7d6:	a8 2e       	mov	r10, r24
 7d8:	fc 85       	ldd	r31, Y+12	; 0x0c
 7da:	af 1a       	sub	r10, r31
 7dc:	2e 2d       	mov	r18, r14
 7de:	2f 77       	andi	r18, 0x7F	; 127
 7e0:	e2 2e       	mov	r14, r18
 7e2:	e6 fe       	sbrs	r14, 6
 7e4:	0b c0       	rjmp	.+22     	; 0x7fc <__LOCK_REGION_LENGTH__+0x3fc>
 7e6:	0e 2d       	mov	r16, r14
 7e8:	0e 7f       	andi	r16, 0xFE	; 254
 7ea:	a1 16       	cp	r10, r17
 7ec:	50 f4       	brcc	.+20     	; 0x802 <__EEPROM_REGION_LENGTH__+0x2>
 7ee:	e4 fe       	sbrs	r14, 4
 7f0:	0a c0       	rjmp	.+20     	; 0x806 <__EEPROM_REGION_LENGTH__+0x6>
 7f2:	e2 fc       	sbrc	r14, 2
 7f4:	08 c0       	rjmp	.+16     	; 0x806 <__EEPROM_REGION_LENGTH__+0x6>
 7f6:	0e 2d       	mov	r16, r14
 7f8:	0e 7e       	andi	r16, 0xEE	; 238
 7fa:	05 c0       	rjmp	.+10     	; 0x806 <__EEPROM_REGION_LENGTH__+0x6>
 7fc:	ba 2c       	mov	r11, r10
 7fe:	0e 2d       	mov	r16, r14
 800:	03 c0       	rjmp	.+6      	; 0x808 <__EEPROM_REGION_LENGTH__+0x8>
 802:	ba 2c       	mov	r11, r10
 804:	01 c0       	rjmp	.+2      	; 0x808 <__EEPROM_REGION_LENGTH__+0x8>
 806:	b1 2e       	mov	r11, r17
 808:	04 ff       	sbrs	r16, 4
 80a:	0d c0       	rjmp	.+26     	; 0x826 <__EEPROM_REGION_LENGTH__+0x26>
 80c:	fe 01       	movw	r30, r28
 80e:	ea 0d       	add	r30, r10
 810:	f1 1d       	adc	r31, r1
 812:	80 81       	ld	r24, Z
 814:	80 33       	cpi	r24, 0x30	; 48
 816:	11 f4       	brne	.+4      	; 0x81c <__EEPROM_REGION_LENGTH__+0x1c>
 818:	09 7e       	andi	r16, 0xE9	; 233
 81a:	09 c0       	rjmp	.+18     	; 0x82e <__EEPROM_REGION_LENGTH__+0x2e>
 81c:	02 ff       	sbrs	r16, 2
 81e:	06 c0       	rjmp	.+12     	; 0x82c <__EEPROM_REGION_LENGTH__+0x2c>
 820:	b3 94       	inc	r11
 822:	b3 94       	inc	r11
 824:	04 c0       	rjmp	.+8      	; 0x82e <__EEPROM_REGION_LENGTH__+0x2e>
 826:	80 2f       	mov	r24, r16
 828:	86 78       	andi	r24, 0x86	; 134
 82a:	09 f0       	breq	.+2      	; 0x82e <__EEPROM_REGION_LENGTH__+0x2e>
 82c:	b3 94       	inc	r11
 82e:	03 fd       	sbrc	r16, 3
 830:	11 c0       	rjmp	.+34     	; 0x854 <__EEPROM_REGION_LENGTH__+0x54>
 832:	00 ff       	sbrs	r16, 0
 834:	06 c0       	rjmp	.+12     	; 0x842 <__EEPROM_REGION_LENGTH__+0x42>
 836:	bf 14       	cp	r11, r15
 838:	88 f4       	brcc	.+34     	; 0x85c <__EEPROM_REGION_LENGTH__+0x5c>
 83a:	fa 0c       	add	r15, r10
 83c:	1f 2d       	mov	r17, r15
 83e:	1b 19       	sub	r17, r11
 840:	0e c0       	rjmp	.+28     	; 0x85e <__EEPROM_REGION_LENGTH__+0x5e>
 842:	bf 14       	cp	r11, r15
 844:	60 f4       	brcc	.+24     	; 0x85e <__EEPROM_REGION_LENGTH__+0x5e>
 846:	b6 01       	movw	r22, r12
 848:	80 e2       	ldi	r24, 0x20	; 32
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 850:	b3 94       	inc	r11
 852:	f7 cf       	rjmp	.-18     	; 0x842 <__EEPROM_REGION_LENGTH__+0x42>
 854:	bf 14       	cp	r11, r15
 856:	18 f4       	brcc	.+6      	; 0x85e <__EEPROM_REGION_LENGTH__+0x5e>
 858:	fb 18       	sub	r15, r11
 85a:	02 c0       	rjmp	.+4      	; 0x860 <__EEPROM_REGION_LENGTH__+0x60>
 85c:	1a 2d       	mov	r17, r10
 85e:	f1 2c       	mov	r15, r1
 860:	04 ff       	sbrs	r16, 4
 862:	10 c0       	rjmp	.+32     	; 0x884 <__EEPROM_REGION_LENGTH__+0x84>
 864:	b6 01       	movw	r22, r12
 866:	80 e3       	ldi	r24, 0x30	; 48
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 86e:	02 ff       	sbrs	r16, 2
 870:	17 c0       	rjmp	.+46     	; 0x8a0 <__EEPROM_REGION_LENGTH__+0xa0>
 872:	01 fd       	sbrc	r16, 1
 874:	03 c0       	rjmp	.+6      	; 0x87c <__EEPROM_REGION_LENGTH__+0x7c>
 876:	88 e7       	ldi	r24, 0x78	; 120
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	02 c0       	rjmp	.+4      	; 0x880 <__EEPROM_REGION_LENGTH__+0x80>
 87c:	88 e5       	ldi	r24, 0x58	; 88
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	b6 01       	movw	r22, r12
 882:	0c c0       	rjmp	.+24     	; 0x89c <__EEPROM_REGION_LENGTH__+0x9c>
 884:	80 2f       	mov	r24, r16
 886:	86 78       	andi	r24, 0x86	; 134
 888:	59 f0       	breq	.+22     	; 0x8a0 <__EEPROM_REGION_LENGTH__+0xa0>
 88a:	01 ff       	sbrs	r16, 1
 88c:	02 c0       	rjmp	.+4      	; 0x892 <__EEPROM_REGION_LENGTH__+0x92>
 88e:	8b e2       	ldi	r24, 0x2B	; 43
 890:	01 c0       	rjmp	.+2      	; 0x894 <__EEPROM_REGION_LENGTH__+0x94>
 892:	80 e2       	ldi	r24, 0x20	; 32
 894:	07 fd       	sbrc	r16, 7
 896:	8d e2       	ldi	r24, 0x2D	; 45
 898:	b6 01       	movw	r22, r12
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 8a0:	a1 16       	cp	r10, r17
 8a2:	38 f4       	brcc	.+14     	; 0x8b2 <__EEPROM_REGION_LENGTH__+0xb2>
 8a4:	b6 01       	movw	r22, r12
 8a6:	80 e3       	ldi	r24, 0x30	; 48
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 8ae:	11 50       	subi	r17, 0x01	; 1
 8b0:	f7 cf       	rjmp	.-18     	; 0x8a0 <__EEPROM_REGION_LENGTH__+0xa0>
 8b2:	aa 94       	dec	r10
 8b4:	e1 e0       	ldi	r30, 0x01	; 1
 8b6:	f0 e0       	ldi	r31, 0x00	; 0
 8b8:	ec 0f       	add	r30, r28
 8ba:	fd 1f       	adc	r31, r29
 8bc:	ea 0d       	add	r30, r10
 8be:	f1 1d       	adc	r31, r1
 8c0:	80 81       	ld	r24, Z
 8c2:	b6 01       	movw	r22, r12
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 8ca:	a1 10       	cpse	r10, r1
 8cc:	f2 cf       	rjmp	.-28     	; 0x8b2 <__EEPROM_REGION_LENGTH__+0xb2>
 8ce:	19 c0       	rjmp	.+50     	; 0x902 <__EEPROM_REGION_LENGTH__+0x102>
 8d0:	f4 e0       	ldi	r31, 0x04	; 4
 8d2:	ff 15       	cp	r31, r15
 8d4:	80 f5       	brcc	.+96     	; 0x936 <__EEPROM_REGION_LENGTH__+0x136>
 8d6:	84 e0       	ldi	r24, 0x04	; 4
 8d8:	f8 1a       	sub	r15, r24
 8da:	73 fe       	sbrs	r7, 3
 8dc:	23 c0       	rjmp	.+70     	; 0x924 <__EEPROM_REGION_LENGTH__+0x124>
 8de:	01 11       	cpse	r16, r1
 8e0:	2b c0       	rjmp	.+86     	; 0x938 <__EEPROM_REGION_LENGTH__+0x138>
 8e2:	53 fe       	sbrs	r5, 3
 8e4:	2f c0       	rjmp	.+94     	; 0x944 <__EEPROM_REGION_LENGTH__+0x144>
 8e6:	55 e3       	ldi	r21, 0x35	; 53
 8e8:	85 2e       	mov	r8, r21
 8ea:	52 e0       	ldi	r21, 0x02	; 2
 8ec:	95 2e       	mov	r9, r21
 8ee:	50 e0       	ldi	r21, 0x00	; 0
 8f0:	a5 2e       	mov	r10, r21
 8f2:	07 2d       	mov	r16, r7
 8f4:	00 71       	andi	r16, 0x10	; 16
 8f6:	f4 01       	movw	r30, r8
 8f8:	84 91       	lpm	r24, Z
 8fa:	a7 fc       	sbrc	r10, 7
 8fc:	80 81       	ld	r24, Z
 8fe:	81 11       	cpse	r24, r1
 900:	28 c0       	rjmp	.+80     	; 0x952 <__EEPROM_REGION_LENGTH__+0x152>
 902:	ff 20       	and	r15, r15
 904:	09 f4       	brne	.+2      	; 0x908 <__EEPROM_REGION_LENGTH__+0x108>
 906:	d2 cc       	rjmp	.-1628   	; 0x2ac <vfprintf+0x72>
 908:	b6 01       	movw	r22, r12
 90a:	80 e2       	ldi	r24, 0x20	; 32
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 912:	fa 94       	dec	r15
 914:	f6 cf       	rjmp	.-20     	; 0x902 <__EEPROM_REGION_LENGTH__+0x102>
 916:	f6 01       	movw	r30, r12
 918:	87 81       	ldd	r24, Z+7	; 0x07
 91a:	90 85       	ldd	r25, Z+8	; 0x08
 91c:	2c c0       	rjmp	.+88     	; 0x976 <__EEPROM_REGION_LENGTH__+0x176>
 91e:	8f ef       	ldi	r24, 0xFF	; 255
 920:	9f ef       	ldi	r25, 0xFF	; 255
 922:	29 c0       	rjmp	.+82     	; 0x976 <__EEPROM_REGION_LENGTH__+0x176>
 924:	b6 01       	movw	r22, r12
 926:	80 e2       	ldi	r24, 0x20	; 32
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 92e:	fa 94       	dec	r15
 930:	f1 10       	cpse	r15, r1
 932:	f8 cf       	rjmp	.-16     	; 0x924 <__EEPROM_REGION_LENGTH__+0x124>
 934:	d4 cf       	rjmp	.-88     	; 0x8de <__EEPROM_REGION_LENGTH__+0xde>
 936:	f1 2c       	mov	r15, r1
 938:	b6 01       	movw	r22, r12
 93a:	80 2f       	mov	r24, r16
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 942:	cf cf       	rjmp	.-98     	; 0x8e2 <__EEPROM_REGION_LENGTH__+0xe2>
 944:	41 e3       	ldi	r20, 0x31	; 49
 946:	84 2e       	mov	r8, r20
 948:	42 e0       	ldi	r20, 0x02	; 2
 94a:	94 2e       	mov	r9, r20
 94c:	40 e0       	ldi	r20, 0x00	; 0
 94e:	a4 2e       	mov	r10, r20
 950:	d0 cf       	rjmp	.-96     	; 0x8f2 <__EEPROM_REGION_LENGTH__+0xf2>
 952:	01 11       	cpse	r16, r1
 954:	80 52       	subi	r24, 0x20	; 32
 956:	b6 01       	movw	r22, r12
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	0e 94 36 0b 	call	0x166c	; 0x166c <fputc>
 95e:	ff ef       	ldi	r31, 0xFF	; 255
 960:	8f 1a       	sub	r8, r31
 962:	9f 0a       	sbc	r9, r31
 964:	af 0a       	sbc	r10, r31
 966:	c7 cf       	rjmp	.-114    	; 0x8f6 <__EEPROM_REGION_LENGTH__+0xf6>
 968:	23 e0       	ldi	r18, 0x03	; 3
 96a:	2f 15       	cp	r18, r15
 96c:	10 f4       	brcc	.+4      	; 0x972 <__EEPROM_REGION_LENGTH__+0x172>
 96e:	83 e0       	ldi	r24, 0x03	; 3
 970:	b3 cf       	rjmp	.-154    	; 0x8d8 <__EEPROM_REGION_LENGTH__+0xd8>
 972:	f1 2c       	mov	r15, r1
 974:	b6 cf       	rjmp	.-148    	; 0x8e2 <__EEPROM_REGION_LENGTH__+0xe2>
 976:	64 96       	adiw	r28, 0x14	; 20
 978:	e2 e1       	ldi	r30, 0x12	; 18
 97a:	0c 94 1d 0e 	jmp	0x1c3a	; 0x1c3a <__epilogue_restores__>

Disassembly of section .text.libgcc:

00001ee0 <__tablejump2__>:
    1ee0:	ee 0f       	add	r30, r30
    1ee2:	ff 1f       	adc	r31, r31
    1ee4:	05 90       	lpm	r0, Z+
    1ee6:	f4 91       	lpm	r31, Z
    1ee8:	e0 2d       	mov	r30, r0
    1eea:	09 94       	ijmp

Disassembly of section .text.libgcc.mul:

00001dca <__umulhisi3>:
    1dca:	a2 9f       	mul	r26, r18
    1dcc:	b0 01       	movw	r22, r0
    1dce:	b3 9f       	mul	r27, r19
    1dd0:	c0 01       	movw	r24, r0
    1dd2:	a3 9f       	mul	r26, r19
    1dd4:	70 0d       	add	r23, r0
    1dd6:	81 1d       	adc	r24, r1
    1dd8:	11 24       	eor	r1, r1
    1dda:	91 1d       	adc	r25, r1
    1ddc:	b2 9f       	mul	r27, r18
    1dde:	70 0d       	add	r23, r0
    1de0:	81 1d       	adc	r24, r1
    1de2:	11 24       	eor	r1, r1
    1de4:	91 1d       	adc	r25, r1
    1de6:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00001c02 <__prologue_saves__>:
    1c02:	2f 92       	push	r2
    1c04:	3f 92       	push	r3
    1c06:	4f 92       	push	r4
    1c08:	5f 92       	push	r5
    1c0a:	6f 92       	push	r6
    1c0c:	7f 92       	push	r7
    1c0e:	8f 92       	push	r8
    1c10:	9f 92       	push	r9
    1c12:	af 92       	push	r10
    1c14:	bf 92       	push	r11
    1c16:	cf 92       	push	r12
    1c18:	df 92       	push	r13
    1c1a:	ef 92       	push	r14
    1c1c:	ff 92       	push	r15
    1c1e:	0f 93       	push	r16
    1c20:	1f 93       	push	r17
    1c22:	cf 93       	push	r28
    1c24:	df 93       	push	r29
    1c26:	cd b7       	in	r28, 0x3d	; 61
    1c28:	de b7       	in	r29, 0x3e	; 62
    1c2a:	ca 1b       	sub	r28, r26
    1c2c:	db 0b       	sbc	r29, r27
    1c2e:	0f b6       	in	r0, 0x3f	; 63
    1c30:	f8 94       	cli
    1c32:	de bf       	out	0x3e, r29	; 62
    1c34:	0f be       	out	0x3f, r0	; 63
    1c36:	cd bf       	out	0x3d, r28	; 61
    1c38:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00001c3a <__epilogue_restores__>:
    1c3a:	2a 88       	ldd	r2, Y+18	; 0x12
    1c3c:	39 88       	ldd	r3, Y+17	; 0x11
    1c3e:	48 88       	ldd	r4, Y+16	; 0x10
    1c40:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c42:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c44:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c46:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c48:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c4a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c4c:	b9 84       	ldd	r11, Y+9	; 0x09
    1c4e:	c8 84       	ldd	r12, Y+8	; 0x08
    1c50:	df 80       	ldd	r13, Y+7	; 0x07
    1c52:	ee 80       	ldd	r14, Y+6	; 0x06
    1c54:	fd 80       	ldd	r15, Y+5	; 0x05
    1c56:	0c 81       	ldd	r16, Y+4	; 0x04
    1c58:	1b 81       	ldd	r17, Y+3	; 0x03
    1c5a:	aa 81       	ldd	r26, Y+2	; 0x02
    1c5c:	b9 81       	ldd	r27, Y+1	; 0x01
    1c5e:	ce 0f       	add	r28, r30
    1c60:	d1 1d       	adc	r29, r1
    1c62:	0f b6       	in	r0, 0x3f	; 63
    1c64:	f8 94       	cli
    1c66:	de bf       	out	0x3e, r29	; 62
    1c68:	0f be       	out	0x3f, r0	; 63
    1c6a:	cd bf       	out	0x3d, r28	; 61
    1c6c:	ed 01       	movw	r28, r26
    1c6e:	08 95       	ret

Disassembly of section .text.avrlibc:

00001f06 <atoi>:
    1f06:	0e 94 63 0f 	call	0x1ec6	; 0x1ec6 <atol>
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	08 95       	ret

Disassembly of section .text.avrlibc:

00001ec6 <atol>:
    1ec6:	2a e0       	ldi	r18, 0x0A	; 10
    1ec8:	30 e0       	ldi	r19, 0x00	; 0
    1eca:	40 e0       	ldi	r20, 0x00	; 0
    1ecc:	50 e0       	ldi	r21, 0x00	; 0
    1ece:	0e 94 bf 04 	call	0x97e	; 0x97e <strtol>
    1ed2:	08 95       	ret

Disassembly of section .text.avrlibc:

0000097e <strtol>:
 97e:	2f 92       	push	r2
 980:	3f 92       	push	r3
 982:	4f 92       	push	r4
 984:	5f 92       	push	r5
 986:	6f 92       	push	r6
 988:	7f 92       	push	r7
 98a:	8f 92       	push	r8
 98c:	af 92       	push	r10
 98e:	bf 92       	push	r11
 990:	cf 92       	push	r12
 992:	df 92       	push	r13
 994:	ef 92       	push	r14
 996:	0f 93       	push	r16
 998:	1f 93       	push	r17
 99a:	cf 93       	push	r28
 99c:	df 93       	push	r29
 99e:	00 d0       	rcall	.+0      	; 0x9a0 <strtol+0x22>
 9a0:	00 d0       	rcall	.+0      	; 0x9a2 <strtol+0x24>
 9a2:	00 d0       	rcall	.+0      	; 0x9a4 <strtol+0x26>
 9a4:	cd b7       	in	r28, 0x3d	; 61
 9a6:	de b7       	in	r29, 0x3e	; 62
 9a8:	3b 01       	movw	r6, r22
 9aa:	88 2e       	mov	r8, r24
 9ac:	5a 01       	movw	r10, r20
 9ae:	19 01       	movw	r2, r18
 9b0:	41 15       	cp	r20, r1
 9b2:	51 05       	cpc	r21, r1
 9b4:	21 f0       	breq	.+8      	; 0x9be <strtol+0x40>
 9b6:	fa 01       	movw	r30, r20
 9b8:	60 83       	st	Z, r22
 9ba:	71 83       	std	Z+1, r23	; 0x01
 9bc:	82 83       	std	Z+2, r24	; 0x02
 9be:	21 14       	cp	r2, r1
 9c0:	31 04       	cpc	r3, r1
 9c2:	29 f0       	breq	.+10     	; 0x9ce <strtol+0x50>
 9c4:	c1 01       	movw	r24, r2
 9c6:	02 97       	sbiw	r24, 0x02	; 2
 9c8:	83 97       	sbiw	r24, 0x23	; 35
 9ca:	08 f0       	brcs	.+2      	; 0x9ce <strtol+0x50>
 9cc:	1a c1       	rjmp	.+564    	; 0xc02 <strtol+0x284>
 9ce:	e8 2c       	mov	r14, r8
 9d0:	63 01       	movw	r12, r6
 9d2:	ff ef       	ldi	r31, 0xFF	; 255
 9d4:	cf 1a       	sub	r12, r31
 9d6:	df 0a       	sbc	r13, r31
 9d8:	ef 0a       	sbc	r14, r31
 9da:	f3 01       	movw	r30, r6
 9dc:	14 91       	lpm	r17, Z
 9de:	87 fc       	sbrc	r8, 7
 9e0:	10 81       	ld	r17, Z
 9e2:	81 2f       	mov	r24, r17
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <isspace>
 9ea:	4c 2d       	mov	r20, r12
 9ec:	3d 2d       	mov	r19, r13
 9ee:	2e 2d       	mov	r18, r14
 9f0:	89 2b       	or	r24, r25
 9f2:	19 f0       	breq	.+6      	; 0x9fa <strtol+0x7c>
 9f4:	36 01       	movw	r6, r12
 9f6:	8e 2c       	mov	r8, r14
 9f8:	ea cf       	rjmp	.-44     	; 0x9ce <strtol+0x50>
 9fa:	1d 32       	cpi	r17, 0x2D	; 45
 9fc:	69 f4       	brne	.+26     	; 0xa18 <strtol+0x9a>
 9fe:	e8 2c       	mov	r14, r8
 a00:	63 01       	movw	r12, r6
 a02:	52 e0       	ldi	r21, 0x02	; 2
 a04:	c5 0e       	add	r12, r21
 a06:	d1 1c       	adc	r13, r1
 a08:	e1 1c       	adc	r14, r1
 a0a:	e4 2f       	mov	r30, r20
 a0c:	f3 2f       	mov	r31, r19
 a0e:	14 91       	lpm	r17, Z
 a10:	27 fd       	sbrc	r18, 7
 a12:	10 81       	ld	r17, Z
 a14:	01 e0       	ldi	r16, 0x01	; 1
 a16:	0e c0       	rjmp	.+28     	; 0xa34 <strtol+0xb6>
 a18:	1b 32       	cpi	r17, 0x2B	; 43
 a1a:	59 f4       	brne	.+22     	; 0xa32 <strtol+0xb4>
 a1c:	e8 2c       	mov	r14, r8
 a1e:	63 01       	movw	r12, r6
 a20:	82 e0       	ldi	r24, 0x02	; 2
 a22:	c8 0e       	add	r12, r24
 a24:	d1 1c       	adc	r13, r1
 a26:	e1 1c       	adc	r14, r1
 a28:	e4 2f       	mov	r30, r20
 a2a:	f3 2f       	mov	r31, r19
 a2c:	14 91       	lpm	r17, Z
 a2e:	27 fd       	sbrc	r18, 7
 a30:	10 81       	ld	r17, Z
 a32:	00 e0       	ldi	r16, 0x00	; 0
 a34:	21 14       	cp	r2, r1
 a36:	31 04       	cpc	r3, r1
 a38:	09 f1       	breq	.+66     	; 0xa7c <strtol+0xfe>
 a3a:	90 e1       	ldi	r25, 0x10	; 16
 a3c:	29 16       	cp	r2, r25
 a3e:	31 04       	cpc	r3, r1
 a40:	29 f4       	brne	.+10     	; 0xa4c <strtol+0xce>
 a42:	3f c0       	rjmp	.+126    	; 0xac2 <strtol+0x144>
 a44:	10 e3       	ldi	r17, 0x30	; 48
 a46:	21 14       	cp	r2, r1
 a48:	31 04       	cpc	r3, r1
 a4a:	21 f1       	breq	.+72     	; 0xa94 <strtol+0x116>
 a4c:	f8 e0       	ldi	r31, 0x08	; 8
 a4e:	2f 16       	cp	r2, r31
 a50:	31 04       	cpc	r3, r1
 a52:	01 f1       	breq	.+64     	; 0xa94 <strtol+0x116>
 a54:	54 f4       	brge	.+20     	; 0xa6a <strtol+0xec>
 a56:	32 e0       	ldi	r19, 0x02	; 2
 a58:	23 16       	cp	r2, r19
 a5a:	31 04       	cpc	r3, r1
 a5c:	21 f5       	brne	.+72     	; 0xaa6 <strtol+0x128>
 a5e:	41 2c       	mov	r4, r1
 a60:	51 2c       	mov	r5, r1
 a62:	61 2c       	mov	r6, r1
 a64:	50 e4       	ldi	r21, 0x40	; 64
 a66:	75 2e       	mov	r7, r21
 a68:	4b c0       	rjmp	.+150    	; 0xb00 <strtol+0x182>
 a6a:	4a e0       	ldi	r20, 0x0A	; 10
 a6c:	24 16       	cp	r2, r20
 a6e:	31 04       	cpc	r3, r1
 a70:	39 f0       	breq	.+14     	; 0xa80 <strtol+0x102>
 a72:	50 e1       	ldi	r21, 0x10	; 16
 a74:	25 16       	cp	r2, r21
 a76:	31 04       	cpc	r3, r1
 a78:	b1 f4       	brne	.+44     	; 0xaa6 <strtol+0x128>
 a7a:	3d c0       	rjmp	.+122    	; 0xaf6 <strtol+0x178>
 a7c:	10 33       	cpi	r17, 0x30	; 48
 a7e:	19 f1       	breq	.+70     	; 0xac6 <strtol+0x148>
 a80:	3a e0       	ldi	r19, 0x0A	; 10
 a82:	23 2e       	mov	r2, r19
 a84:	31 2c       	mov	r3, r1
 a86:	4c ec       	ldi	r20, 0xCC	; 204
 a88:	44 2e       	mov	r4, r20
 a8a:	54 2c       	mov	r5, r4
 a8c:	64 2c       	mov	r6, r4
 a8e:	4c e0       	ldi	r20, 0x0C	; 12
 a90:	74 2e       	mov	r7, r20
 a92:	36 c0       	rjmp	.+108    	; 0xb00 <strtol+0x182>
 a94:	98 e0       	ldi	r25, 0x08	; 8
 a96:	29 2e       	mov	r2, r25
 a98:	31 2c       	mov	r3, r1
 a9a:	41 2c       	mov	r4, r1
 a9c:	51 2c       	mov	r5, r1
 a9e:	61 2c       	mov	r6, r1
 aa0:	20 e1       	ldi	r18, 0x10	; 16
 aa2:	72 2e       	mov	r7, r18
 aa4:	2d c0       	rjmp	.+90     	; 0xb00 <strtol+0x182>
 aa6:	60 e0       	ldi	r22, 0x00	; 0
 aa8:	70 e0       	ldi	r23, 0x00	; 0
 aaa:	80 e0       	ldi	r24, 0x00	; 0
 aac:	90 e8       	ldi	r25, 0x80	; 128
 aae:	91 01       	movw	r18, r2
 ab0:	03 2c       	mov	r0, r3
 ab2:	00 0c       	add	r0, r0
 ab4:	44 0b       	sbc	r20, r20
 ab6:	55 0b       	sbc	r21, r21
 ab8:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <__udivmodsi4>
 abc:	29 01       	movw	r4, r18
 abe:	3a 01       	movw	r6, r20
 ac0:	1f c0       	rjmp	.+62     	; 0xb00 <strtol+0x182>
 ac2:	10 33       	cpi	r17, 0x30	; 48
 ac4:	c1 f4       	brne	.+48     	; 0xaf6 <strtol+0x178>
 ac6:	f6 01       	movw	r30, r12
 ac8:	84 91       	lpm	r24, Z
 aca:	e7 fc       	sbrc	r14, 7
 acc:	80 81       	ld	r24, Z
 ace:	8f 7d       	andi	r24, 0xDF	; 223
 ad0:	88 35       	cpi	r24, 0x58	; 88
 ad2:	09 f0       	breq	.+2      	; 0xad6 <strtol+0x158>
 ad4:	b7 cf       	rjmp	.-146    	; 0xa44 <strtol+0xc6>
 ad6:	ae 2d       	mov	r26, r14
 ad8:	c6 01       	movw	r24, r12
 ada:	01 96       	adiw	r24, 0x01	; 1
 adc:	a1 1d       	adc	r26, r1
 ade:	fc 01       	movw	r30, r24
 ae0:	14 91       	lpm	r17, Z
 ae2:	a7 fd       	sbrc	r26, 7
 ae4:	10 81       	ld	r17, Z
 ae6:	e2 e0       	ldi	r30, 0x02	; 2
 ae8:	ce 0e       	add	r12, r30
 aea:	d1 1c       	adc	r13, r1
 aec:	e1 1c       	adc	r14, r1
 aee:	02 60       	ori	r16, 0x02	; 2
 af0:	60 e1       	ldi	r22, 0x10	; 16
 af2:	26 2e       	mov	r2, r22
 af4:	31 2c       	mov	r3, r1
 af6:	41 2c       	mov	r4, r1
 af8:	51 2c       	mov	r5, r1
 afa:	61 2c       	mov	r6, r1
 afc:	88 e0       	ldi	r24, 0x08	; 8
 afe:	78 2e       	mov	r7, r24
 b00:	a0 e0       	ldi	r26, 0x00	; 0
 b02:	60 e0       	ldi	r22, 0x00	; 0
 b04:	70 e0       	ldi	r23, 0x00	; 0
 b06:	cb 01       	movw	r24, r22
 b08:	91 01       	movw	r18, r2
 b0a:	03 2c       	mov	r0, r3
 b0c:	00 0c       	add	r0, r0
 b0e:	44 0b       	sbc	r20, r20
 b10:	55 0b       	sbc	r21, r21
 b12:	29 83       	std	Y+1, r18	; 0x01
 b14:	3a 83       	std	Y+2, r19	; 0x02
 b16:	4b 83       	std	Y+3, r20	; 0x03
 b18:	5c 83       	std	Y+4, r21	; 0x04
 b1a:	e0 ed       	ldi	r30, 0xD0	; 208
 b1c:	e1 0f       	add	r30, r17
 b1e:	ea 30       	cpi	r30, 0x0A	; 10
 b20:	60 f0       	brcs	.+24     	; 0xb3a <strtol+0x1bc>
 b22:	2f eb       	ldi	r18, 0xBF	; 191
 b24:	21 0f       	add	r18, r17
 b26:	2a 31       	cpi	r18, 0x1A	; 26
 b28:	10 f4       	brcc	.+4      	; 0xb2e <strtol+0x1b0>
 b2a:	e9 ec       	ldi	r30, 0xC9	; 201
 b2c:	05 c0       	rjmp	.+10     	; 0xb38 <strtol+0x1ba>
 b2e:	2f e9       	ldi	r18, 0x9F	; 159
 b30:	21 0f       	add	r18, r17
 b32:	2a 31       	cpi	r18, 0x1A	; 26
 b34:	50 f5       	brcc	.+84     	; 0xb8a <strtol+0x20c>
 b36:	e9 ea       	ldi	r30, 0xA9	; 169
 b38:	e1 0f       	add	r30, r17
 b3a:	2e 2f       	mov	r18, r30
 b3c:	30 e0       	ldi	r19, 0x00	; 0
 b3e:	22 15       	cp	r18, r2
 b40:	33 05       	cpc	r19, r3
 b42:	1c f5       	brge	.+70     	; 0xb8a <strtol+0x20c>
 b44:	a7 fd       	sbrc	r26, 7
 b46:	18 c0       	rjmp	.+48     	; 0xb78 <strtol+0x1fa>
 b48:	46 16       	cp	r4, r22
 b4a:	57 06       	cpc	r5, r23
 b4c:	68 06       	cpc	r6, r24
 b4e:	79 06       	cpc	r7, r25
 b50:	80 f0       	brcs	.+32     	; 0xb72 <strtol+0x1f4>
 b52:	29 81       	ldd	r18, Y+1	; 0x01
 b54:	3a 81       	ldd	r19, Y+2	; 0x02
 b56:	4b 81       	ldd	r20, Y+3	; 0x03
 b58:	5c 81       	ldd	r21, Y+4	; 0x04
 b5a:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <__mulsi3>
 b5e:	6e 0f       	add	r22, r30
 b60:	71 1d       	adc	r23, r1
 b62:	81 1d       	adc	r24, r1
 b64:	91 1d       	adc	r25, r1
 b66:	61 30       	cpi	r22, 0x01	; 1
 b68:	71 05       	cpc	r23, r1
 b6a:	81 05       	cpc	r24, r1
 b6c:	30 e8       	ldi	r19, 0x80	; 128
 b6e:	93 07       	cpc	r25, r19
 b70:	10 f0       	brcs	.+4      	; 0xb76 <strtol+0x1f8>
 b72:	af ef       	ldi	r26, 0xFF	; 255
 b74:	01 c0       	rjmp	.+2      	; 0xb78 <strtol+0x1fa>
 b76:	a1 e0       	ldi	r26, 0x01	; 1
 b78:	f6 01       	movw	r30, r12
 b7a:	14 91       	lpm	r17, Z
 b7c:	e7 fc       	sbrc	r14, 7
 b7e:	10 81       	ld	r17, Z
 b80:	4f ef       	ldi	r20, 0xFF	; 255
 b82:	c4 1a       	sub	r12, r20
 b84:	d4 0a       	sbc	r13, r20
 b86:	e4 0a       	sbc	r14, r20
 b88:	c8 cf       	rjmp	.-112    	; 0xb1a <strtol+0x19c>
 b8a:	20 2f       	mov	r18, r16
 b8c:	21 70       	andi	r18, 0x01	; 1
 b8e:	a1 14       	cp	r10, r1
 b90:	b1 04       	cpc	r11, r1
 b92:	b1 f0       	breq	.+44     	; 0xbc0 <strtol+0x242>
 b94:	aa 23       	and	r26, r26
 b96:	49 f0       	breq	.+18     	; 0xbaa <strtol+0x22c>
 b98:	51 e0       	ldi	r21, 0x01	; 1
 b9a:	c5 1a       	sub	r12, r21
 b9c:	d1 08       	sbc	r13, r1
 b9e:	e1 08       	sbc	r14, r1
 ba0:	f5 01       	movw	r30, r10
 ba2:	c0 82       	st	Z, r12
 ba4:	d1 82       	std	Z+1, r13	; 0x01
 ba6:	e2 82       	std	Z+2, r14	; 0x02
 ba8:	0b c0       	rjmp	.+22     	; 0xbc0 <strtol+0x242>
 baa:	01 ff       	sbrs	r16, 1
 bac:	1d c0       	rjmp	.+58     	; 0xbe8 <strtol+0x26a>
 bae:	f2 e0       	ldi	r31, 0x02	; 2
 bb0:	cf 1a       	sub	r12, r31
 bb2:	d1 08       	sbc	r13, r1
 bb4:	e1 08       	sbc	r14, r1
 bb6:	f5 01       	movw	r30, r10
 bb8:	c0 82       	st	Z, r12
 bba:	d1 82       	std	Z+1, r13	; 0x01
 bbc:	e2 82       	std	Z+2, r14	; 0x02
 bbe:	14 c0       	rjmp	.+40     	; 0xbe8 <strtol+0x26a>
 bc0:	a7 ff       	sbrs	r26, 7
 bc2:	12 c0       	rjmp	.+36     	; 0xbe8 <strtol+0x26a>
 bc4:	22 23       	and	r18, r18
 bc6:	29 f0       	breq	.+10     	; 0xbd2 <strtol+0x254>
 bc8:	60 e0       	ldi	r22, 0x00	; 0
 bca:	70 e0       	ldi	r23, 0x00	; 0
 bcc:	80 e0       	ldi	r24, 0x00	; 0
 bce:	90 e8       	ldi	r25, 0x80	; 128
 bd0:	04 c0       	rjmp	.+8      	; 0xbda <strtol+0x25c>
 bd2:	6f ef       	ldi	r22, 0xFF	; 255
 bd4:	7f ef       	ldi	r23, 0xFF	; 255
 bd6:	8f ef       	ldi	r24, 0xFF	; 255
 bd8:	9f e7       	ldi	r25, 0x7F	; 127
 bda:	22 e2       	ldi	r18, 0x22	; 34
 bdc:	30 e0       	ldi	r19, 0x00	; 0
 bde:	30 93 21 04 	sts	0x0421, r19	; 0x800421 <errno+0x1>
 be2:	20 93 20 04 	sts	0x0420, r18	; 0x800420 <errno>
 be6:	09 c0       	rjmp	.+18     	; 0xbfa <strtol+0x27c>
 be8:	22 23       	and	r18, r18
 bea:	81 f0       	breq	.+32     	; 0xc0c <strtol+0x28e>
 bec:	90 95       	com	r25
 bee:	80 95       	com	r24
 bf0:	70 95       	com	r23
 bf2:	61 95       	neg	r22
 bf4:	7f 4f       	sbci	r23, 0xFF	; 255
 bf6:	8f 4f       	sbci	r24, 0xFF	; 255
 bf8:	9f 4f       	sbci	r25, 0xFF	; 255
 bfa:	46 2f       	mov	r20, r22
 bfc:	37 2f       	mov	r19, r23
 bfe:	28 2f       	mov	r18, r24
 c00:	12 c0       	rjmp	.+36     	; 0xc26 <strtol+0x2a8>
 c02:	40 e0       	ldi	r20, 0x00	; 0
 c04:	30 e0       	ldi	r19, 0x00	; 0
 c06:	20 e0       	ldi	r18, 0x00	; 0
 c08:	90 e0       	ldi	r25, 0x00	; 0
 c0a:	0d c0       	rjmp	.+26     	; 0xc26 <strtol+0x2a8>
 c0c:	97 ff       	sbrs	r25, 7
 c0e:	f5 cf       	rjmp	.-22     	; 0xbfa <strtol+0x27c>
 c10:	82 e2       	ldi	r24, 0x22	; 34
 c12:	90 e0       	ldi	r25, 0x00	; 0
 c14:	90 93 21 04 	sts	0x0421, r25	; 0x800421 <errno+0x1>
 c18:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <errno>
 c1c:	6f ef       	ldi	r22, 0xFF	; 255
 c1e:	7f ef       	ldi	r23, 0xFF	; 255
 c20:	8f ef       	ldi	r24, 0xFF	; 255
 c22:	9f e7       	ldi	r25, 0x7F	; 127
 c24:	ea cf       	rjmp	.-44     	; 0xbfa <strtol+0x27c>
 c26:	64 2f       	mov	r22, r20
 c28:	73 2f       	mov	r23, r19
 c2a:	82 2f       	mov	r24, r18
 c2c:	26 96       	adiw	r28, 0x06	; 6
 c2e:	0f b6       	in	r0, 0x3f	; 63
 c30:	f8 94       	cli
 c32:	de bf       	out	0x3e, r29	; 62
 c34:	0f be       	out	0x3f, r0	; 63
 c36:	cd bf       	out	0x3d, r28	; 61
 c38:	df 91       	pop	r29
 c3a:	cf 91       	pop	r28
 c3c:	1f 91       	pop	r17
 c3e:	0f 91       	pop	r16
 c40:	ef 90       	pop	r14
 c42:	df 90       	pop	r13
 c44:	cf 90       	pop	r12
 c46:	bf 90       	pop	r11
 c48:	af 90       	pop	r10
 c4a:	8f 90       	pop	r8
 c4c:	7f 90       	pop	r7
 c4e:	6f 90       	pop	r6
 c50:	5f 90       	pop	r5
 c52:	4f 90       	pop	r4
 c54:	3f 90       	pop	r3
 c56:	2f 90       	pop	r2
 c58:	08 95       	ret

Disassembly of section .text.avrlibc:

00000c5a <__ftoa_engine>:
 c5a:	28 30       	cpi	r18, 0x08	; 8
 c5c:	08 f0       	brcs	.+2      	; 0xc60 <__ftoa_engine+0x6>
 c5e:	27 e0       	ldi	r18, 0x07	; 7
 c60:	33 27       	eor	r19, r19
 c62:	da 01       	movw	r26, r20
 c64:	99 0f       	add	r25, r25
 c66:	31 1d       	adc	r19, r1
 c68:	87 fd       	sbrc	r24, 7
 c6a:	91 60       	ori	r25, 0x01	; 1
 c6c:	00 96       	adiw	r24, 0x00	; 0
 c6e:	61 05       	cpc	r22, r1
 c70:	71 05       	cpc	r23, r1
 c72:	39 f4       	brne	.+14     	; 0xc82 <__ftoa_engine+0x28>
 c74:	32 60       	ori	r19, 0x02	; 2
 c76:	2e 5f       	subi	r18, 0xFE	; 254
 c78:	3d 93       	st	X+, r19
 c7a:	30 e3       	ldi	r19, 0x30	; 48
 c7c:	2a 95       	dec	r18
 c7e:	e1 f7       	brne	.-8      	; 0xc78 <__ftoa_engine+0x1e>
 c80:	08 95       	ret
 c82:	9f 3f       	cpi	r25, 0xFF	; 255
 c84:	30 f0       	brcs	.+12     	; 0xc92 <__ftoa_engine+0x38>
 c86:	80 38       	cpi	r24, 0x80	; 128
 c88:	71 05       	cpc	r23, r1
 c8a:	61 05       	cpc	r22, r1
 c8c:	09 f0       	breq	.+2      	; 0xc90 <__ftoa_engine+0x36>
 c8e:	3c 5f       	subi	r19, 0xFC	; 252
 c90:	3c 5f       	subi	r19, 0xFC	; 252
 c92:	3d 93       	st	X+, r19
 c94:	91 30       	cpi	r25, 0x01	; 1
 c96:	08 f0       	brcs	.+2      	; 0xc9a <__ftoa_engine+0x40>
 c98:	80 68       	ori	r24, 0x80	; 128
 c9a:	91 1d       	adc	r25, r1
 c9c:	df 93       	push	r29
 c9e:	cf 93       	push	r28
 ca0:	1f 93       	push	r17
 ca2:	0f 93       	push	r16
 ca4:	ff 92       	push	r15
 ca6:	ef 92       	push	r14
 ca8:	19 2f       	mov	r17, r25
 caa:	98 7f       	andi	r25, 0xF8	; 248
 cac:	96 95       	lsr	r25
 cae:	e9 2f       	mov	r30, r25
 cb0:	96 95       	lsr	r25
 cb2:	96 95       	lsr	r25
 cb4:	e9 0f       	add	r30, r25
 cb6:	ff 27       	eor	r31, r31
 cb8:	e2 51       	subi	r30, 0x12	; 18
 cba:	ff 4f       	sbci	r31, 0xFF	; 255
 cbc:	99 27       	eor	r25, r25
 cbe:	33 27       	eor	r19, r19
 cc0:	ee 24       	eor	r14, r14
 cc2:	ff 24       	eor	r15, r15
 cc4:	a7 01       	movw	r20, r14
 cc6:	e7 01       	movw	r28, r14
 cc8:	05 90       	lpm	r0, Z+
 cca:	08 94       	sec
 ccc:	07 94       	ror	r0
 cce:	28 f4       	brcc	.+10     	; 0xcda <__ftoa_engine+0x80>
 cd0:	36 0f       	add	r19, r22
 cd2:	e7 1e       	adc	r14, r23
 cd4:	f8 1e       	adc	r15, r24
 cd6:	49 1f       	adc	r20, r25
 cd8:	51 1d       	adc	r21, r1
 cda:	66 0f       	add	r22, r22
 cdc:	77 1f       	adc	r23, r23
 cde:	88 1f       	adc	r24, r24
 ce0:	99 1f       	adc	r25, r25
 ce2:	06 94       	lsr	r0
 ce4:	a1 f7       	brne	.-24     	; 0xcce <__ftoa_engine+0x74>
 ce6:	05 90       	lpm	r0, Z+
 ce8:	07 94       	ror	r0
 cea:	28 f4       	brcc	.+10     	; 0xcf6 <__ftoa_engine+0x9c>
 cec:	e7 0e       	add	r14, r23
 cee:	f8 1e       	adc	r15, r24
 cf0:	49 1f       	adc	r20, r25
 cf2:	56 1f       	adc	r21, r22
 cf4:	c1 1d       	adc	r28, r1
 cf6:	77 0f       	add	r23, r23
 cf8:	88 1f       	adc	r24, r24
 cfa:	99 1f       	adc	r25, r25
 cfc:	66 1f       	adc	r22, r22
 cfe:	06 94       	lsr	r0
 d00:	a1 f7       	brne	.-24     	; 0xcea <__ftoa_engine+0x90>
 d02:	05 90       	lpm	r0, Z+
 d04:	07 94       	ror	r0
 d06:	28 f4       	brcc	.+10     	; 0xd12 <__ftoa_engine+0xb8>
 d08:	f8 0e       	add	r15, r24
 d0a:	49 1f       	adc	r20, r25
 d0c:	56 1f       	adc	r21, r22
 d0e:	c7 1f       	adc	r28, r23
 d10:	d1 1d       	adc	r29, r1
 d12:	88 0f       	add	r24, r24
 d14:	99 1f       	adc	r25, r25
 d16:	66 1f       	adc	r22, r22
 d18:	77 1f       	adc	r23, r23
 d1a:	06 94       	lsr	r0
 d1c:	a1 f7       	brne	.-24     	; 0xd06 <__ftoa_engine+0xac>
 d1e:	05 90       	lpm	r0, Z+
 d20:	07 94       	ror	r0
 d22:	20 f4       	brcc	.+8      	; 0xd2c <__ftoa_engine+0xd2>
 d24:	49 0f       	add	r20, r25
 d26:	56 1f       	adc	r21, r22
 d28:	c7 1f       	adc	r28, r23
 d2a:	d8 1f       	adc	r29, r24
 d2c:	99 0f       	add	r25, r25
 d2e:	66 1f       	adc	r22, r22
 d30:	77 1f       	adc	r23, r23
 d32:	88 1f       	adc	r24, r24
 d34:	06 94       	lsr	r0
 d36:	a9 f7       	brne	.-22     	; 0xd22 <__ftoa_engine+0xc8>
 d38:	84 91       	lpm	r24, Z
 d3a:	10 95       	com	r17
 d3c:	17 70       	andi	r17, 0x07	; 7
 d3e:	41 f0       	breq	.+16     	; 0xd50 <__ftoa_engine+0xf6>
 d40:	d6 95       	lsr	r29
 d42:	c7 95       	ror	r28
 d44:	57 95       	ror	r21
 d46:	47 95       	ror	r20
 d48:	f7 94       	ror	r15
 d4a:	e7 94       	ror	r14
 d4c:	1a 95       	dec	r17
 d4e:	c1 f7       	brne	.-16     	; 0xd40 <__ftoa_engine+0xe6>
 d50:	e4 e9       	ldi	r30, 0x94	; 148
 d52:	f0 e0       	ldi	r31, 0x00	; 0
 d54:	68 94       	set
 d56:	15 90       	lpm	r1, Z+
 d58:	15 91       	lpm	r17, Z+
 d5a:	35 91       	lpm	r19, Z+
 d5c:	65 91       	lpm	r22, Z+
 d5e:	95 91       	lpm	r25, Z+
 d60:	05 90       	lpm	r0, Z+
 d62:	7f e2       	ldi	r23, 0x2F	; 47
 d64:	73 95       	inc	r23
 d66:	e1 18       	sub	r14, r1
 d68:	f1 0a       	sbc	r15, r17
 d6a:	43 0b       	sbc	r20, r19
 d6c:	56 0b       	sbc	r21, r22
 d6e:	c9 0b       	sbc	r28, r25
 d70:	d0 09       	sbc	r29, r0
 d72:	c0 f7       	brcc	.-16     	; 0xd64 <__ftoa_engine+0x10a>
 d74:	e1 0c       	add	r14, r1
 d76:	f1 1e       	adc	r15, r17
 d78:	43 1f       	adc	r20, r19
 d7a:	56 1f       	adc	r21, r22
 d7c:	c9 1f       	adc	r28, r25
 d7e:	d0 1d       	adc	r29, r0
 d80:	7e f4       	brtc	.+30     	; 0xda0 <__ftoa_engine+0x146>
 d82:	70 33       	cpi	r23, 0x30	; 48
 d84:	11 f4       	brne	.+4      	; 0xd8a <__ftoa_engine+0x130>
 d86:	8a 95       	dec	r24
 d88:	e6 cf       	rjmp	.-52     	; 0xd56 <__ftoa_engine+0xfc>
 d8a:	e8 94       	clt
 d8c:	01 50       	subi	r16, 0x01	; 1
 d8e:	30 f0       	brcs	.+12     	; 0xd9c <__ftoa_engine+0x142>
 d90:	08 0f       	add	r16, r24
 d92:	0a f4       	brpl	.+2      	; 0xd96 <__ftoa_engine+0x13c>
 d94:	00 27       	eor	r16, r16
 d96:	02 17       	cp	r16, r18
 d98:	08 f4       	brcc	.+2      	; 0xd9c <__ftoa_engine+0x142>
 d9a:	20 2f       	mov	r18, r16
 d9c:	23 95       	inc	r18
 d9e:	02 2f       	mov	r16, r18
 da0:	7a 33       	cpi	r23, 0x3A	; 58
 da2:	28 f0       	brcs	.+10     	; 0xdae <__ftoa_engine+0x154>
 da4:	79 e3       	ldi	r23, 0x39	; 57
 da6:	7d 93       	st	X+, r23
 da8:	2a 95       	dec	r18
 daa:	e9 f7       	brne	.-6      	; 0xda6 <__ftoa_engine+0x14c>
 dac:	10 c0       	rjmp	.+32     	; 0xdce <__ftoa_engine+0x174>
 dae:	7d 93       	st	X+, r23
 db0:	2a 95       	dec	r18
 db2:	89 f6       	brne	.-94     	; 0xd56 <__ftoa_engine+0xfc>
 db4:	06 94       	lsr	r0
 db6:	97 95       	ror	r25
 db8:	67 95       	ror	r22
 dba:	37 95       	ror	r19
 dbc:	17 95       	ror	r17
 dbe:	17 94       	ror	r1
 dc0:	e1 18       	sub	r14, r1
 dc2:	f1 0a       	sbc	r15, r17
 dc4:	43 0b       	sbc	r20, r19
 dc6:	56 0b       	sbc	r21, r22
 dc8:	c9 0b       	sbc	r28, r25
 dca:	d0 09       	sbc	r29, r0
 dcc:	98 f0       	brcs	.+38     	; 0xdf4 <__ftoa_engine+0x19a>
 dce:	23 95       	inc	r18
 dd0:	7e 91       	ld	r23, -X
 dd2:	73 95       	inc	r23
 dd4:	7a 33       	cpi	r23, 0x3A	; 58
 dd6:	08 f0       	brcs	.+2      	; 0xdda <__ftoa_engine+0x180>
 dd8:	70 e3       	ldi	r23, 0x30	; 48
 dda:	7c 93       	st	X, r23
 ddc:	20 13       	cpse	r18, r16
 dde:	b8 f7       	brcc	.-18     	; 0xdce <__ftoa_engine+0x174>
 de0:	7e 91       	ld	r23, -X
 de2:	70 61       	ori	r23, 0x10	; 16
 de4:	7d 93       	st	X+, r23
 de6:	30 f0       	brcs	.+12     	; 0xdf4 <__ftoa_engine+0x19a>
 de8:	83 95       	inc	r24
 dea:	71 e3       	ldi	r23, 0x31	; 49
 dec:	7d 93       	st	X+, r23
 dee:	70 e3       	ldi	r23, 0x30	; 48
 df0:	2a 95       	dec	r18
 df2:	e1 f7       	brne	.-8      	; 0xdec <__ftoa_engine+0x192>
 df4:	11 24       	eor	r1, r1
 df6:	ef 90       	pop	r14
 df8:	ff 90       	pop	r15
 dfa:	0f 91       	pop	r16
 dfc:	1f 91       	pop	r17
 dfe:	cf 91       	pop	r28
 e00:	df 91       	pop	r29
 e02:	99 27       	eor	r25, r25
 e04:	87 fd       	sbrc	r24, 7
 e06:	90 95       	com	r25
 e08:	08 95       	ret

Disassembly of section .text.avrlibc:

00001e60 <isspace>:
    1e60:	91 11       	cpse	r25, r1
    1e62:	0c 94 8a 0f 	jmp	0x1f14	; 0x1f14 <__ctype_isfalse>
    1e66:	80 32       	cpi	r24, 0x20	; 32
    1e68:	19 f0       	breq	.+6      	; 0x1e70 <isspace+0x10>
    1e6a:	89 50       	subi	r24, 0x09	; 9
    1e6c:	85 50       	subi	r24, 0x05	; 5
    1e6e:	c8 f7       	brcc	.-14     	; 0x1e62 <isspace+0x2>
    1e70:	08 95       	ret

Disassembly of section .text.avrlibc:

00001ca6 <memcpy>:
    1ca6:	cf 92       	push	r12
    1ca8:	df 92       	push	r13
    1caa:	ef 92       	push	r14
    1cac:	dc 01       	movw	r26, r24
    1cae:	6a 01       	movw	r12, r20
    1cb0:	e6 2e       	mov	r14, r22
    1cb2:	28 0f       	add	r18, r24
    1cb4:	39 1f       	adc	r19, r25
    1cb6:	a2 17       	cp	r26, r18
    1cb8:	b3 07       	cpc	r27, r19
    1cba:	51 f0       	breq	.+20     	; 0x1cd0 <memcpy+0x2a>
    1cbc:	f6 01       	movw	r30, r12
    1cbe:	44 91       	lpm	r20, Z
    1cc0:	e7 fc       	sbrc	r14, 7
    1cc2:	40 81       	ld	r20, Z
    1cc4:	4d 93       	st	X+, r20
    1cc6:	4f ef       	ldi	r20, 0xFF	; 255
    1cc8:	c4 1a       	sub	r12, r20
    1cca:	d4 0a       	sbc	r13, r20
    1ccc:	e4 0a       	sbc	r14, r20
    1cce:	f3 cf       	rjmp	.-26     	; 0x1cb6 <memcpy+0x10>
    1cd0:	ef 90       	pop	r14
    1cd2:	df 90       	pop	r13
    1cd4:	cf 90       	pop	r12
    1cd6:	08 95       	ret

Disassembly of section .text.avrlibc:

00001b84 <strcmp>:
    1b84:	cf 92       	push	r12
    1b86:	df 92       	push	r13
    1b88:	ef 92       	push	r14
    1b8a:	6b 01       	movw	r12, r22
    1b8c:	e8 2e       	mov	r14, r24
    1b8e:	f6 01       	movw	r30, r12
    1b90:	84 91       	lpm	r24, Z
    1b92:	e7 fc       	sbrc	r14, 7
    1b94:	80 81       	ld	r24, Z
    1b96:	f9 01       	movw	r30, r18
    1b98:	54 91       	lpm	r21, Z
    1b9a:	47 fd       	sbrc	r20, 7
    1b9c:	50 81       	ld	r21, Z
    1b9e:	85 13       	cpse	r24, r21
    1ba0:	0b c0       	rjmp	.+22     	; 0x1bb8 <strcmp+0x34>
    1ba2:	88 23       	and	r24, r24
    1ba4:	41 f0       	breq	.+16     	; 0x1bb6 <strcmp+0x32>
    1ba6:	8f ef       	ldi	r24, 0xFF	; 255
    1ba8:	c8 1a       	sub	r12, r24
    1baa:	d8 0a       	sbc	r13, r24
    1bac:	e8 0a       	sbc	r14, r24
    1bae:	2f 5f       	subi	r18, 0xFF	; 255
    1bb0:	3f 4f       	sbci	r19, 0xFF	; 255
    1bb2:	4f 4f       	sbci	r20, 0xFF	; 255
    1bb4:	ec cf       	rjmp	.-40     	; 0x1b8e <strcmp+0xa>
    1bb6:	58 2f       	mov	r21, r24
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	85 1b       	sub	r24, r21
    1bbc:	91 09       	sbc	r25, r1
    1bbe:	ef 90       	pop	r14
    1bc0:	df 90       	pop	r13
    1bc2:	cf 90       	pop	r12
    1bc4:	08 95       	ret

Disassembly of section .text.avrlibc:

00001d34 <strlen>:
    1d34:	cf 92       	push	r12
    1d36:	df 92       	push	r13
    1d38:	ef 92       	push	r14
    1d3a:	6b 01       	movw	r12, r22
    1d3c:	e8 2e       	mov	r14, r24
    1d3e:	a8 2f       	mov	r26, r24
    1d40:	cb 01       	movw	r24, r22
    1d42:	fc 01       	movw	r30, r24
    1d44:	24 91       	lpm	r18, Z
    1d46:	a7 fd       	sbrc	r26, 7
    1d48:	20 81       	ld	r18, Z
    1d4a:	22 23       	and	r18, r18
    1d4c:	19 f0       	breq	.+6      	; 0x1d54 <strlen+0x20>
    1d4e:	01 96       	adiw	r24, 0x01	; 1
    1d50:	a1 1d       	adc	r26, r1
    1d52:	f7 cf       	rjmp	.-18     	; 0x1d42 <strlen+0xe>
    1d54:	8c 19       	sub	r24, r12
    1d56:	9d 09       	sbc	r25, r13
    1d58:	ef 90       	pop	r14
    1d5a:	df 90       	pop	r13
    1d5c:	cf 90       	pop	r12
    1d5e:	08 95       	ret

Disassembly of section .text.avrlibc:

00001de8 <strcpy>:
    1de8:	9a 01       	movw	r18, r20
    1dea:	46 2f       	mov	r20, r22
    1dec:	dc 01       	movw	r26, r24
    1dee:	f9 01       	movw	r30, r18
    1df0:	54 91       	lpm	r21, Z
    1df2:	47 fd       	sbrc	r20, 7
    1df4:	50 81       	ld	r21, Z
    1df6:	5d 93       	st	X+, r21
    1df8:	55 23       	and	r21, r21
    1dfa:	21 f0       	breq	.+8      	; 0x1e04 <strcpy+0x1c>
    1dfc:	2f 5f       	subi	r18, 0xFF	; 255
    1dfe:	3f 4f       	sbci	r19, 0xFF	; 255
    1e00:	4f 4f       	sbci	r20, 0xFF	; 255
    1e02:	f5 cf       	rjmp	.-22     	; 0x1dee <strcpy+0x6>
    1e04:	08 95       	ret

Disassembly of section .text.avrlibc:

00001c70 <strnlen>:
    1c70:	cf 92       	push	r12
    1c72:	df 92       	push	r13
    1c74:	ef 92       	push	r14
    1c76:	6b 01       	movw	r12, r22
    1c78:	e8 2e       	mov	r14, r24
    1c7a:	a8 2f       	mov	r26, r24
    1c7c:	cb 01       	movw	r24, r22
    1c7e:	41 15       	cp	r20, r1
    1c80:	51 05       	cpc	r21, r1
    1c82:	31 f4       	brne	.+12     	; 0x1c90 <strnlen+0x20>
    1c84:	8c 19       	sub	r24, r12
    1c86:	9d 09       	sbc	r25, r13
    1c88:	ef 90       	pop	r14
    1c8a:	df 90       	pop	r13
    1c8c:	cf 90       	pop	r12
    1c8e:	08 95       	ret
    1c90:	fc 01       	movw	r30, r24
    1c92:	24 91       	lpm	r18, Z
    1c94:	a7 fd       	sbrc	r26, 7
    1c96:	20 81       	ld	r18, Z
    1c98:	22 23       	and	r18, r18
    1c9a:	a1 f3       	breq	.-24     	; 0x1c84 <strnlen+0x14>
    1c9c:	01 96       	adiw	r24, 0x01	; 1
    1c9e:	a1 1d       	adc	r26, r1
    1ca0:	41 50       	subi	r20, 0x01	; 1
    1ca2:	51 09       	sbc	r21, r1
    1ca4:	ec cf       	rjmp	.-40     	; 0x1c7e <strnlen+0xe>

Disassembly of section .text.avrlibc:

0000166c <fputc>:
    166c:	0f 93       	push	r16
    166e:	1f 93       	push	r17
    1670:	cf 93       	push	r28
    1672:	df 93       	push	r29
    1674:	fb 01       	movw	r30, r22
    1676:	24 81       	ldd	r18, Z+4	; 0x04
    1678:	21 fd       	sbrc	r18, 1
    167a:	03 c0       	rjmp	.+6      	; 0x1682 <fputc+0x16>
    167c:	8f ef       	ldi	r24, 0xFF	; 255
    167e:	9f ef       	ldi	r25, 0xFF	; 255
    1680:	2c c0       	rjmp	.+88     	; 0x16da <fputc+0x6e>
    1682:	22 ff       	sbrs	r18, 2
    1684:	16 c0       	rjmp	.+44     	; 0x16b2 <fputc+0x46>
    1686:	47 81       	ldd	r20, Z+7	; 0x07
    1688:	50 85       	ldd	r21, Z+8	; 0x08
    168a:	25 81       	ldd	r18, Z+5	; 0x05
    168c:	36 81       	ldd	r19, Z+6	; 0x06
    168e:	42 17       	cp	r20, r18
    1690:	53 07       	cpc	r21, r19
    1692:	44 f4       	brge	.+16     	; 0x16a4 <fputc+0x38>
    1694:	a0 81       	ld	r26, Z
    1696:	b1 81       	ldd	r27, Z+1	; 0x01
    1698:	9d 01       	movw	r18, r26
    169a:	2f 5f       	subi	r18, 0xFF	; 255
    169c:	3f 4f       	sbci	r19, 0xFF	; 255
    169e:	31 83       	std	Z+1, r19	; 0x01
    16a0:	20 83       	st	Z, r18
    16a2:	8c 93       	st	X, r24
    16a4:	27 81       	ldd	r18, Z+7	; 0x07
    16a6:	30 85       	ldd	r19, Z+8	; 0x08
    16a8:	2f 5f       	subi	r18, 0xFF	; 255
    16aa:	3f 4f       	sbci	r19, 0xFF	; 255
    16ac:	30 87       	std	Z+8, r19	; 0x08
    16ae:	27 83       	std	Z+7, r18	; 0x07
    16b0:	14 c0       	rjmp	.+40     	; 0x16da <fputc+0x6e>
    16b2:	8b 01       	movw	r16, r22
    16b4:	ec 01       	movw	r28, r24
    16b6:	fb 01       	movw	r30, r22
    16b8:	01 84       	ldd	r0, Z+9	; 0x09
    16ba:	f2 85       	ldd	r31, Z+10	; 0x0a
    16bc:	e0 2d       	mov	r30, r0
    16be:	09 95       	icall
    16c0:	89 2b       	or	r24, r25
    16c2:	e1 f6       	brne	.-72     	; 0x167c <fputc+0x10>
    16c4:	d8 01       	movw	r26, r16
    16c6:	17 96       	adiw	r26, 0x07	; 7
    16c8:	8d 91       	ld	r24, X+
    16ca:	9c 91       	ld	r25, X
    16cc:	18 97       	sbiw	r26, 0x08	; 8
    16ce:	01 96       	adiw	r24, 0x01	; 1
    16d0:	18 96       	adiw	r26, 0x08	; 8
    16d2:	9c 93       	st	X, r25
    16d4:	8e 93       	st	-X, r24
    16d6:	17 97       	sbiw	r26, 0x07	; 7
    16d8:	ce 01       	movw	r24, r28
    16da:	df 91       	pop	r29
    16dc:	cf 91       	pop	r28
    16de:	1f 91       	pop	r17
    16e0:	0f 91       	pop	r16
    16e2:	08 95       	ret

Disassembly of section .text.avrlibc:

00001ab6 <sprintf>:
    1ab6:	af e0       	ldi	r26, 0x0F	; 15
    1ab8:	b0 e0       	ldi	r27, 0x00	; 0
    1aba:	e1 e6       	ldi	r30, 0x61	; 97
    1abc:	fd e0       	ldi	r31, 0x0D	; 13
    1abe:	0c 94 0f 0e 	jmp	0x1c1e	; 0x1c1e <__prologue_saves__+0x1c>
    1ac2:	0e 89       	ldd	r16, Y+22	; 0x16
    1ac4:	1f 89       	ldd	r17, Y+23	; 0x17
    1ac6:	86 e0       	ldi	r24, 0x06	; 6
    1ac8:	8d 83       	std	Y+5, r24	; 0x05
    1aca:	1a 83       	std	Y+2, r17	; 0x02
    1acc:	09 83       	std	Y+1, r16	; 0x01
    1ace:	8f ef       	ldi	r24, 0xFF	; 255
    1ad0:	9f e7       	ldi	r25, 0x7F	; 127
    1ad2:	9f 83       	std	Y+7, r25	; 0x07
    1ad4:	8e 83       	std	Y+6, r24	; 0x06
    1ad6:	9e 01       	movw	r18, r28
    1ad8:	25 5e       	subi	r18, 0xE5	; 229
    1ada:	3f 4f       	sbci	r19, 0xFF	; 255
    1adc:	48 8d       	ldd	r20, Y+24	; 0x18
    1ade:	59 8d       	ldd	r21, Y+25	; 0x19
    1ae0:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1ae2:	ce 01       	movw	r24, r28
    1ae4:	01 96       	adiw	r24, 0x01	; 1
    1ae6:	0e 94 1d 01 	call	0x23a	; 0x23a <vfprintf>
    1aea:	e8 85       	ldd	r30, Y+8	; 0x08
    1aec:	f9 85       	ldd	r31, Y+9	; 0x09
    1aee:	e0 0f       	add	r30, r16
    1af0:	f1 1f       	adc	r31, r17
    1af2:	10 82       	st	Z, r1
    1af4:	2f 96       	adiw	r28, 0x0f	; 15
    1af6:	e4 e0       	ldi	r30, 0x04	; 4
    1af8:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <__epilogue_restores__+0x1c>

Disassembly of section .text.avrlibc:

0000121e <__ultoa_invert>:
    121e:	fa 01       	movw	r30, r20
    1220:	aa 27       	eor	r26, r26
    1222:	28 30       	cpi	r18, 0x08	; 8
    1224:	51 f1       	breq	.+84     	; 0x127a <__ultoa_invert+0x5c>
    1226:	20 31       	cpi	r18, 0x10	; 16
    1228:	81 f1       	breq	.+96     	; 0x128a <__ultoa_invert+0x6c>
    122a:	e8 94       	clt
    122c:	6f 93       	push	r22
    122e:	6e 7f       	andi	r22, 0xFE	; 254
    1230:	6e 5f       	subi	r22, 0xFE	; 254
    1232:	7f 4f       	sbci	r23, 0xFF	; 255
    1234:	8f 4f       	sbci	r24, 0xFF	; 255
    1236:	9f 4f       	sbci	r25, 0xFF	; 255
    1238:	af 4f       	sbci	r26, 0xFF	; 255
    123a:	b1 e0       	ldi	r27, 0x01	; 1
    123c:	3e d0       	rcall	.+124    	; 0x12ba <__ultoa_invert+0x9c>
    123e:	b4 e0       	ldi	r27, 0x04	; 4
    1240:	3c d0       	rcall	.+120    	; 0x12ba <__ultoa_invert+0x9c>
    1242:	67 0f       	add	r22, r23
    1244:	78 1f       	adc	r23, r24
    1246:	89 1f       	adc	r24, r25
    1248:	9a 1f       	adc	r25, r26
    124a:	a1 1d       	adc	r26, r1
    124c:	68 0f       	add	r22, r24
    124e:	79 1f       	adc	r23, r25
    1250:	8a 1f       	adc	r24, r26
    1252:	91 1d       	adc	r25, r1
    1254:	a1 1d       	adc	r26, r1
    1256:	6a 0f       	add	r22, r26
    1258:	71 1d       	adc	r23, r1
    125a:	81 1d       	adc	r24, r1
    125c:	91 1d       	adc	r25, r1
    125e:	a1 1d       	adc	r26, r1
    1260:	20 d0       	rcall	.+64     	; 0x12a2 <__ultoa_invert+0x84>
    1262:	09 f4       	brne	.+2      	; 0x1266 <__ultoa_invert+0x48>
    1264:	68 94       	set
    1266:	3f 91       	pop	r19
    1268:	2a e0       	ldi	r18, 0x0A	; 10
    126a:	26 9f       	mul	r18, r22
    126c:	11 24       	eor	r1, r1
    126e:	30 19       	sub	r19, r0
    1270:	30 5d       	subi	r19, 0xD0	; 208
    1272:	31 93       	st	Z+, r19
    1274:	de f6       	brtc	.-74     	; 0x122c <__ultoa_invert+0xe>
    1276:	cf 01       	movw	r24, r30
    1278:	08 95       	ret
    127a:	46 2f       	mov	r20, r22
    127c:	47 70       	andi	r20, 0x07	; 7
    127e:	40 5d       	subi	r20, 0xD0	; 208
    1280:	41 93       	st	Z+, r20
    1282:	b3 e0       	ldi	r27, 0x03	; 3
    1284:	0f d0       	rcall	.+30     	; 0x12a4 <__ultoa_invert+0x86>
    1286:	c9 f7       	brne	.-14     	; 0x127a <__ultoa_invert+0x5c>
    1288:	f6 cf       	rjmp	.-20     	; 0x1276 <__ultoa_invert+0x58>
    128a:	46 2f       	mov	r20, r22
    128c:	4f 70       	andi	r20, 0x0F	; 15
    128e:	40 5d       	subi	r20, 0xD0	; 208
    1290:	4a 33       	cpi	r20, 0x3A	; 58
    1292:	18 f0       	brcs	.+6      	; 0x129a <__ultoa_invert+0x7c>
    1294:	49 5d       	subi	r20, 0xD9	; 217
    1296:	31 fd       	sbrc	r19, 1
    1298:	40 52       	subi	r20, 0x20	; 32
    129a:	41 93       	st	Z+, r20
    129c:	02 d0       	rcall	.+4      	; 0x12a2 <__ultoa_invert+0x84>
    129e:	a9 f7       	brne	.-22     	; 0x128a <__ultoa_invert+0x6c>
    12a0:	ea cf       	rjmp	.-44     	; 0x1276 <__ultoa_invert+0x58>
    12a2:	b4 e0       	ldi	r27, 0x04	; 4
    12a4:	a6 95       	lsr	r26
    12a6:	97 95       	ror	r25
    12a8:	87 95       	ror	r24
    12aa:	77 95       	ror	r23
    12ac:	67 95       	ror	r22
    12ae:	ba 95       	dec	r27
    12b0:	c9 f7       	brne	.-14     	; 0x12a4 <__ultoa_invert+0x86>
    12b2:	00 97       	sbiw	r24, 0x00	; 0
    12b4:	61 05       	cpc	r22, r1
    12b6:	71 05       	cpc	r23, r1
    12b8:	08 95       	ret
    12ba:	9b 01       	movw	r18, r22
    12bc:	ac 01       	movw	r20, r24
    12be:	0a 2e       	mov	r0, r26
    12c0:	06 94       	lsr	r0
    12c2:	57 95       	ror	r21
    12c4:	47 95       	ror	r20
    12c6:	37 95       	ror	r19
    12c8:	27 95       	ror	r18
    12ca:	ba 95       	dec	r27
    12cc:	c9 f7       	brne	.-14     	; 0x12c0 <__ultoa_invert+0xa2>
    12ce:	62 0f       	add	r22, r18
    12d0:	73 1f       	adc	r23, r19
    12d2:	84 1f       	adc	r24, r20
    12d4:	95 1f       	adc	r25, r21
    12d6:	a0 1d       	adc	r26, r0
    12d8:	08 95       	ret

Disassembly of section .text.avrlibc:

00001f14 <__ctype_isfalse>:
    1f14:	99 27       	eor	r25, r25
    1f16:	88 27       	eor	r24, r24

00001f18 <__ctype_istrue>:
    1f18:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00001daa <__mulsi3>:
    1daa:	db 01       	movw	r26, r22
    1dac:	8f 93       	push	r24
    1dae:	9f 93       	push	r25
    1db0:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <__muluhisi3>
    1db4:	bf 91       	pop	r27
    1db6:	af 91       	pop	r26
    1db8:	a2 9f       	mul	r26, r18
    1dba:	80 0d       	add	r24, r0
    1dbc:	91 1d       	adc	r25, r1
    1dbe:	a3 9f       	mul	r26, r19
    1dc0:	90 0d       	add	r25, r0
    1dc2:	b2 9f       	mul	r27, r18
    1dc4:	90 0d       	add	r25, r0
    1dc6:	11 24       	eor	r1, r1
    1dc8:	08 95       	ret

Disassembly of section .text.libgcc.div:

00001b40 <__udivmodsi4>:
    1b40:	a1 e2       	ldi	r26, 0x21	; 33
    1b42:	1a 2e       	mov	r1, r26
    1b44:	aa 1b       	sub	r26, r26
    1b46:	bb 1b       	sub	r27, r27
    1b48:	fd 01       	movw	r30, r26
    1b4a:	0d c0       	rjmp	.+26     	; 0x1b66 <__udivmodsi4_ep>

00001b4c <__udivmodsi4_loop>:
    1b4c:	aa 1f       	adc	r26, r26
    1b4e:	bb 1f       	adc	r27, r27
    1b50:	ee 1f       	adc	r30, r30
    1b52:	ff 1f       	adc	r31, r31
    1b54:	a2 17       	cp	r26, r18
    1b56:	b3 07       	cpc	r27, r19
    1b58:	e4 07       	cpc	r30, r20
    1b5a:	f5 07       	cpc	r31, r21
    1b5c:	20 f0       	brcs	.+8      	; 0x1b66 <__udivmodsi4_ep>
    1b5e:	a2 1b       	sub	r26, r18
    1b60:	b3 0b       	sbc	r27, r19
    1b62:	e4 0b       	sbc	r30, r20
    1b64:	f5 0b       	sbc	r31, r21

00001b66 <__udivmodsi4_ep>:
    1b66:	66 1f       	adc	r22, r22
    1b68:	77 1f       	adc	r23, r23
    1b6a:	88 1f       	adc	r24, r24
    1b6c:	99 1f       	adc	r25, r25
    1b6e:	1a 94       	dec	r1
    1b70:	69 f7       	brne	.-38     	; 0x1b4c <__udivmodsi4_loop>
    1b72:	60 95       	com	r22
    1b74:	70 95       	com	r23
    1b76:	80 95       	com	r24
    1b78:	90 95       	com	r25
    1b7a:	9b 01       	movw	r18, r22
    1b7c:	ac 01       	movw	r20, r24
    1b7e:	bd 01       	movw	r22, r26
    1b80:	cf 01       	movw	r24, r30
    1b82:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00001e36 <__muluhisi3>:
    1e36:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__umulhisi3>
    1e3a:	a5 9f       	mul	r26, r21
    1e3c:	90 0d       	add	r25, r0
    1e3e:	b4 9f       	mul	r27, r20
    1e40:	90 0d       	add	r25, r0
    1e42:	a4 9f       	mul	r26, r20
    1e44:	80 0d       	add	r24, r0
    1e46:	91 1d       	adc	r25, r1
    1e48:	11 24       	eor	r1, r1
    1e4a:	08 95       	ret
